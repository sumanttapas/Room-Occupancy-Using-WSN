<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="66:RoomOccAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x405b5ea0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404599c8"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404599c8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405a7010"/></to>
    </wire>
    <wire loc="68:RoomOccAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405cc298"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bee758"/></to>
    </wire>
    <wire loc="54:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bee758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e5ac0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:RoomOccAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405d47d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ba2280"/></to>
    </wire>
    <wire loc="64:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ba2280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40eec4b8"/></to>
    </wire>
    <wire loc="70:RoomOccAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x405eb1f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4060f760"/></to>
    </wire>
    <wire loc="76:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4060f760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409006b8"/></to>
    </wire>
    <wire loc="71:RoomOccAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405b5298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4059fba8"/></to>
    </wire>
    <wire loc="51:/home/sumant/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4059fba8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405f5358"/></to>
    </wire>
    <wire loc="72:RoomOccAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x405dc968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40be9a30"/></to>
    </wire>
    <wire loc="52:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40be9a30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40738940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:RoomOccAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405e39d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ba2918"/></to>
    </wire>
    <wire loc="65:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ba2918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40eecb50"/></to>
    </wire>
    <wire loc="74:RoomOccAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x405e04d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406103b8"/></to>
    </wire>
    <wire loc="24:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406103b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4060daf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/sumant/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40aaeb48"/></to>
    </wire>
    <wire loc="93:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40962df8"/></to>
    </wire>
    <wire loc="94:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a4f7d8"/></to>
    </wire>
    <wire loc="103:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e9a260"/></to>
    </wire>
    <wire loc="53:/home/sumant/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40730270"/></to>
    </wire>
    <wire loc="103:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e03a38"/></to>
    </wire>
    <wire loc="103:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40df5aa0"/></to>
    </wire>
    <wire loc="103:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40de7998"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x405a73a8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c3ed8"/></to>
    </wire>
    <wire loc="53:/home/sumant/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403c3ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40435b00"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405a7970"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4045c010"/></to>
    </wire>
    <wire loc="58:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4045c010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40463a98"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405a7d78"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></to>
    </wire>
    <wire loc="26:/home/sumant/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40463010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b4d700"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40463010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4084a060"/></to>
    </wire>
    <wire loc="59:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40460830"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4059ca00"/></to>
    </wire>
    <wire loc="61:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404662a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4059c650"/></to>
    </wire>
    <wire loc="54:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40463e78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40612c88"/></to>
    </wire>
    <wire loc="62:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40463e78"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40462358"/></to>
    </wire>
    <wire loc="23:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40462358"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404682c0"/></to>
    </wire>
    <wire loc="24:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40462358"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40472140"/></to>
    </wire>
    <wire loc="63:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40462728"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40463010"/></to>
    </wire>
    <wire loc="53:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40472140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404a1130"/></to>
    </wire>
    <wire loc="54:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40472140"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404ba0b0"/></to>
    </wire>
    <wire loc="26:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4046c810"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x404d1670"/></to>
    </wire>
    <wire loc="141:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404d1670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40518f28"/></to>
    </wire>
    <wire loc="27:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4046f210"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40462728"/></to>
    </wire>
    <wire loc="56:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="CHP_OUT" scoped="" ref="0x404a4ec0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404d0a98"/></to>
    </wire>
    <wire loc="143:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404d0a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40522250"/></to>
    </wire>
    <wire loc="57:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PALE" scoped="" ref="0x4049e8d0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x404e0c08"/></to>
    </wire>
    <wire loc="168:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404e0c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4053a988"/></to>
    </wire>
    <wire loc="58:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PCLK" scoped="" ref="0x404a52e0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x404e70a0"/></to>
    </wire>
    <wire loc="170:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404e70a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40539c88"/></to>
    </wire>
    <wire loc="59:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="PDATA" scoped="" ref="0x404a5cd0"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x404e7a98"/></to>
    </wire>
    <wire loc="171:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404e7a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405386b0"/></to>
    </wire>
    <wire loc="61:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiSck" scoped="" ref="0x404bef10"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404d88e0"/></to>
    </wire>
    <wire loc="147:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404d88e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4051db80"/></to>
    </wire>
    <wire loc="62:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMiso" scoped="" ref="0x404b9930"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x404d7ce8"/></to>
    </wire>
    <wire loc="149:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404d7ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40528e48"/></to>
    </wire>
    <wire loc="63:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="SpiMosi" scoped="" ref="0x404b83d8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x404d72f0"/></to>
    </wire>
    <wire loc="148:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404d72f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405284f0"/></to>
    </wire>
    <wire loc="64:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <from><interface-ref name="OC1C" scoped="" ref="0x404b8dc0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404d4670"/></to>
    </wire>
    <wire loc="153:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404d4670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405254f0"/></to>
    </wire>
    <wire loc="191:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404f1750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4056ebd0"/></to>
    </wire>
    <wire loc="165:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404e2d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40531d30"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40531d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cbbde0"/></to>
    </wire>
    <wire loc="176:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404e42f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4053fac8"/></to>
    </wire>
    <wire loc="69:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4053fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cffc08"/></to>
    </wire>
    <wire loc="185:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404e94b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40542170"/></to>
    </wire>
    <wire loc="69:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40542170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d1d538"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40522250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c159e8"/></to>
    </wire>
    <wire loc="183:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404ea0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40544e70"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40544e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d20010"/></to>
    </wire>
    <wire loc="146:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404cfea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4051d228"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4051d228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c36938"/></to>
    </wire>
    <wire loc="157:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404dc4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4052ce48"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4052ce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c749e8"/></to>
    </wire>
    <wire loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4053a988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb6c08"/></to>
    </wire>
    <wire loc="179:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404ec210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4053d7d0"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4053d7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfaa88"/></to>
    </wire>
    <wire loc="138:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404d3750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40519250"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40519250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1d6c0"/></to>
    </wire>
    <wire loc="69:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40528e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c597f8"/></to>
    </wire>
    <wire loc="160:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404da2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4052aac8"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4052aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c999e8"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x405386b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb1a88"/></to>
    </wire>
    <wire loc="188:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404f22f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40541e48"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40541e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d44538"/></to>
    </wire>
    <wire loc="194:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404ef830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40572d00"/></to>
    </wire>
    <wire loc="174:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404e6ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40540790"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40540790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d027f8"/></to>
    </wire>
    <wire loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40518f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c18538"/></to>
    </wire>
    <wire loc="152:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404d5c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40526ac8"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40526ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c546c0"/></to>
    </wire>
    <wire loc="192:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404f03d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40577228"/></to>
    </wire>
    <wire loc="155:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404dd0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4052db00"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4052db00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c77538"/></to>
    </wire>
    <wire loc="166:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404e1750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405306b0"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x405306b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb97f8"/></to>
    </wire>
    <wire loc="177:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404e4ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4053e4f0"/></to>
    </wire>
    <wire loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4053e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfd6c0"/></to>
    </wire>
    <wire loc="186:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404e9ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40542ac8"/></to>
    </wire>
    <wire loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40542ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d1b010"/></to>
    </wire>
    <wire loc="144:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404cf4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40522ba8"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40522ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c13538"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4051db80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c5c3b0"/></to>
    </wire>
    <wire loc="158:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404dcea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4052b7d0"/></to>
    </wire>
    <wire loc="69:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4052b7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c72538"/></to>
    </wire>
    <wire loc="169:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404de670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40539330"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40539330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb46c0"/></to>
    </wire>
    <wire loc="180:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404ecc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4053c170"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4053c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cf8538"/></to>
    </wire>
    <wire loc="139:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404d2210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40519ba8"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40519ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1b0b0"/></to>
    </wire>
    <wire loc="150:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404d6750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405277d0"/></to>
    </wire>
    <wire loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x405277d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c57228"/></to>
    </wire>
    <wire loc="161:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404dace8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405294f0"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x405294f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c97538"/></to>
    </wire>
    <wire loc="189:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404f2ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4054c7d0"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4054c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d42010"/></to>
    </wire>
    <wire loc="164:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404e2210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405313d8"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x405313d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cbc418"/></to>
    </wire>
    <wire loc="175:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404e58e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4053f170"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4053f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d00228"/></to>
    </wire>
    <wire loc="184:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404eaa98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405437f0"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x405437f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d1f9e8"/></to>
    </wire>
    <wire loc="195:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404ee2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4057d260"/></to>
    </wire>
    <wire loc="142:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404d00a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40517890"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40517890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c16010"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x405254f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c520b0"/></to>
    </wire>
    <wire loc="182:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404eb670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40544518"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40544518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d22538"/></to>
    </wire>
    <wire loc="156:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404dda98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4052c4f0"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4052c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c75010"/></to>
    </wire>
    <wire loc="167:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404e0210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4053a030"/></to>
    </wire>
    <wire loc="69:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4053a030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb7228"/></to>
    </wire>
    <wire loc="178:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404e3750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4053ee48"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4053ee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfb0b0"/></to>
    </wire>
    <wire loc="187:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404e88e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405414f0"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x405414f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d469e8"/></to>
    </wire>
    <wire loc="137:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40470cb8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4051a8e0"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4051a8e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1fbd0"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x405284f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c5bd70"/></to>
    </wire>
    <wire loc="159:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404db8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4052a170"/></to>
    </wire>
    <wire loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4052a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c9a010"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40539c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb20b0"/></to>
    </wire>
    <wire loc="193:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404f0dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40575788"/></to>
    </wire>
    <wire loc="173:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404e64b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40535dc8"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40535dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cdcde8"/></to>
    </wire>
    <wire loc="162:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404d9750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40529e48"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40529e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c95010"/></to>
    </wire>
    <wire loc="140:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404d2c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405185d0"/></to>
    </wire>
    <wire loc="69:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x405185d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1aa88"/></to>
    </wire>
    <wire loc="151:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404d5210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40526170"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40526170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c56c08"/></to>
    </wire>
    <wire loc="54:/home/sumant/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4043b3a0"/></to>
    </wire>
    <wire loc="55:/home/sumant/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4043a040"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403be8e8"/></to>
    </wire>
    <wire loc="58:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4044f670"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407ab7b8"/></to>
    </wire>
    <wire loc="53:/home/sumant/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40612c88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405f5010"/></to>
    </wire>
    <wire loc="54:/home/sumant/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40604030"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x405f7e38"/></to>
    </wire>
    <wire loc="56:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405f7e38"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x404d2210"/></to>
    </wire>
    <wire loc="55:/home/sumant/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40604a18"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40613880"/></to>
    </wire>
    <wire loc="57:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40613880"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x404d3750"/></to>
    </wire>
    <wire loc="56:/home/sumant/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x406034a0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40612300"/></to>
    </wire>
    <wire loc="58:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40612300"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40470cb8"/></to>
    </wire>
    <wire loc="10:/home/sumant/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4060daf8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x408d1b78"/></to>
    </wire>
    <wire loc="11:/home/sumant/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x408d08a8"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x406167d8"/></to>
    </wire>
    <wire loc="30:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x406167d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40724010"/></to>
    </wire>
    <wire loc="12:/home/sumant/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408ce500"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x406171b8"/></to>
    </wire>
    <wire loc="23:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x406171b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406e8e18"/></to>
    </wire>
    <wire loc="46:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x406227f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4071d998"/></to>
    </wire>
    <wire loc="105:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406e8e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40df1010"/></to>
    </wire>
    <wire loc="33:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x40617c70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406e5b68"/></to>
    </wire>
    <wire loc="105:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406e5b68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e30010"/></to>
    </wire>
    <wire loc="24:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406f17b8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406e79b0"/></to>
    </wire>
    <wire loc="107:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406e79b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40df1b58"/></to>
    </wire>
    <wire loc="25:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406f1e50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x406e6070"/></to>
    </wire>
    <wire loc="108:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406e6070"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40df0230"/></to>
    </wire>
    <wire loc="26:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406f2eb8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4070e898"/></to>
    </wire>
    <wire loc="27:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x40724be8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406ea0c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407233a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40729660"/></to>
    </wire>
    <wire loc="52:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40729660"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40738940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40720598"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x40628580"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40628580"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404e3750"/></to>
    </wire>
    <wire loc="31:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x4071f010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x408349e0"/></to>
    </wire>
    <wire loc="36:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x408349e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4082d430"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407118e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406e46d0"/></to>
    </wire>
    <wire loc="107:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406e46d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e30b58"/></to>
    </wire>
    <wire loc="35:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40710010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x406e4d68"/></to>
    </wire>
    <wire loc="108:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406e4d68"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e2f230"/></to>
    </wire>
    <wire loc="36:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40711010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4071d2b8"/></to>
    </wire>
    <wire loc="37:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x4071c5b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406ea0c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4071ccd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40729660"/></to>
    </wire>
    <wire loc="42:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x4072c010"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x406209e0"/></to>
    </wire>
    <wire loc="59:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x406209e0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x404dd0a0"/></to>
    </wire>
    <wire loc="47:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x4072c9f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x408349e0"/></to>
    </wire>
    <wire loc="49:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408335a8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406955a8"/></to>
    </wire>
    <wire loc="50:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x40695ba8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x4062f3e0"/></to>
    </wire>
    <wire loc="93:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x4062f3e0"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x4062dda8"/></to>
    </wire>
    <wire loc="82:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x40625368"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40690638"/></to>
    </wire>
    <wire loc="92:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x4062f010"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x4062d9d8"/></to>
    </wire>
    <wire loc="62:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x4062c850"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x404dcea8"/></to>
    </wire>
    <wire loc="65:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x4062a730"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x404dace8"/></to>
    </wire>
    <wire loc="95:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x4062fb80"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x4063a5d8"/></to>
    </wire>
    <wire loc="97:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x4062e3e0"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x4063ad78"/></to>
    </wire>
    <wire loc="74:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x40632d38"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x404e0210"/></to>
    </wire>
    <wire loc="60:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x4061d490"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x404dda98"/></to>
    </wire>
    <wire loc="63:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x4062b2d0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x404db8e0"/></to>
    </wire>
    <wire loc="90:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x40634198"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4068c808"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x40632318"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x404e1750"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x40629118"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x404d9750"/></to>
    </wire>
    <wire loc="78:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x40633b98"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40676560"/></to>
    </wire>
    <wire loc="98:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x4062e8b0"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40639208"/></to>
    </wire>
    <wire loc="69:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40627010"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x404ec210"/></to>
    </wire>
    <wire loc="61:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x4061de68"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x404dc4b0"/></to>
    </wire>
    <wire loc="64:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x4062bca8"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x404da2f0"/></to>
    </wire>
    <wire loc="94:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x4062f7b0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x4063a208"/></to>
    </wire>
    <wire loc="96:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x4062e010"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x4063a9a8"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40629b00"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404e4ce8"/></to>
    </wire>
    <wire loc="86:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x40625a58"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x4068e758"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x40634838"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x404de670"/></to>
    </wire>
    <wire loc="99:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x4062ec80"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x406395d8"/></to>
    </wire>
    <wire loc="70:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x406279f8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x404ecc08"/></to>
    </wire>
    <wire loc="77:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40676b58"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x4063d338"/></to>
    </wire>
    <wire loc="75:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x4063d338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40672408"/></to>
    </wire>
    <wire loc="81:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40690c30"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x4063dbb8"/></to>
    </wire>
    <wire loc="76:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x4063dbb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x406705e8"/></to>
    </wire>
    <wire loc="85:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x4068ed50"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x4064c4f8"/></to>
    </wire>
    <wire loc="77:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x4064c4f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4066d840"/></to>
    </wire>
    <wire loc="89:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x4068ce00"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x4064cd78"/></to>
    </wire>
    <wire loc="78:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x4064cd78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4067da08"/></to>
    </wire>
    <wire loc="72:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40640890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40668d60"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x4063f168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40665010"/></to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40640010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40648bf8"/></to>
    </wire>
    <wire loc="74:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x4063f9e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40674228"/></to>
    </wire>
    <wire loc="80:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40664430"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x40647980"/></to>
    </wire>
    <wire loc="81:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x406675f0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40647df8"/></to>
    </wire>
    <wire loc="82:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x406657c8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x406462b0"/></to>
    </wire>
    <wire loc="83:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x406749e0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40646728"/></to>
    </wire>
    <wire loc="84:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40672bc0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40646ba0"/></to>
    </wire>
    <wire loc="85:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40670da0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40645030"/></to>
    </wire>
    <wire loc="86:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4067e010"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x406454a8"/></to>
    </wire>
    <wire loc="87:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4067c270"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40645920"/></to>
    </wire>
    <wire loc="106:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x406ea808"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40de4618"/></to>
    </wire>
    <wire loc="107:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406eac10"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40de4a20"/></to>
    </wire>
    <wire loc="105:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406ea0c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40de5ea8"/></to>
    </wire>
    <wire loc="108:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x406e9310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40de2150"/></to>
    </wire>
    <wire loc="109:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40de2610"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406e97c0"/></to>
    </wire>
    <wire loc="111:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40de2a38"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40de7cd0"/></to>
    </wire>
    <wire loc="75:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40de1c28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x406e75a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40df1750"/></to>
    </wire>
    <wire loc="109:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40df06f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406e6520"/></to>
    </wire>
    <wire loc="111:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40df0b18"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40df5dd8"/></to>
    </wire>
    <wire loc="75:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40defd68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x406e42c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40e30750"/></to>
    </wire>
    <wire loc="109:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40e2f6f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406e22e8"/></to>
    </wire>
    <wire loc="111:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40e2fb18"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40e03d70"/></to>
    </wire>
    <wire loc="75:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40e2dd68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e43b80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406f2eb8"/></to>
    </wire>
    <wire loc="81:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x40e41150"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x406f14a0"/></to>
    </wire>
    <wire loc="83:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e41468"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406f17b8"/></to>
    </wire>
    <wire loc="84:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40e41b00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x406f1e50"/></to>
    </wire>
    <wire loc="78:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x40e40010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x40e40448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e356b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40711010"/></to>
    </wire>
    <wire loc="81:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x40e35c68"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x407115c8"/></to>
    </wire>
    <wire loc="83:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e34010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407118e0"/></to>
    </wire>
    <wire loc="84:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40e346a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40710010"/></to>
    </wire>
    <wire loc="78:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x40e34ae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x40e34f18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x4071fba8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x4072b5b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/sumant/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40738940"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40730a20"/></to>
    </wire>
    <wire loc="61:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40730a20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407f1a60"/></to>
    </wire>
    <wire loc="59:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40730270"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4073b240"/></to>
    </wire>
    <wire loc="65:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4073eaf0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40826460"/></to>
    </wire>
    <wire loc="35:/home/sumant/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4073b240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d05a8"/></to>
    </wire>
    <wire loc="62:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40813e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4073da88"/></to>
    </wire>
    <wire loc="63:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407f7e50"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40749978"/></to>
    </wire>
    <wire loc="36:/home/sumant/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40749978"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407d09e0"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40826df8"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x407442e0"/></to>
    </wire>
    <wire loc="37:/home/sumant/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x407442e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407e35b8"/></to>
    </wire>
    <wire loc="37:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407e35b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e77b70"/></to>
    </wire>
    <wire loc="35:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407d05a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e7ac38"/></to>
    </wire>
    <wire loc="36:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407d09e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e790a0"/></to>
    </wire>
    <wire loc="39:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e76d60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4078d488"/></to>
    </wire>
    <wire loc="60:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4078d488"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4079a010"/></to>
    </wire>
    <wire loc="40:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40e72010"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407a0760"/></to>
    </wire>
    <wire loc="61:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407a0760"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40797360"/></to>
    </wire>
    <wire loc="41:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40e72838"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4079f0f0"/></to>
    </wire>
    <wire loc="62:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4079f0f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40797cc0"/></to>
    </wire>
    <wire loc="42:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40e70278"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x4079ec30"/></to>
    </wire>
    <wire loc="63:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x4079ec30"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407abc18"/></to>
    </wire>
    <wire loc="74:/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x407f5818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40827050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4082b7c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408335a8"/></to>
    </wire>
    <wire loc="38:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40840018"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4083c010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4083a418"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40833a80"/></to>
    </wire>
    <wire loc="30:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4082d430"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4089b8c0"/></to>
    </wire>
    <wire loc="31:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40841840"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x408b25b8"/></to>
    </wire>
    <wire loc="32:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408c2218"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40840018"/></to>
    </wire>
    <wire loc="33:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408b1ab0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4082b7c8"/></to>
    </wire>
    <wire loc="35:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x408c35e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4089a610"/></to>
    </wire>
    <wire loc="36:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x408b1238"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x408389e8"/></to>
    </wire>
    <wire loc="68:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x408389e8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x408478b0"/></to>
    </wire>
    <wire loc="69:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4084cb88"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40847e38"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4083c010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4086a438"/></to>
    </wire>
    <wire loc="105:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4086a438"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e99748"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4087fb58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4083a418"/></to>
    </wire>
    <wire loc="73:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40856818"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40869298"/></to>
    </wire>
    <wire loc="50:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40869298"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40868eb0"/></to>
    </wire>
    <wire loc="74:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40848ce8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40460830"/></to>
    </wire>
    <wire loc="76:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40891da8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40847420"/></to>
    </wire>
    <wire loc="77:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40890548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4087f010"/></to>
    </wire>
    <wire loc="107:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4087f010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e982e0"/></to>
    </wire>
    <wire loc="51:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4087d3b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40448680"/></to>
    </wire>
    <wire loc="106:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4086ab78"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40e99e88"/></to>
    </wire>
    <wire loc="108:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4087f6a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e98978"/></to>
    </wire>
    <wire loc="109:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40e98e38"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4087fb58"/></to>
    </wire>
    <wire loc="111:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40e97290"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40e9a598"/></to>
    </wire>
    <wire loc="75:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40e96510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40edf040"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40891da8"/></to>
    </wire>
    <wire loc="82:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x40edf438"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40890230"/></to>
    </wire>
    <wire loc="84:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40edf750"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40890548"/></to>
    </wire>
    <wire loc="85:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40edfde8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40890be0"/></to>
    </wire>
    <wire loc="103:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x408a71e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409006b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409473b0"/></to>
    </wire>
    <wire loc="78:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408e5100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408fa010"/></to>
    </wire>
    <wire loc="80:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408fa010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x409052a8"/></to>
    </wire>
    <wire loc="80:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408e3178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408f9100"/></to>
    </wire>
    <wire loc="82:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408f9100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40904310"/></to>
    </wire>
    <wire loc="81:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408e34d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408f80a0"/></to>
    </wire>
    <wire loc="76:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408f80a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40945400"/></to>
    </wire>
    <wire loc="85:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408f09d8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408f7288"/></to>
    </wire>
    <wire loc="90:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408f7288"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40944af8"/></to>
    </wire>
    <wire loc="86:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408fd898"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4090b120"/></to>
    </wire>
    <wire loc="93:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4090b120"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40944200"/></to>
    </wire>
    <wire loc="79:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408e5ac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408fa9d0"/></to>
    </wire>
    <wire loc="81:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408fa9d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40905c68"/></to>
    </wire>
    <wire loc="83:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ef640"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f8818"/></to>
    </wire>
    <wire loc="77:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f8818"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4093f860"/></to>
    </wire>
    <wire loc="82:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408f23b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408f9470"/></to>
    </wire>
    <wire loc="83:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408f9470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40904680"/></to>
    </wire>
    <wire loc="84:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408e1010"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4090fc38"/></to>
    </wire>
    <wire loc="91:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4090fc38"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4093e578"/></to>
    </wire>
    <wire loc="96:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409473b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409611d0"/></to>
    </wire>
    <wire loc="133:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4093e578"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409c5488"/></to>
    </wire>
    <wire loc="99:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40945400"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409ca870"/></to>
    </wire>
    <wire loc="132:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40944af8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x409c8a20"/></to>
    </wire>
    <wire loc="92:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40907aa0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4093dcb0"/></to>
    </wire>
    <wire loc="134:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4093dcb0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409c4c38"/></to>
    </wire>
    <wire loc="103:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40944200"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40960120"/></to>
    </wire>
    <wire loc="104:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4093f860"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409c9da8"/></to>
    </wire>
    <wire loc="78:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40910c10"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4093fdf0"/></to>
    </wire>
    <wire loc="105:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4093fdf0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409c83c8"/></to>
    </wire>
    <wire loc="85:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40917450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40947998"/></to>
    </wire>
    <wire loc="97:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40947998"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409cbd98"/></to>
    </wire>
    <wire loc="86:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40917bb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409450a8"/></to>
    </wire>
    <wire loc="98:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409450a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409ca518"/></to>
    </wire>
    <wire loc="87:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x4091e958"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x40adfa80"/></to>
    </wire>
    <wire loc="88:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4091e010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40945400"/></to>
    </wire>
    <wire loc="101:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaControl" scoped="" ref="0x409427d0"/></from>
      <to><interface-ref name="CsmaControl" scoped="" ref="0x409617f8"/></to>
    </wire>
    <wire loc="102:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CsmaBackoff" scoped="" ref="0x4093f388"/></from>
      <to><interface-ref name="CsmaBackoff" scoped="" ref="0x40961c60"/></to>
    </wire>
    <wire loc="107:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x4096e8f0"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x40a743f8"/></to>
    </wire>
    <wire loc="108:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40957c10"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40acee98"/></to>
    </wire>
    <wire loc="56:/home/sumant/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40acee98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40acc948"/></to>
    </wire>
    <wire loc="109:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x4096ba50"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x40a4fb78"/></to>
    </wire>
    <wire loc="110:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="WakeupTimer" scoped="" ref="0x4096c1c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ab09a0"/></to>
    </wire>
    <wire loc="52:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ab09a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40738940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadio" scoped="" ref="0x40958390"/></from>
      <to><interface-ref name="ByteRadio" scoped="" ref="0x409c9010"/></to>
    </wire>
    <wire loc="112:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioInit" scoped="" ref="0x409607f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409cb5f0"/></to>
    </wire>
    <wire loc="113:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ByteRadioControl" scoped="" ref="0x40960c38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409cb970"/></to>
    </wire>
    <wire loc="115:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Control" scoped="" ref="0x409c2308"/></from>
      <to><interface-ref name="CC1000Control" scoped="" ref="0x40a743f8"/></to>
    </wire>
    <wire loc="116:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x409c1250"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x40abb390"/></to>
    </wire>
    <wire loc="59:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000Spi" scoped="" ref="0x40abb390"/></from>
      <to><interface-ref name="HplCC1000Spi" scoped="" ref="0x404be3f8"/></to>
    </wire>
    <wire loc="117:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="amAddress" scoped="" ref="0x409bf330"/></from>
      <to><function-ref name="amAddress" scoped="" ref="0x40adfa80"/></to>
    </wire>
    <wire loc="118:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiRx" scoped="" ref="0x409c04a0"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x40a4d120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC1000Squelch" scoped="" ref="0x409c1d70"/></from>
      <to><interface-ref name="CC1000Squelch" scoped="" ref="0x40a4fb78"/></to>
    </wire>
    <wire loc="121:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiNoiseFloor" scoped="" ref="0x40967338"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x40a4d120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiCheckChannel" scoped="" ref="0x40966108"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x40a4d120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="RssiPulseCheck" scoped="" ref="0x40966e80"/></from>
      <to><interface-ref name="Rssi" scoped="" ref="0x40a4d120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><function-ref name="cancelRssi" scoped="" ref="0x40981ca0"/></from>
      <to><function-ref name="cancel" scoped="" ref="0x40a4df08"/></to>
    </wire>
    <wire loc="125:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40965728"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40ac2d08"/></to>
    </wire>
    <wire loc="127:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="ActualRssi" scoped="" ref="0x40a4c978"/></from>
      <to><interface-ref name="RssiAdc" scoped="" ref="0x40a9cf08"/></to>
    </wire>
    <wire loc="60:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiAdc" scoped="" ref="0x40a9cf08"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40ab8560"/></to>
    </wire>
    <wire loc="128:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a4c128"/></from>
      <to><interface-ref name="RssiResource" scoped="" ref="0x40abdbc0"/></to>
    </wire>
    <wire loc="61:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40abdbc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ab9db8"/></to>
    </wire>
    <wire loc="129:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="CC" scoped="" ref="0x40a73388"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x40abbe08"/></to>
    </wire>
    <wire loc="58:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="HplCC1000" scoped="" ref="0x40abbe08"/></from>
      <to><interface-ref name="HplCC1000" scoped="" ref="0x4049de98"/></to>
    </wire>
    <wire loc="130:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a73b50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40ac2d08"/></to>
    </wire>
    <wire loc="137:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40acf0a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40af0010"/></to>
    </wire>
    <wire loc="33:/home/sumant/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40af0010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40aed7f0"/></to>
    </wire>
    <wire loc="138:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x409bf670"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ad06b8"/></to>
    </wire>
    <wire loc="142:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x409be0c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4073eaf0"/></to>
    </wire>
    <wire loc="119:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="setWakeupTask" scoped="" ref="0x4097d8f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="startStopDone" scoped="" ref="0x4098d648"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="304:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="sleepCheck" scoped="" ref="0x4099f240"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="327:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <from><interface-ref name="adjustSquelch" scoped="" ref="0x4099db98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="417:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketSent" scoped="" ref="0x409feda0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="594:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <from><interface-ref name="signalPacketReceived" scoped="" ref="0x40a202a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40ab8560"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40841840"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ab9db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4083c010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ab3158"/></from>
      <to><interface-ref name="RssiConfig" scoped="" ref="0x404a48d0"/></to>
    </wire>
    <wire loc="40:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4082b7c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ab3158"/></to>
    </wire>
    <wire loc="42:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4083a418"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ab3630"/></to>
    </wire>
    <wire loc="55:/home/sumant/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40ace5d8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40acc088"/></to>
    </wire>
    <wire loc="54:/home/sumant/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ab1338"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40aaeb48"/></to>
    </wire>
    <wire loc="34:/home/sumant/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40b7bae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40aefa00"/></to>
    </wire>
    <wire loc="31:/home/sumant/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40aefa00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b66320"/></to>
    </wire>
    <wire loc="32:/home/sumant/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b65568"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ae83e0"/></to>
    </wire>
    <wire loc="55:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ae83e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40afab10"/></to>
    </wire>
    <wire loc="56:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40b02360"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40af5e78"/></to>
    </wire>
    <wire loc="57:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40ae4190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40af4b88"/></to>
    </wire>
    <wire loc="59:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40afc3d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40af1a80"/></to>
    </wire>
    <wire loc="60:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40afc3d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b136a0"/></to>
    </wire>
    <wire loc="61:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40afc3d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b10340"/></to>
    </wire>
    <wire loc="63:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40b0fe98"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407a0760"/></to>
    </wire>
    <wire loc="27:/home/sumant/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b4dae8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ae83e0"/></to>
    </wire>
    <wire loc="52:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b8d5c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40738940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40eec4b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f1be40"/></to>
    </wire>
    <wire loc="64:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40eecb50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408e34d0"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bf1010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40eeb230"/></to>
    </wire>
    <wire loc="65:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40eeb230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408f23b8"/></to>
    </wire>
    <wire loc="67:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40bf1c08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40eebe28"/></to>
    </wire>
    <wire loc="66:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40eebe28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ef640"/></to>
    </wire>
    <wire loc="60:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f17540"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb2220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f17bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408f23b8"/></to>
    </wire>
    <wire loc="53:/home/sumant/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bb2220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bd4348"/></to>
    </wire>
    <wire loc="54:/home/sumant/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40bd4ab8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408e5100"/></to>
    </wire>
    <wire loc="55:/home/sumant/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bd3230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408f23b8"/></to>
    </wire>
    <wire loc="56:/home/sumant/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40bd3e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408e34d0"/></to>
    </wire>
    <wire loc="169:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40bd2510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40bd2948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40beea70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408e34d0"/></to>
    </wire>
    <wire loc="56:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bed150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408f23b8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/sumant/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/sumant/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/sumant/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/platforms/mica/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <documentation loc="10:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="15:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformP.nc" safe="">
      <documentation loc="10:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
        <short>&#10; The portion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The portion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000InitP" loc="47:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
        <short>&#10; Hardware initialisation for the CC1000 radio.</short>
        <long>&#10; Hardware initialisation for the CC1000 radio. This component is always&#10; included even if the radio is not used.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000P" loc="52:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC1000SpiP" loc="51:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc" safe="">
      <documentation loc="42:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
        <short>&#10; Low-level functions to access the CC1000 bus.</short>
        <long>&#10; Low-level functions to access the CC1000 bus. Built using the mica2&#10; hardware SPI.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/sumant/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/sumant/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/sumant/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/sumant/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/sumant/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/sumant/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RoomOccC" loc="57:RoomOccC.nc" safe="">
      <documentation loc="46:RoomOccC.nc">
        <short>&#10; Implementation of the RadioSenseToLeds application.</short>
        <long>&#10; Implementation of the RadioSenseToLeds application.  RadioSenseToLeds samples &#10; a platform's default sensor at 4Hz and broadcasts this value in an AM packet. &#10; A RadioSenseToLeds node that hears a broadcast displays the bottom three bits &#10; of the value it has received. This application is a useful test to show that &#10; basic AM communication, timers, and the default sensor work.&#10; &#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/sumant/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/sumant/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/sumant/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RoomOccAppC.Sensor" loc="18(RoomOccAppC.Sensor):/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="32:/home/sumant/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/home/sumant/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/home/sumant/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempP" loc="14:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/sumant/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/sumant/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40748de0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/sumant/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="57:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <documentation loc="49:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
        <short>&#10; The Active Message layer on the mica2 platform.</short>
        <long>&#10; The Active Message layer on the mica2 platform. This is a naming wrapper&#10; around the CC1000 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageC" loc="53:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer for the CC1000 radio.</short>
        <long>&#10;&#10; The Active Message layer for the CC1000 radio. This configuration&#10; just layers the AM dispatch (CC1000ActiveMessageM) on top of the&#10; underlying CC1000 radio packet (CC1000CsmaRadioC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group).&#10; &#10; @author Philip Levis&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000ActiveMessageP" loc="49:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc" safe="">
      <documentation loc="42:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
        <short>&#10; Implementation component for CC1000ActiveMessageC.</short>
        <long>&#10; Implementation component for CC1000ActiveMessageC.&#10;&#10; @author Philip Levis&#10; @date June 19 2006&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC" loc="64:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
        <short>&#10; A low-power-listening CC1000 radio stack.</short>
        <long>&#10; A low-power-listening CC1000 radio stack.&#10;&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). &#10;&#10; CC1000RssiP (RSSI sharing), CC1000SquelchP (noise-floor estimation)&#10; and CC1000ControlP (radio configuration) provide supporting roles.&#10;&#10; This code has some degree of platform-independence, via the HplCC1000,&#10; RssiAdc and HplCC1000Spi interfaces which must be provided by the&#10; platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC1000CsmaP" loc="64:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc" safe="">
      <documentation loc="48:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the CSMA and low-power listening logic. Actual&#10; packet transmission and reception is in SendReceive.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SendReceiveP" loc="66:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc" safe="">
      <documentation loc="46:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
        <short>&#10; A rewrite of the low-power-listening CC1000 radio stack.</short>
        <long>&#10; A rewrite of the low-power-listening CC1000 radio stack.&#10; This file contains the send and receive logic for the CC1000 radio.&#10; It does not do any media-access control. It requests the channel&#10; via the ready-to-send event (rts) and starts transmission on reception&#10; of the clear-to-send command (cts). It listens for packets if the&#10; listen() command is called, and stops listening when off() is called.&#10; &#60;p>&#10; This code has some degree of platform-independence, via the&#10; CC1000Control, RSSIADC and SpiByteFifo interfaces which must be provided&#10; by the platform. However, these interfaces may still reflect some&#10; particularities of the mica2 hardware implementation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10; @author Marco Langerwisch (Packet timestamping)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000RssiP" loc="55:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc" safe="">
      <documentation loc="41:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
        <short>&#10;   RSSI fun.</short>
        <long>&#10;   RSSI fun. It's used for lots of things, and a request to read it&#10;   for one purpose may have to be discarded if conditions change. For&#10;   example, if we've initiated a noise-floor measure, but start &#10;   receiving a packet, we have to:&#60;ul>&#10;   &#60;li>cancel the noise-floor measure (we don't know if the value will&#10;     reflect the received packet or the previous idle state)&#10;   &#60;li>start an RSSI measurement so that we can report signal strength&#10;     to the application&#10;   &#60;/ul>&#60;p>&#10;   This module hides the complexities of cancellation from the rest of&#10;   the stack.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000SquelchP" loc="51:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc" safe="">
      <documentation loc="42:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
        <short>&#10; Clear threshold estimation based on RSSI measurements.</short>
        <long>&#10; Clear threshold estimation based on RSSI measurements.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author Joe Polastre&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000ControlP" loc="52:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc" safe="">
      <documentation loc="43:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
        <short>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.</short>
        <long>&#10; This module provides the CONTROL functionality for the Chipcon1000&#10; series radio.  It exports a custom interface to control CC1000&#10; operation.&#10;&#10; @author Philip Buonadonna&#10; @author Jaein Jeong&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC1000C" loc="46:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
        <short>&#10; HPL for the CC1000 radio, for the mica2 platform.</short>
        <long>&#10; HPL for the CC1000 radio, for the mica2 platform.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC1000C.RssiChannel" loc="21(HplCC1000C.RssiChannel):/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/sumant/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/sumant/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/sumant/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.TimerMilliC" loc="44(CC1000CsmaRadioC.TimerMilliC):/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/sumant/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/sumant/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="49:/home/sumant/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc" safe="">
      <documentation loc="40:/home/sumant/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/sumant/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/sumant/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="TOne" ref="0x404319a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="TOne" ref="0x404319a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x40431ea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.CounterToLocalTimeC" loc="46(CC1000CsmaRadioC.CounterToLocalTimeC):/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC1000CsmaRadioC.DummyTimer" loc="44(CC1000CsmaRadioC.DummyTimer):/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RoomOccAppC.AMSenderC" loc="47(RoomOccAppC.AMSenderC):/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RoomOccAppC.AMSenderC.SenderC" loc="47(RoomOccAppC.AMSenderC.SenderC):/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RoomOccAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(RoomOccAppC.AMSenderC.SenderC.AMQueueEntryP):/home/sumant/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/sumant/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RoomOccAppC.AMReceiverC" loc="43(RoomOccAppC.AMReceiverC):/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RoomOccAppC.TimerMilliC" loc="44(RoomOccAppC.TimerMilliC):/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404f60e8" loc="40:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404f6300" loc="40:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404f6518" loc="40:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404fb4f0" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404fb718" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404fb940" loc="43:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404fbb30" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40548878" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40548aa0" loc="43:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40548cc8" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40548eb8" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoC" loc="18:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="32:/home/sumant/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x4064ab28" loc="39:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x4064ad50" loc="40:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40663010" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40663200" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x406a04f0" loc="89:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4069db10" loc="42:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/sumant/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x406b9130" loc="52:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40748de0" loc="23:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40748de0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40756010" loc="23:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x4074f2f8" loc="23:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x4074f2f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4074f4b8" loc="23:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4073f568" loc="46:/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4073f568"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407f3b60" loc="46:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407f3b60"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x407f3d40" loc="46:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408243e8" loc="46:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408243e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/sumant/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x4089cc90" loc="23:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x4089cc90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b4ede0" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b4ede0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40b4b030" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b509c0" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b509c0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b50e08" loc="43:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b50e08"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40aeed60" loc="55:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40aeed60"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40b7a1d8" loc="56:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40b7a1d8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40b7a440" loc="57:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40b7a440"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40b7a8b0" loc="58:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40b7a8b0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40b7ab18" loc="59:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40b79010" loc="60:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40b79010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/sumant/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ba48f8" loc="47:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40b9f460" loc="47:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/sumant/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40b98010" loc="43:/home/sumant/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40bb16d0" loc="45:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40bec010" loc="43:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x4045e610" loc="58:/home/sumant/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4045e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045e7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404599c8" loc="57:/home/sumant/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404599c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40459ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40463010" loc="52:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40463010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404631e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4045c010" loc="46:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4045c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40460830" loc="50:/home/sumant/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40460830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40460a08"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40460ae8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40460bc8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40460ca8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40460d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40463e78" loc="45:/home/sumant/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40463e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40466070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40463a98" loc="44:/home/sumant/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40463a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40463c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404662a0" loc="46:/home/sumant/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404662a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40466478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40462728" loc="18:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40462728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40462900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40462358" loc="17:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40462358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40462530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4046f210" loc="19:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4046f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046f3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4046c810" loc="18:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4046c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c9e8"/>
        <function-ref name="isInput" scoped="" ref="0x4046cac8"/>
        <function-ref name="toggle" scoped="" ref="0x4046cba8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046cc88"/>
        <function-ref name="get" scoped="" ref="0x4046cd68"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ce48"/>
        <function-ref name="set" scoped="" ref="0x4046cf28"/>
        <function-ref name="clr" scoped="" ref="0x4046f018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404682c0" loc="17:/home/sumant/tinyos-main/tos/platforms/mica2/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404682c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40468498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40472140" loc="48:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000InitP.nc">
      <component-ref qname="HplCC1000InitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40472140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40472318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PCLK" ref="0x404a52e0" loc="62:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PCLK" scoped="" ref="0x404a52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a54b8"/>
        <function-ref name="isInput" scoped="" ref="0x404a5598"/>
        <function-ref name="toggle" scoped="" ref="0x404a5678"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5758"/>
        <function-ref name="get" scoped="" ref="0x404a5838"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5918"/>
        <function-ref name="set" scoped="" ref="0x404a59f8"/>
        <function-ref name="clr" scoped="" ref="0x404a5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CHP_OUT" ref="0x404a4ec0" loc="60:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CHP_OUT" scoped="" ref="0x404a4ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4049e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4049e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4049e360"/>
        <function-ref name="get" scoped="" ref="0x4049e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e520"/>
        <function-ref name="set" scoped="" ref="0x4049e600"/>
        <function-ref name="clr" scoped="" ref="0x4049e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiConfig" ref="0x404a48d0" loc="56:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiConfig" scoped="" ref="0x404a48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x404a4aa8"/>
        <function-ref name="getChannel" scoped="" ref="0x404a4b88"/>
        <function-ref name="getPrescaler" scoped="" ref="0x404a4c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PALE" ref="0x4049e8d0" loc="61:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PALE" scoped="" ref="0x4049e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049eaa8"/>
        <function-ref name="isInput" scoped="" ref="0x4049eb88"/>
        <function-ref name="toggle" scoped="" ref="0x4049ec68"/>
        <function-ref name="isOutput" scoped="" ref="0x4049ed48"/>
        <function-ref name="get" scoped="" ref="0x4049ee28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049ef08"/>
        <function-ref name="set" scoped="" ref="0x404a5010"/>
        <function-ref name="clr" scoped="" ref="0x404a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404a1130" loc="54:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404a1130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a1308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PDATA" ref="0x404a5cd0" loc="63:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PDATA" scoped="" ref="0x404a5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5ea8"/>
        <function-ref name="isInput" scoped="" ref="0x404a3010"/>
        <function-ref name="toggle" scoped="" ref="0x404a30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a31d0"/>
        <function-ref name="get" scoped="" ref="0x404a32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a3390"/>
        <function-ref name="set" scoped="" ref="0x404a3470"/>
        <function-ref name="clr" scoped="" ref="0x404a3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x4049de98" loc="55:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000P.nc">
      <component-ref qname="HplCC1000P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x4049de98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a00c0"/>
        <function-ref name="read" scoped="" ref="0x404a01a0"/>
        <function-ref name="write" scoped="" ref="0x404a0280"/>
        <function-ref name="getLOCK" scoped="" ref="0x404a0360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x404be3f8" loc="53:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x404be3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x404be5d0"/>
        <function-ref name="initSlave" scoped="" ref="0x404be6b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x404be790"/>
        <function-ref name="writeByte" scoped="" ref="0x404be870"/>
        <function-ref name="enableIntr" scoped="" ref="0x404be950"/>
        <function-ref name="txMode" scoped="" ref="0x404bea30"/>
        <function-ref name="readByte" scoped="" ref="0x404beb10"/>
        <function-ref name="rxMode" scoped="" ref="0x404bebf0"/>
        <function-ref name="dataReady" scoped="" ref="0x404becd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSck" ref="0x404bef10" loc="56:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSck" scoped="" ref="0x404bef10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9108"/>
        <function-ref name="isInput" scoped="" ref="0x404b91e8"/>
        <function-ref name="toggle" scoped="" ref="0x404b92c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b93a8"/>
        <function-ref name="get" scoped="" ref="0x404b9488"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9568"/>
        <function-ref name="set" scoped="" ref="0x404b9648"/>
        <function-ref name="clr" scoped="" ref="0x404b9728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404ba0b0" loc="52:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404ba0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ba288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMiso" ref="0x404b9930" loc="57:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMiso" scoped="" ref="0x404b9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9b08"/>
        <function-ref name="isInput" scoped="" ref="0x404b9be8"/>
        <function-ref name="toggle" scoped="" ref="0x404b9cc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9da8"/>
        <function-ref name="get" scoped="" ref="0x404b9e88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8010"/>
        <function-ref name="set" scoped="" ref="0x404b80f0"/>
        <function-ref name="clr" scoped="" ref="0x404b81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiMosi" ref="0x404b83d8" loc="58:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiMosi" scoped="" ref="0x404b83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b85b0"/>
        <function-ref name="isInput" scoped="" ref="0x404b8690"/>
        <function-ref name="toggle" scoped="" ref="0x404b8770"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8850"/>
        <function-ref name="get" scoped="" ref="0x404b8930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8a10"/>
        <function-ref name="set" scoped="" ref="0x404b8af0"/>
        <function-ref name="clr" scoped="" ref="0x404b8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OC1C" ref="0x404b8dc0" loc="59:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000SpiP.nc">
      <component-ref qname="HplCC1000SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OC1C" scoped="" ref="0x404b8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd010"/>
        <function-ref name="isInput" scoped="" ref="0x404bd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404bd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd2b0"/>
        <function-ref name="get" scoped="" ref="0x404bd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd470"/>
        <function-ref name="set" scoped="" ref="0x404bd550"/>
        <function-ref name="clr" scoped="" ref="0x404bd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404f1750" loc="100:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404f1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f1b28"/>
        <function-ref name="isInput" scoped="" ref="0x404f1c08"/>
        <function-ref name="toggle" scoped="" ref="0x404f1ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f1dc8"/>
        <function-ref name="get" scoped="" ref="0x404f1ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0010"/>
        <function-ref name="set" scoped="" ref="0x404f00f0"/>
        <function-ref name="clr" scoped="" ref="0x404f01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404e2d08" loc="74:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404e2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e2ee0"/>
        <function-ref name="isInput" scoped="" ref="0x404e1010"/>
        <function-ref name="toggle" scoped="" ref="0x404e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e11d0"/>
        <function-ref name="get" scoped="" ref="0x404e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1390"/>
        <function-ref name="set" scoped="" ref="0x404e1470"/>
        <function-ref name="clr" scoped="" ref="0x404e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404e42f0" loc="85:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e44c8"/>
        <function-ref name="isInput" scoped="" ref="0x404e45a8"/>
        <function-ref name="toggle" scoped="" ref="0x404e4688"/>
        <function-ref name="isOutput" scoped="" ref="0x404e4768"/>
        <function-ref name="get" scoped="" ref="0x404e4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e4928"/>
        <function-ref name="set" scoped="" ref="0x404e4a08"/>
        <function-ref name="clr" scoped="" ref="0x404e4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404e94b0" loc="94:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404e94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9688"/>
        <function-ref name="isInput" scoped="" ref="0x404e9768"/>
        <function-ref name="toggle" scoped="" ref="0x404e9848"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9928"/>
        <function-ref name="get" scoped="" ref="0x404e9a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9ae8"/>
        <function-ref name="set" scoped="" ref="0x404e9bc8"/>
        <function-ref name="clr" scoped="" ref="0x404e9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404d0a98" loc="52:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404d0a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d0c70"/>
        <function-ref name="isInput" scoped="" ref="0x404d0d50"/>
        <function-ref name="toggle" scoped="" ref="0x404d0e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0f10"/>
        <function-ref name="get" scoped="" ref="0x404cf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf0f0"/>
        <function-ref name="set" scoped="" ref="0x404cf1d0"/>
        <function-ref name="clr" scoped="" ref="0x404cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404ea0a0" loc="92:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404ea0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea278"/>
        <function-ref name="isInput" scoped="" ref="0x404ea358"/>
        <function-ref name="toggle" scoped="" ref="0x404ea438"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea518"/>
        <function-ref name="get" scoped="" ref="0x404ea5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea6d8"/>
        <function-ref name="set" scoped="" ref="0x404ea7b8"/>
        <function-ref name="clr" scoped="" ref="0x404ea898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404cfea8" loc="55:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404cfea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d80c0"/>
        <function-ref name="isInput" scoped="" ref="0x404d81a0"/>
        <function-ref name="toggle" scoped="" ref="0x404d8280"/>
        <function-ref name="isOutput" scoped="" ref="0x404d8360"/>
        <function-ref name="get" scoped="" ref="0x404d8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d8520"/>
        <function-ref name="set" scoped="" ref="0x404d8600"/>
        <function-ref name="clr" scoped="" ref="0x404d86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404dc4b0" loc="66:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404dc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc688"/>
        <function-ref name="isInput" scoped="" ref="0x404dc768"/>
        <function-ref name="toggle" scoped="" ref="0x404dc848"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc928"/>
        <function-ref name="get" scoped="" ref="0x404dca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dcae8"/>
        <function-ref name="set" scoped="" ref="0x404dcbc8"/>
        <function-ref name="clr" scoped="" ref="0x404dcca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404e0c08" loc="77:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404e0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e0de0"/>
        <function-ref name="isInput" scoped="" ref="0x404e0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404de010"/>
        <function-ref name="isOutput" scoped="" ref="0x404de0f0"/>
        <function-ref name="get" scoped="" ref="0x404de1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404de2b0"/>
        <function-ref name="set" scoped="" ref="0x404de390"/>
        <function-ref name="clr" scoped="" ref="0x404de470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404ec210" loc="88:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404ec210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ec3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ec4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ec5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ec688"/>
        <function-ref name="get" scoped="" ref="0x404ec768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ec848"/>
        <function-ref name="set" scoped="" ref="0x404ec928"/>
        <function-ref name="clr" scoped="" ref="0x404eca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404d3750" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404d3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3928"/>
        <function-ref name="isInput" scoped="" ref="0x404d3a08"/>
        <function-ref name="toggle" scoped="" ref="0x404d3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d3bc8"/>
        <function-ref name="get" scoped="" ref="0x404d3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d3d88"/>
        <function-ref name="set" scoped="" ref="0x404d3e68"/>
        <function-ref name="clr" scoped="" ref="0x404d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404d7ce8" loc="58:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404d7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404d6010"/>
        <function-ref name="toggle" scoped="" ref="0x404d60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d61d0"/>
        <function-ref name="get" scoped="" ref="0x404d62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6390"/>
        <function-ref name="set" scoped="" ref="0x404d6470"/>
        <function-ref name="clr" scoped="" ref="0x404d6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404da2f0" loc="69:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404da2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404da4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404da5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404da688"/>
        <function-ref name="isOutput" scoped="" ref="0x404da768"/>
        <function-ref name="get" scoped="" ref="0x404da848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404da928"/>
        <function-ref name="set" scoped="" ref="0x404daa08"/>
        <function-ref name="clr" scoped="" ref="0x404daae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404e7a98" loc="80:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404e7a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e7c70"/>
        <function-ref name="isInput" scoped="" ref="0x404e7d50"/>
        <function-ref name="toggle" scoped="" ref="0x404e7e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404e7f10"/>
        <function-ref name="get" scoped="" ref="0x404e6010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e60f0"/>
        <function-ref name="set" scoped="" ref="0x404e61d0"/>
        <function-ref name="clr" scoped="" ref="0x404e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404f22f0" loc="97:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404f22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f24c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f25a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f2688"/>
        <function-ref name="isOutput" scoped="" ref="0x404f2768"/>
        <function-ref name="get" scoped="" ref="0x404f2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2928"/>
        <function-ref name="set" scoped="" ref="0x404f2a08"/>
        <function-ref name="clr" scoped="" ref="0x404f2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404ef830" loc="103:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404ef830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404efa08"/>
        <function-ref name="isInput" scoped="" ref="0x404efae8"/>
        <function-ref name="toggle" scoped="" ref="0x404efbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404efca8"/>
        <function-ref name="get" scoped="" ref="0x404efd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404efe68"/>
        <function-ref name="set" scoped="" ref="0x404ee010"/>
        <function-ref name="clr" scoped="" ref="0x404ee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404e6ea8" loc="83:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404e6ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e50c0"/>
        <function-ref name="isInput" scoped="" ref="0x404e51a0"/>
        <function-ref name="toggle" scoped="" ref="0x404e5280"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5360"/>
        <function-ref name="get" scoped="" ref="0x404e5440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5520"/>
        <function-ref name="set" scoped="" ref="0x404e5600"/>
        <function-ref name="clr" scoped="" ref="0x404e56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404d1670" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1848"/>
        <function-ref name="isInput" scoped="" ref="0x404d1928"/>
        <function-ref name="toggle" scoped="" ref="0x404d1a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1ae8"/>
        <function-ref name="get" scoped="" ref="0x404d1bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1ca8"/>
        <function-ref name="set" scoped="" ref="0x404d1d88"/>
        <function-ref name="clr" scoped="" ref="0x404d1e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404d5c08" loc="61:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404d5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5de0"/>
        <function-ref name="isInput" scoped="" ref="0x404d5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404d4010"/>
        <function-ref name="isOutput" scoped="" ref="0x404d40f0"/>
        <function-ref name="get" scoped="" ref="0x404d41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d42b0"/>
        <function-ref name="set" scoped="" ref="0x404d4390"/>
        <function-ref name="clr" scoped="" ref="0x404d4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404f03d0" loc="101:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404f03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f05a8"/>
        <function-ref name="isInput" scoped="" ref="0x404f0688"/>
        <function-ref name="toggle" scoped="" ref="0x404f0768"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0848"/>
        <function-ref name="get" scoped="" ref="0x404f0928"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0a08"/>
        <function-ref name="set" scoped="" ref="0x404f0ae8"/>
        <function-ref name="clr" scoped="" ref="0x404f0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404dd0a0" loc="64:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404dd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dd278"/>
        <function-ref name="isInput" scoped="" ref="0x404dd358"/>
        <function-ref name="toggle" scoped="" ref="0x404dd438"/>
        <function-ref name="isOutput" scoped="" ref="0x404dd518"/>
        <function-ref name="get" scoped="" ref="0x404dd5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dd6d8"/>
        <function-ref name="set" scoped="" ref="0x404dd7b8"/>
        <function-ref name="clr" scoped="" ref="0x404dd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404e1750" loc="75:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404e1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e1928"/>
        <function-ref name="isInput" scoped="" ref="0x404e1a08"/>
        <function-ref name="toggle" scoped="" ref="0x404e1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e1bc8"/>
        <function-ref name="get" scoped="" ref="0x404e1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1d88"/>
        <function-ref name="set" scoped="" ref="0x404e1e68"/>
        <function-ref name="clr" scoped="" ref="0x404e0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404e4ce8" loc="86:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404e4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404e3010"/>
        <function-ref name="toggle" scoped="" ref="0x404e30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e31d0"/>
        <function-ref name="get" scoped="" ref="0x404e32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3390"/>
        <function-ref name="set" scoped="" ref="0x404e3470"/>
        <function-ref name="clr" scoped="" ref="0x404e3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404e9ea8" loc="95:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404e9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e80c0"/>
        <function-ref name="isInput" scoped="" ref="0x404e81a0"/>
        <function-ref name="toggle" scoped="" ref="0x404e8280"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8360"/>
        <function-ref name="get" scoped="" ref="0x404e8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8520"/>
        <function-ref name="set" scoped="" ref="0x404e8600"/>
        <function-ref name="clr" scoped="" ref="0x404e86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404cf4b0" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404cf4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf688"/>
        <function-ref name="isInput" scoped="" ref="0x404cf768"/>
        <function-ref name="toggle" scoped="" ref="0x404cf848"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf928"/>
        <function-ref name="get" scoped="" ref="0x404cfa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cfae8"/>
        <function-ref name="set" scoped="" ref="0x404cfbc8"/>
        <function-ref name="clr" scoped="" ref="0x404cfca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404d88e0" loc="56:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404d88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404d8b98"/>
        <function-ref name="toggle" scoped="" ref="0x404d8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404d8d58"/>
        <function-ref name="get" scoped="" ref="0x404d8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d8f18"/>
        <function-ref name="set" scoped="" ref="0x404d7010"/>
        <function-ref name="clr" scoped="" ref="0x404d70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404dcea8" loc="67:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404dcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404db0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404db1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404db280"/>
        <function-ref name="isOutput" scoped="" ref="0x404db360"/>
        <function-ref name="get" scoped="" ref="0x404db440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404db520"/>
        <function-ref name="set" scoped="" ref="0x404db600"/>
        <function-ref name="clr" scoped="" ref="0x404db6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404de670" loc="78:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404de848"/>
        <function-ref name="isInput" scoped="" ref="0x404de928"/>
        <function-ref name="toggle" scoped="" ref="0x404dea08"/>
        <function-ref name="isOutput" scoped="" ref="0x404deae8"/>
        <function-ref name="get" scoped="" ref="0x404debc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404deca8"/>
        <function-ref name="set" scoped="" ref="0x404ded88"/>
        <function-ref name="clr" scoped="" ref="0x404dee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404ecc08" loc="89:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404ecc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ecde0"/>
        <function-ref name="isInput" scoped="" ref="0x404ecec0"/>
        <function-ref name="toggle" scoped="" ref="0x404eb010"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb0f0"/>
        <function-ref name="get" scoped="" ref="0x404eb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb2b0"/>
        <function-ref name="set" scoped="" ref="0x404eb390"/>
        <function-ref name="clr" scoped="" ref="0x404eb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404d2210" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404d2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d23e8"/>
        <function-ref name="isInput" scoped="" ref="0x404d24c8"/>
        <function-ref name="toggle" scoped="" ref="0x404d25a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d2688"/>
        <function-ref name="get" scoped="" ref="0x404d2768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d2848"/>
        <function-ref name="set" scoped="" ref="0x404d2928"/>
        <function-ref name="clr" scoped="" ref="0x404d2a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404d6750" loc="59:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404d6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d69a8"/>
        <function-ref name="isInput" scoped="" ref="0x404d6a88"/>
        <function-ref name="toggle" scoped="" ref="0x404d6b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6c48"/>
        <function-ref name="get" scoped="" ref="0x404d6d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6e08"/>
        <function-ref name="set" scoped="" ref="0x404d6ee8"/>
        <function-ref name="clr" scoped="" ref="0x404d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404dace8" loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404dace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404daec0"/>
        <function-ref name="isInput" scoped="" ref="0x404d9010"/>
        <function-ref name="toggle" scoped="" ref="0x404d90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d91d0"/>
        <function-ref name="get" scoped="" ref="0x404d92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d9390"/>
        <function-ref name="set" scoped="" ref="0x404d9470"/>
        <function-ref name="clr" scoped="" ref="0x404d9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404f2ce8" loc="98:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404f2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404f1010"/>
        <function-ref name="toggle" scoped="" ref="0x404f10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f11d0"/>
        <function-ref name="get" scoped="" ref="0x404f12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f1390"/>
        <function-ref name="set" scoped="" ref="0x404f1470"/>
        <function-ref name="clr" scoped="" ref="0x404f1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404e2210" loc="73:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404e2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e24e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e25c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e26a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2788"/>
        <function-ref name="get" scoped="" ref="0x404e2868"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e2948"/>
        <function-ref name="set" scoped="" ref="0x404e2a28"/>
        <function-ref name="clr" scoped="" ref="0x404e2b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404e58e0" loc="84:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404e58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e5ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404e5b98"/>
        <function-ref name="toggle" scoped="" ref="0x404e5c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5d58"/>
        <function-ref name="get" scoped="" ref="0x404e5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5f18"/>
        <function-ref name="set" scoped="" ref="0x404e4010"/>
        <function-ref name="clr" scoped="" ref="0x404e40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404eaa98" loc="93:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404eaa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eac70"/>
        <function-ref name="isInput" scoped="" ref="0x404ead50"/>
        <function-ref name="toggle" scoped="" ref="0x404eae30"/>
        <function-ref name="isOutput" scoped="" ref="0x404eaf10"/>
        <function-ref name="get" scoped="" ref="0x404e9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e90f0"/>
        <function-ref name="set" scoped="" ref="0x404e91d0"/>
        <function-ref name="clr" scoped="" ref="0x404e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404ee2f0" loc="104:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ee4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ee5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ee688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ee768"/>
        <function-ref name="get" scoped="" ref="0x404ee848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ee928"/>
        <function-ref name="set" scoped="" ref="0x404eea08"/>
        <function-ref name="clr" scoped="" ref="0x404eeae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404d00a0" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404d00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d0278"/>
        <function-ref name="isInput" scoped="" ref="0x404d0358"/>
        <function-ref name="toggle" scoped="" ref="0x404d0438"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0518"/>
        <function-ref name="get" scoped="" ref="0x404d05f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d06d8"/>
        <function-ref name="set" scoped="" ref="0x404d07b8"/>
        <function-ref name="clr" scoped="" ref="0x404d0898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404d4670" loc="62:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4848"/>
        <function-ref name="isInput" scoped="" ref="0x404d4928"/>
        <function-ref name="toggle" scoped="" ref="0x404d4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4ae8"/>
        <function-ref name="get" scoped="" ref="0x404d4bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4ca8"/>
        <function-ref name="set" scoped="" ref="0x404d4d88"/>
        <function-ref name="clr" scoped="" ref="0x404d4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404eb670" loc="91:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404eb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb848"/>
        <function-ref name="isInput" scoped="" ref="0x404eb928"/>
        <function-ref name="toggle" scoped="" ref="0x404eba08"/>
        <function-ref name="isOutput" scoped="" ref="0x404ebae8"/>
        <function-ref name="get" scoped="" ref="0x404ebbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ebca8"/>
        <function-ref name="set" scoped="" ref="0x404ebd88"/>
        <function-ref name="clr" scoped="" ref="0x404ebe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404dda98" loc="65:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404dda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ddc70"/>
        <function-ref name="isInput" scoped="" ref="0x404ddd50"/>
        <function-ref name="toggle" scoped="" ref="0x404dde30"/>
        <function-ref name="isOutput" scoped="" ref="0x404ddf10"/>
        <function-ref name="get" scoped="" ref="0x404dc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc0f0"/>
        <function-ref name="set" scoped="" ref="0x404dc1d0"/>
        <function-ref name="clr" scoped="" ref="0x404dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404e0210" loc="76:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404e0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e03e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e04c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e0688"/>
        <function-ref name="get" scoped="" ref="0x404e0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e0848"/>
        <function-ref name="set" scoped="" ref="0x404e0928"/>
        <function-ref name="clr" scoped="" ref="0x404e0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404e3750" loc="87:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404e3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3928"/>
        <function-ref name="isInput" scoped="" ref="0x404e3a08"/>
        <function-ref name="toggle" scoped="" ref="0x404e3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e3bc8"/>
        <function-ref name="get" scoped="" ref="0x404e3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3d88"/>
        <function-ref name="set" scoped="" ref="0x404e3e68"/>
        <function-ref name="clr" scoped="" ref="0x404ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404e88e0" loc="96:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404e88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404e8b98"/>
        <function-ref name="toggle" scoped="" ref="0x404e8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8d58"/>
        <function-ref name="get" scoped="" ref="0x404e8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8f18"/>
        <function-ref name="set" scoped="" ref="0x404f2010"/>
        <function-ref name="clr" scoped="" ref="0x404f20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40470cb8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40470cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470e90"/>
        <function-ref name="isInput" scoped="" ref="0x404d3010"/>
        <function-ref name="toggle" scoped="" ref="0x404d30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d31d0"/>
        <function-ref name="get" scoped="" ref="0x404d32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d3390"/>
        <function-ref name="set" scoped="" ref="0x404d3470"/>
        <function-ref name="clr" scoped="" ref="0x404d3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404d72f0" loc="57:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404d72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d74c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d75a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d7688"/>
        <function-ref name="isOutput" scoped="" ref="0x404d7768"/>
        <function-ref name="get" scoped="" ref="0x404d7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7928"/>
        <function-ref name="set" scoped="" ref="0x404d7a08"/>
        <function-ref name="clr" scoped="" ref="0x404d7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404db8e0" loc="68:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404db8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dbab8"/>
        <function-ref name="isInput" scoped="" ref="0x404dbb98"/>
        <function-ref name="toggle" scoped="" ref="0x404dbc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404dbd58"/>
        <function-ref name="get" scoped="" ref="0x404dbe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dbf18"/>
        <function-ref name="set" scoped="" ref="0x404da010"/>
        <function-ref name="clr" scoped="" ref="0x404da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404e70a0" loc="79:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404e70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e7278"/>
        <function-ref name="isInput" scoped="" ref="0x404e7358"/>
        <function-ref name="toggle" scoped="" ref="0x404e7438"/>
        <function-ref name="isOutput" scoped="" ref="0x404e7518"/>
        <function-ref name="get" scoped="" ref="0x404e75f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e76d8"/>
        <function-ref name="set" scoped="" ref="0x404e77b8"/>
        <function-ref name="clr" scoped="" ref="0x404e7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404f0dc8" loc="102:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404f0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ef010"/>
        <function-ref name="isInput" scoped="" ref="0x404ef0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404ef1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ef2b0"/>
        <function-ref name="get" scoped="" ref="0x404ef390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ef470"/>
        <function-ref name="set" scoped="" ref="0x404ef550"/>
        <function-ref name="clr" scoped="" ref="0x404ef630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404e64b0" loc="82:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404e64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e6688"/>
        <function-ref name="isInput" scoped="" ref="0x404e6768"/>
        <function-ref name="toggle" scoped="" ref="0x404e6848"/>
        <function-ref name="isOutput" scoped="" ref="0x404e6928"/>
        <function-ref name="get" scoped="" ref="0x404e6a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e6ae8"/>
        <function-ref name="set" scoped="" ref="0x404e6bc8"/>
        <function-ref name="clr" scoped="" ref="0x404e6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404d9750" loc="71:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404d9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d9928"/>
        <function-ref name="isInput" scoped="" ref="0x404d9a08"/>
        <function-ref name="toggle" scoped="" ref="0x404d9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d9bc8"/>
        <function-ref name="get" scoped="" ref="0x404d9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d9d88"/>
        <function-ref name="set" scoped="" ref="0x404d9e68"/>
        <function-ref name="clr" scoped="" ref="0x404e2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404d2c08" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404d2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d2de0"/>
        <function-ref name="isInput" scoped="" ref="0x404d2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404d1010"/>
        <function-ref name="isOutput" scoped="" ref="0x404d10f0"/>
        <function-ref name="get" scoped="" ref="0x404d11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d12b0"/>
        <function-ref name="set" scoped="" ref="0x404d1390"/>
        <function-ref name="clr" scoped="" ref="0x404d1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404d5210" loc="60:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d53e8"/>
        <function-ref name="isInput" scoped="" ref="0x404d54c8"/>
        <function-ref name="toggle" scoped="" ref="0x404d55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5688"/>
        <function-ref name="get" scoped="" ref="0x404d5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5848"/>
        <function-ref name="set" scoped="" ref="0x404d5928"/>
        <function-ref name="clr" scoped="" ref="0x404d5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40519ba8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40519ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40519d80"/>
        <function-ref name="isInput" scoped="" ref="0x40519e60"/>
        <function-ref name="toggle" scoped="" ref="0x40518010"/>
        <function-ref name="isOutput" scoped="" ref="0x405180f0"/>
        <function-ref name="get" scoped="" ref="0x405181d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405182b0"/>
        <function-ref name="set" scoped="" ref="0x40518390"/>
        <function-ref name="clr" scoped="" ref="0x40518470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40517890" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40517890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517a68"/>
        <function-ref name="isInput" scoped="" ref="0x40517b48"/>
        <function-ref name="toggle" scoped="" ref="0x40517c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40517d08"/>
        <function-ref name="get" scoped="" ref="0x40517de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40517ec8"/>
        <function-ref name="set" scoped="" ref="0x40522010"/>
        <function-ref name="clr" scoped="" ref="0x405220f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4051a8e0" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4051a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051aab8"/>
        <function-ref name="isInput" scoped="" ref="0x4051ab98"/>
        <function-ref name="toggle" scoped="" ref="0x4051ac78"/>
        <function-ref name="isOutput" scoped="" ref="0x4051ad58"/>
        <function-ref name="get" scoped="" ref="0x4051ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051af18"/>
        <function-ref name="set" scoped="" ref="0x40519010"/>
        <function-ref name="clr" scoped="" ref="0x405190f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405185d0" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405185d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405187a8"/>
        <function-ref name="isInput" scoped="" ref="0x40518888"/>
        <function-ref name="toggle" scoped="" ref="0x40518968"/>
        <function-ref name="isOutput" scoped="" ref="0x40518a48"/>
        <function-ref name="get" scoped="" ref="0x40518b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40518c08"/>
        <function-ref name="set" scoped="" ref="0x40518ce8"/>
        <function-ref name="clr" scoped="" ref="0x40518dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40522250" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40522250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522428"/>
        <function-ref name="isInput" scoped="" ref="0x40522508"/>
        <function-ref name="toggle" scoped="" ref="0x405225e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405226c8"/>
        <function-ref name="get" scoped="" ref="0x405227a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522888"/>
        <function-ref name="set" scoped="" ref="0x40522968"/>
        <function-ref name="clr" scoped="" ref="0x40522a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40519250" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40519250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40519428"/>
        <function-ref name="isInput" scoped="" ref="0x40519508"/>
        <function-ref name="toggle" scoped="" ref="0x405195e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405196c8"/>
        <function-ref name="get" scoped="" ref="0x405197a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40519888"/>
        <function-ref name="set" scoped="" ref="0x40519968"/>
        <function-ref name="clr" scoped="" ref="0x40519a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40518f28" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40518f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517110"/>
        <function-ref name="isInput" scoped="" ref="0x405171f0"/>
        <function-ref name="toggle" scoped="" ref="0x405172d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405173b0"/>
        <function-ref name="get" scoped="" ref="0x40517490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40517570"/>
        <function-ref name="set" scoped="" ref="0x40517650"/>
        <function-ref name="clr" scoped="" ref="0x40517730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40522ba8" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40522ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522d80"/>
        <function-ref name="isInput" scoped="" ref="0x40522e60"/>
        <function-ref name="toggle" scoped="" ref="0x40520010"/>
        <function-ref name="isOutput" scoped="" ref="0x405200f0"/>
        <function-ref name="get" scoped="" ref="0x405201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405202b0"/>
        <function-ref name="set" scoped="" ref="0x40520390"/>
        <function-ref name="clr" scoped="" ref="0x40520470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1fbd0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1fda8"/>
        <function-ref name="isInput" scoped="" ref="0x40c1fe88"/>
        <function-ref name="toggle" scoped="" ref="0x40c1e010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1e0f0"/>
        <function-ref name="get" scoped="" ref="0x40c1e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1e2b0"/>
        <function-ref name="set" scoped="" ref="0x40c1e390"/>
        <function-ref name="clr" scoped="" ref="0x40c1e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1d6c0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1d898"/>
        <function-ref name="isInput" scoped="" ref="0x40c1d978"/>
        <function-ref name="toggle" scoped="" ref="0x40c1da58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1db38"/>
        <function-ref name="get" scoped="" ref="0x40c1dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1dcf8"/>
        <function-ref name="set" scoped="" ref="0x40c1ddd8"/>
        <function-ref name="clr" scoped="" ref="0x40c1deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1b0b0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1b288"/>
        <function-ref name="isInput" scoped="" ref="0x40c1b368"/>
        <function-ref name="toggle" scoped="" ref="0x40c1b448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1b528"/>
        <function-ref name="get" scoped="" ref="0x40c1b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1b6e8"/>
        <function-ref name="set" scoped="" ref="0x40c1b7c8"/>
        <function-ref name="clr" scoped="" ref="0x40c1b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1aa88" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1ac60"/>
        <function-ref name="isInput" scoped="" ref="0x40c1ad40"/>
        <function-ref name="toggle" scoped="" ref="0x40c1ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1af00"/>
        <function-ref name="get" scoped="" ref="0x40c19010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c190f0"/>
        <function-ref name="set" scoped="" ref="0x40c191d0"/>
        <function-ref name="clr" scoped="" ref="0x40c192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c18538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c18538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c18710"/>
        <function-ref name="isInput" scoped="" ref="0x40c187f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c188d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c189b0"/>
        <function-ref name="get" scoped="" ref="0x40c18a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c18b70"/>
        <function-ref name="set" scoped="" ref="0x40c18c50"/>
        <function-ref name="clr" scoped="" ref="0x40c18d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c16010" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c161e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c162c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c163a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c16488"/>
        <function-ref name="get" scoped="" ref="0x40c16568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c16648"/>
        <function-ref name="set" scoped="" ref="0x40c16728"/>
        <function-ref name="clr" scoped="" ref="0x40c16808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c159e8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c159e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c15bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c15ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40c15d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c15e60"/>
        <function-ref name="get" scoped="" ref="0x40c14010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c140f0"/>
        <function-ref name="set" scoped="" ref="0x40c141d0"/>
        <function-ref name="clr" scoped="" ref="0x40c142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c13538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c13538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c13710"/>
        <function-ref name="isInput" scoped="" ref="0x40c137f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c138d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c139b0"/>
        <function-ref name="get" scoped="" ref="0x40c13a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c13b70"/>
        <function-ref name="set" scoped="" ref="0x40c13c50"/>
        <function-ref name="clr" scoped="" ref="0x40c13d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405284f0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405284f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405286c8"/>
        <function-ref name="isInput" scoped="" ref="0x405287a8"/>
        <function-ref name="toggle" scoped="" ref="0x40528888"/>
        <function-ref name="isOutput" scoped="" ref="0x40528968"/>
        <function-ref name="get" scoped="" ref="0x40528a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40528b28"/>
        <function-ref name="set" scoped="" ref="0x40528c08"/>
        <function-ref name="clr" scoped="" ref="0x40528ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40526170" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40526170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40526348"/>
        <function-ref name="isInput" scoped="" ref="0x40526428"/>
        <function-ref name="toggle" scoped="" ref="0x40526508"/>
        <function-ref name="isOutput" scoped="" ref="0x405265e8"/>
        <function-ref name="get" scoped="" ref="0x405266c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405267a8"/>
        <function-ref name="set" scoped="" ref="0x40526888"/>
        <function-ref name="clr" scoped="" ref="0x40526968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4051d228" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4051d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051d400"/>
        <function-ref name="isInput" scoped="" ref="0x4051d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4051d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d6a0"/>
        <function-ref name="get" scoped="" ref="0x4051d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051d860"/>
        <function-ref name="set" scoped="" ref="0x4051d940"/>
        <function-ref name="clr" scoped="" ref="0x4051da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40528e48" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40528e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40527050"/>
        <function-ref name="isInput" scoped="" ref="0x40527130"/>
        <function-ref name="toggle" scoped="" ref="0x40527210"/>
        <function-ref name="isOutput" scoped="" ref="0x405272f0"/>
        <function-ref name="get" scoped="" ref="0x405273d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405274b0"/>
        <function-ref name="set" scoped="" ref="0x40527590"/>
        <function-ref name="clr" scoped="" ref="0x40527670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40526ac8" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40526ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40526ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40526d80"/>
        <function-ref name="toggle" scoped="" ref="0x40526e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40525010"/>
        <function-ref name="get" scoped="" ref="0x405250f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405251d0"/>
        <function-ref name="set" scoped="" ref="0x405252b0"/>
        <function-ref name="clr" scoped="" ref="0x40525390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4051db80" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4051db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051dd58"/>
        <function-ref name="isInput" scoped="" ref="0x4051de38"/>
        <function-ref name="toggle" scoped="" ref="0x4051df18"/>
        <function-ref name="isOutput" scoped="" ref="0x40528010"/>
        <function-ref name="get" scoped="" ref="0x405280f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405281d0"/>
        <function-ref name="set" scoped="" ref="0x405282b0"/>
        <function-ref name="clr" scoped="" ref="0x40528390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405277d0" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405277d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405279a8"/>
        <function-ref name="isInput" scoped="" ref="0x40527a88"/>
        <function-ref name="toggle" scoped="" ref="0x40527b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40527c48"/>
        <function-ref name="get" scoped="" ref="0x40527d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40527e08"/>
        <function-ref name="set" scoped="" ref="0x40527ee8"/>
        <function-ref name="clr" scoped="" ref="0x40526010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405254f0" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405254f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405256c8"/>
        <function-ref name="isInput" scoped="" ref="0x405257a8"/>
        <function-ref name="toggle" scoped="" ref="0x40525888"/>
        <function-ref name="isOutput" scoped="" ref="0x40525968"/>
        <function-ref name="get" scoped="" ref="0x40525a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40525b28"/>
        <function-ref name="set" scoped="" ref="0x40525c08"/>
        <function-ref name="clr" scoped="" ref="0x40525ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c36938" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c36938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c36b10"/>
        <function-ref name="isInput" scoped="" ref="0x40c36bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40c36cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c36db0"/>
        <function-ref name="get" scoped="" ref="0x40c36e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c35010"/>
        <function-ref name="set" scoped="" ref="0x40c350f0"/>
        <function-ref name="clr" scoped="" ref="0x40c351d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c5c3b0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c5c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c5c588"/>
        <function-ref name="isInput" scoped="" ref="0x40c5c668"/>
        <function-ref name="toggle" scoped="" ref="0x40c5c748"/>
        <function-ref name="isOutput" scoped="" ref="0x40c5c828"/>
        <function-ref name="get" scoped="" ref="0x40c5c908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c5c9e8"/>
        <function-ref name="set" scoped="" ref="0x40c5cac8"/>
        <function-ref name="clr" scoped="" ref="0x40c5cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c5bd70" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c5bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c5a010"/>
        <function-ref name="isInput" scoped="" ref="0x40c5a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c5a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c5a2b0"/>
        <function-ref name="get" scoped="" ref="0x40c5a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c5a470"/>
        <function-ref name="set" scoped="" ref="0x40c5a550"/>
        <function-ref name="clr" scoped="" ref="0x40c5a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c597f8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c597f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c599d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c59ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c59b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c59c70"/>
        <function-ref name="get" scoped="" ref="0x40c59d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c59e30"/>
        <function-ref name="set" scoped="" ref="0x40c59f10"/>
        <function-ref name="clr" scoped="" ref="0x40c58010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c57228" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c57228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c57400"/>
        <function-ref name="isInput" scoped="" ref="0x40c574e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c575c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c576a0"/>
        <function-ref name="get" scoped="" ref="0x40c57780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c57860"/>
        <function-ref name="set" scoped="" ref="0x40c57940"/>
        <function-ref name="clr" scoped="" ref="0x40c57a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c56c08" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c56c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c56de0"/>
        <function-ref name="isInput" scoped="" ref="0x40c56ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c55010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c550f0"/>
        <function-ref name="get" scoped="" ref="0x40c551d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c552b0"/>
        <function-ref name="set" scoped="" ref="0x40c55390"/>
        <function-ref name="clr" scoped="" ref="0x40c55470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c546c0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c546c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c54898"/>
        <function-ref name="isInput" scoped="" ref="0x40c54978"/>
        <function-ref name="toggle" scoped="" ref="0x40c54a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c54b38"/>
        <function-ref name="get" scoped="" ref="0x40c54c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c54cf8"/>
        <function-ref name="set" scoped="" ref="0x40c54dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c54eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c520b0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c520b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c52288"/>
        <function-ref name="isInput" scoped="" ref="0x40c52368"/>
        <function-ref name="toggle" scoped="" ref="0x40c52448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c52528"/>
        <function-ref name="get" scoped="" ref="0x40c52608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c526e8"/>
        <function-ref name="set" scoped="" ref="0x40c527c8"/>
        <function-ref name="clr" scoped="" ref="0x40c528a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4052ce48" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4052ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b050"/>
        <function-ref name="isInput" scoped="" ref="0x4052b130"/>
        <function-ref name="toggle" scoped="" ref="0x4052b210"/>
        <function-ref name="isOutput" scoped="" ref="0x4052b2f0"/>
        <function-ref name="get" scoped="" ref="0x4052b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052b4b0"/>
        <function-ref name="set" scoped="" ref="0x4052b590"/>
        <function-ref name="clr" scoped="" ref="0x4052b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4052aac8" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4052aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052aca0"/>
        <function-ref name="isInput" scoped="" ref="0x4052ad80"/>
        <function-ref name="toggle" scoped="" ref="0x4052ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40529010"/>
        <function-ref name="get" scoped="" ref="0x405290f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405291d0"/>
        <function-ref name="set" scoped="" ref="0x405292b0"/>
        <function-ref name="clr" scoped="" ref="0x40529390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4052db00" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4052db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052dcd8"/>
        <function-ref name="isInput" scoped="" ref="0x4052ddb8"/>
        <function-ref name="toggle" scoped="" ref="0x4052de98"/>
        <function-ref name="isOutput" scoped="" ref="0x4052c010"/>
        <function-ref name="get" scoped="" ref="0x4052c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052c1d0"/>
        <function-ref name="set" scoped="" ref="0x4052c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4052c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4052b7d0" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4052b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4052ba88"/>
        <function-ref name="toggle" scoped="" ref="0x4052bb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4052bc48"/>
        <function-ref name="get" scoped="" ref="0x4052bd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052be08"/>
        <function-ref name="set" scoped="" ref="0x4052bee8"/>
        <function-ref name="clr" scoped="" ref="0x4052a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405294f0" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405294f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405296c8"/>
        <function-ref name="isInput" scoped="" ref="0x405297a8"/>
        <function-ref name="toggle" scoped="" ref="0x40529888"/>
        <function-ref name="isOutput" scoped="" ref="0x40529968"/>
        <function-ref name="get" scoped="" ref="0x40529a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40529b28"/>
        <function-ref name="set" scoped="" ref="0x40529c08"/>
        <function-ref name="clr" scoped="" ref="0x40529ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4052c4f0" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4052c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052c6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4052c7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4052c888"/>
        <function-ref name="isOutput" scoped="" ref="0x4052c968"/>
        <function-ref name="get" scoped="" ref="0x4052ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052cb28"/>
        <function-ref name="set" scoped="" ref="0x4052cc08"/>
        <function-ref name="clr" scoped="" ref="0x4052cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4052a170" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4052a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052a348"/>
        <function-ref name="isInput" scoped="" ref="0x4052a428"/>
        <function-ref name="toggle" scoped="" ref="0x4052a508"/>
        <function-ref name="isOutput" scoped="" ref="0x4052a5e8"/>
        <function-ref name="get" scoped="" ref="0x4052a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052a7a8"/>
        <function-ref name="set" scoped="" ref="0x4052a888"/>
        <function-ref name="clr" scoped="" ref="0x4052a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40529e48" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40529e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40534050"/>
        <function-ref name="isInput" scoped="" ref="0x40534130"/>
        <function-ref name="toggle" scoped="" ref="0x40534210"/>
        <function-ref name="isOutput" scoped="" ref="0x405342f0"/>
        <function-ref name="get" scoped="" ref="0x405343d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405344b0"/>
        <function-ref name="set" scoped="" ref="0x40534590"/>
        <function-ref name="clr" scoped="" ref="0x40534670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c77538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c77538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c77710"/>
        <function-ref name="isInput" scoped="" ref="0x40c777f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c778d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c779b0"/>
        <function-ref name="get" scoped="" ref="0x40c77a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c77b70"/>
        <function-ref name="set" scoped="" ref="0x40c77c50"/>
        <function-ref name="clr" scoped="" ref="0x40c77d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c75010" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c75010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c751e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c752c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c753a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c75488"/>
        <function-ref name="get" scoped="" ref="0x40c75568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c75648"/>
        <function-ref name="set" scoped="" ref="0x40c75728"/>
        <function-ref name="clr" scoped="" ref="0x40c75808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c749e8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c749e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c74bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c74ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40c74d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c74e60"/>
        <function-ref name="get" scoped="" ref="0x40c73010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c730f0"/>
        <function-ref name="set" scoped="" ref="0x40c731d0"/>
        <function-ref name="clr" scoped="" ref="0x40c732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c72538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c72538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c72710"/>
        <function-ref name="isInput" scoped="" ref="0x40c727f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c728d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c729b0"/>
        <function-ref name="get" scoped="" ref="0x40c72a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c72b70"/>
        <function-ref name="set" scoped="" ref="0x40c72c50"/>
        <function-ref name="clr" scoped="" ref="0x40c72d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c9a010" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c9a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c9a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c9a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9a488"/>
        <function-ref name="get" scoped="" ref="0x40c9a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9a648"/>
        <function-ref name="set" scoped="" ref="0x40c9a728"/>
        <function-ref name="clr" scoped="" ref="0x40c9a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c999e8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c999e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c99bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c99ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40c99d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c99e60"/>
        <function-ref name="get" scoped="" ref="0x40c98010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c980f0"/>
        <function-ref name="set" scoped="" ref="0x40c981d0"/>
        <function-ref name="clr" scoped="" ref="0x40c982b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c97538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c97538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c97710"/>
        <function-ref name="isInput" scoped="" ref="0x40c977f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c978d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c979b0"/>
        <function-ref name="get" scoped="" ref="0x40c97a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c97b70"/>
        <function-ref name="set" scoped="" ref="0x40c97c50"/>
        <function-ref name="clr" scoped="" ref="0x40c97d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c95010" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c951e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c952c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c953a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c95488"/>
        <function-ref name="get" scoped="" ref="0x40c95568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c95648"/>
        <function-ref name="set" scoped="" ref="0x40c95728"/>
        <function-ref name="clr" scoped="" ref="0x40c95808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405306b0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405306b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40530888"/>
        <function-ref name="isInput" scoped="" ref="0x40530968"/>
        <function-ref name="toggle" scoped="" ref="0x40530a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40530b28"/>
        <function-ref name="get" scoped="" ref="0x40530c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40530ce8"/>
        <function-ref name="set" scoped="" ref="0x40530dc8"/>
        <function-ref name="clr" scoped="" ref="0x40530ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40539330" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40539330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40539508"/>
        <function-ref name="isInput" scoped="" ref="0x405395e8"/>
        <function-ref name="toggle" scoped="" ref="0x405396c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405397a8"/>
        <function-ref name="get" scoped="" ref="0x40539888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40539968"/>
        <function-ref name="set" scoped="" ref="0x40539a48"/>
        <function-ref name="clr" scoped="" ref="0x40539b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405313d8" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405313d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405315b0"/>
        <function-ref name="isInput" scoped="" ref="0x40531690"/>
        <function-ref name="toggle" scoped="" ref="0x40531770"/>
        <function-ref name="isOutput" scoped="" ref="0x40531850"/>
        <function-ref name="get" scoped="" ref="0x40531930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40531a10"/>
        <function-ref name="set" scoped="" ref="0x40531af0"/>
        <function-ref name="clr" scoped="" ref="0x40531bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4053a030" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4053a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053a208"/>
        <function-ref name="isInput" scoped="" ref="0x4053a2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4053a3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4053a4a8"/>
        <function-ref name="get" scoped="" ref="0x4053a588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053a668"/>
        <function-ref name="set" scoped="" ref="0x4053a748"/>
        <function-ref name="clr" scoped="" ref="0x4053a828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40539c88" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40539c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40539e60"/>
        <function-ref name="isInput" scoped="" ref="0x40538010"/>
        <function-ref name="toggle" scoped="" ref="0x405380f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405381d0"/>
        <function-ref name="get" scoped="" ref="0x405382b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40538390"/>
        <function-ref name="set" scoped="" ref="0x40538470"/>
        <function-ref name="clr" scoped="" ref="0x40538550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40531d30" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40531d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40531f08"/>
        <function-ref name="isInput" scoped="" ref="0x40530010"/>
        <function-ref name="toggle" scoped="" ref="0x405300f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405301d0"/>
        <function-ref name="get" scoped="" ref="0x405302b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40530390"/>
        <function-ref name="set" scoped="" ref="0x40530470"/>
        <function-ref name="clr" scoped="" ref="0x40530550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4053a988" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4053a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053ab60"/>
        <function-ref name="isInput" scoped="" ref="0x4053ac40"/>
        <function-ref name="toggle" scoped="" ref="0x4053ad20"/>
        <function-ref name="isOutput" scoped="" ref="0x4053ae00"/>
        <function-ref name="get" scoped="" ref="0x4053aee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40539010"/>
        <function-ref name="set" scoped="" ref="0x405390f0"/>
        <function-ref name="clr" scoped="" ref="0x405391d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405386b0" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405386b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40538888"/>
        <function-ref name="isInput" scoped="" ref="0x40538968"/>
        <function-ref name="toggle" scoped="" ref="0x40538a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40538b28"/>
        <function-ref name="get" scoped="" ref="0x40538c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40538ce8"/>
        <function-ref name="set" scoped="" ref="0x40538dc8"/>
        <function-ref name="clr" scoped="" ref="0x40538ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cbc418" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cbc418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cbc5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40cbc6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40cbc7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cbc890"/>
        <function-ref name="get" scoped="" ref="0x40cbc970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cbca50"/>
        <function-ref name="set" scoped="" ref="0x40cbcb30"/>
        <function-ref name="clr" scoped="" ref="0x40cbcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cbbde0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cbbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cba010"/>
        <function-ref name="isInput" scoped="" ref="0x40cba0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cba1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cba2b0"/>
        <function-ref name="get" scoped="" ref="0x40cba390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cba470"/>
        <function-ref name="set" scoped="" ref="0x40cba550"/>
        <function-ref name="clr" scoped="" ref="0x40cba630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb97f8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb99d0"/>
        <function-ref name="isInput" scoped="" ref="0x40cb9ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40cb9b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb9c70"/>
        <function-ref name="get" scoped="" ref="0x40cb9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb9e30"/>
        <function-ref name="set" scoped="" ref="0x40cb9f10"/>
        <function-ref name="clr" scoped="" ref="0x40cb8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb7228" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb7228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb7400"/>
        <function-ref name="isInput" scoped="" ref="0x40cb74e0"/>
        <function-ref name="toggle" scoped="" ref="0x40cb75c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb76a0"/>
        <function-ref name="get" scoped="" ref="0x40cb7780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb7860"/>
        <function-ref name="set" scoped="" ref="0x40cb7940"/>
        <function-ref name="clr" scoped="" ref="0x40cb7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb6c08" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb6de0"/>
        <function-ref name="isInput" scoped="" ref="0x40cb6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40cb5010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb50f0"/>
        <function-ref name="get" scoped="" ref="0x40cb51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb52b0"/>
        <function-ref name="set" scoped="" ref="0x40cb5390"/>
        <function-ref name="clr" scoped="" ref="0x40cb5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb46c0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb4898"/>
        <function-ref name="isInput" scoped="" ref="0x40cb4978"/>
        <function-ref name="toggle" scoped="" ref="0x40cb4a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb4b38"/>
        <function-ref name="get" scoped="" ref="0x40cb4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb4cf8"/>
        <function-ref name="set" scoped="" ref="0x40cb4dd8"/>
        <function-ref name="clr" scoped="" ref="0x40cb4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb20b0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb2288"/>
        <function-ref name="isInput" scoped="" ref="0x40cb2368"/>
        <function-ref name="toggle" scoped="" ref="0x40cb2448"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb2528"/>
        <function-ref name="get" scoped="" ref="0x40cb2608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb26e8"/>
        <function-ref name="set" scoped="" ref="0x40cb27c8"/>
        <function-ref name="clr" scoped="" ref="0x40cb28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb1a88" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb1c60"/>
        <function-ref name="isInput" scoped="" ref="0x40cb1d40"/>
        <function-ref name="toggle" scoped="" ref="0x40cb1e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb1f00"/>
        <function-ref name="get" scoped="" ref="0x40cb0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb00f0"/>
        <function-ref name="set" scoped="" ref="0x40cb01d0"/>
        <function-ref name="clr" scoped="" ref="0x40cb02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4053f170" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4053f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053f348"/>
        <function-ref name="isInput" scoped="" ref="0x4053f428"/>
        <function-ref name="toggle" scoped="" ref="0x4053f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4053f5e8"/>
        <function-ref name="get" scoped="" ref="0x4053f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053f7a8"/>
        <function-ref name="set" scoped="" ref="0x4053f888"/>
        <function-ref name="clr" scoped="" ref="0x4053f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4053ee48" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4053ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053d050"/>
        <function-ref name="isInput" scoped="" ref="0x4053d130"/>
        <function-ref name="toggle" scoped="" ref="0x4053d210"/>
        <function-ref name="isOutput" scoped="" ref="0x4053d2f0"/>
        <function-ref name="get" scoped="" ref="0x4053d3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053d4b0"/>
        <function-ref name="set" scoped="" ref="0x4053d590"/>
        <function-ref name="clr" scoped="" ref="0x4053d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40535dc8" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40535dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40540010"/>
        <function-ref name="isInput" scoped="" ref="0x405400f0"/>
        <function-ref name="toggle" scoped="" ref="0x405401d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405402b0"/>
        <function-ref name="get" scoped="" ref="0x40540390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40540470"/>
        <function-ref name="set" scoped="" ref="0x40540550"/>
        <function-ref name="clr" scoped="" ref="0x40540630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4053fac8" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4053fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4053fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4053fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4053e010"/>
        <function-ref name="get" scoped="" ref="0x4053e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053e1d0"/>
        <function-ref name="set" scoped="" ref="0x4053e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4053e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4053d7d0" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4053d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4053da88"/>
        <function-ref name="toggle" scoped="" ref="0x4053db68"/>
        <function-ref name="isOutput" scoped="" ref="0x4053dc48"/>
        <function-ref name="get" scoped="" ref="0x4053dd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053de08"/>
        <function-ref name="set" scoped="" ref="0x4053dee8"/>
        <function-ref name="clr" scoped="" ref="0x4053c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40540790" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40540790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40540968"/>
        <function-ref name="isInput" scoped="" ref="0x40540a48"/>
        <function-ref name="toggle" scoped="" ref="0x40540b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40540c08"/>
        <function-ref name="get" scoped="" ref="0x40540ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40540dc8"/>
        <function-ref name="set" scoped="" ref="0x40540ea8"/>
        <function-ref name="clr" scoped="" ref="0x4053f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4053e4f0" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4053e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4053e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4053e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4053e968"/>
        <function-ref name="get" scoped="" ref="0x4053ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053eb28"/>
        <function-ref name="set" scoped="" ref="0x4053ec08"/>
        <function-ref name="clr" scoped="" ref="0x4053ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4053c170" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4053c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053c348"/>
        <function-ref name="isInput" scoped="" ref="0x4053c428"/>
        <function-ref name="toggle" scoped="" ref="0x4053c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4053c5e8"/>
        <function-ref name="get" scoped="" ref="0x4053c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053c7a8"/>
        <function-ref name="set" scoped="" ref="0x4053c888"/>
        <function-ref name="clr" scoped="" ref="0x4053c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cdcde8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cdcde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d03010"/>
        <function-ref name="isInput" scoped="" ref="0x40d030f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d031d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d032b0"/>
        <function-ref name="get" scoped="" ref="0x40d03390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d03470"/>
        <function-ref name="set" scoped="" ref="0x40d03550"/>
        <function-ref name="clr" scoped="" ref="0x40d03630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d027f8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d027f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d029d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d02ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d02b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d02c70"/>
        <function-ref name="get" scoped="" ref="0x40d02d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d02e30"/>
        <function-ref name="set" scoped="" ref="0x40d02f10"/>
        <function-ref name="clr" scoped="" ref="0x40d01010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d00228" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d00228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d00400"/>
        <function-ref name="isInput" scoped="" ref="0x40d004e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d005c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d006a0"/>
        <function-ref name="get" scoped="" ref="0x40d00780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d00860"/>
        <function-ref name="set" scoped="" ref="0x40d00940"/>
        <function-ref name="clr" scoped="" ref="0x40d00a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cffc08" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cffc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cffde0"/>
        <function-ref name="isInput" scoped="" ref="0x40cffec0"/>
        <function-ref name="toggle" scoped="" ref="0x40cfe010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfe0f0"/>
        <function-ref name="get" scoped="" ref="0x40cfe1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfe2b0"/>
        <function-ref name="set" scoped="" ref="0x40cfe390"/>
        <function-ref name="clr" scoped="" ref="0x40cfe470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfd6c0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfd898"/>
        <function-ref name="isInput" scoped="" ref="0x40cfd978"/>
        <function-ref name="toggle" scoped="" ref="0x40cfda58"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfdb38"/>
        <function-ref name="get" scoped="" ref="0x40cfdc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfdcf8"/>
        <function-ref name="set" scoped="" ref="0x40cfddd8"/>
        <function-ref name="clr" scoped="" ref="0x40cfdeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfb0b0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfb0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfb288"/>
        <function-ref name="isInput" scoped="" ref="0x40cfb368"/>
        <function-ref name="toggle" scoped="" ref="0x40cfb448"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfb528"/>
        <function-ref name="get" scoped="" ref="0x40cfb608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfb6e8"/>
        <function-ref name="set" scoped="" ref="0x40cfb7c8"/>
        <function-ref name="clr" scoped="" ref="0x40cfb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfaa88" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfac60"/>
        <function-ref name="isInput" scoped="" ref="0x40cfad40"/>
        <function-ref name="toggle" scoped="" ref="0x40cfae20"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfaf00"/>
        <function-ref name="get" scoped="" ref="0x40cf9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cf90f0"/>
        <function-ref name="set" scoped="" ref="0x40cf91d0"/>
        <function-ref name="clr" scoped="" ref="0x40cf92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cf8538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cf8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cf8710"/>
        <function-ref name="isInput" scoped="" ref="0x40cf87f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cf88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cf89b0"/>
        <function-ref name="get" scoped="" ref="0x40cf8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cf8b70"/>
        <function-ref name="set" scoped="" ref="0x40cf8c50"/>
        <function-ref name="clr" scoped="" ref="0x40cf8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405437f0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405437f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405439c8"/>
        <function-ref name="isInput" scoped="" ref="0x40543aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40543b88"/>
        <function-ref name="isOutput" scoped="" ref="0x40543c68"/>
        <function-ref name="get" scoped="" ref="0x40543d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40543e28"/>
        <function-ref name="set" scoped="" ref="0x40543f08"/>
        <function-ref name="clr" scoped="" ref="0x40542010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405414f0" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405414f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405416c8"/>
        <function-ref name="isInput" scoped="" ref="0x405417a8"/>
        <function-ref name="toggle" scoped="" ref="0x40541888"/>
        <function-ref name="isOutput" scoped="" ref="0x40541968"/>
        <function-ref name="get" scoped="" ref="0x40541a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40541b28"/>
        <function-ref name="set" scoped="" ref="0x40541c08"/>
        <function-ref name="clr" scoped="" ref="0x40541ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40544518" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40544518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405446f0"/>
        <function-ref name="isInput" scoped="" ref="0x405447d0"/>
        <function-ref name="toggle" scoped="" ref="0x405448b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40544990"/>
        <function-ref name="get" scoped="" ref="0x40544a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40544b50"/>
        <function-ref name="set" scoped="" ref="0x40544c30"/>
        <function-ref name="clr" scoped="" ref="0x40544d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40542170" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40542170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40542348"/>
        <function-ref name="isInput" scoped="" ref="0x40542428"/>
        <function-ref name="toggle" scoped="" ref="0x40542508"/>
        <function-ref name="isOutput" scoped="" ref="0x405425e8"/>
        <function-ref name="get" scoped="" ref="0x405426c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405427a8"/>
        <function-ref name="set" scoped="" ref="0x40542888"/>
        <function-ref name="clr" scoped="" ref="0x40542968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40541e48" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40541e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c050"/>
        <function-ref name="isInput" scoped="" ref="0x4054c130"/>
        <function-ref name="toggle" scoped="" ref="0x4054c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4054c2f0"/>
        <function-ref name="get" scoped="" ref="0x4054c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054c4b0"/>
        <function-ref name="set" scoped="" ref="0x4054c590"/>
        <function-ref name="clr" scoped="" ref="0x4054c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40544e70" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40544e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40543070"/>
        <function-ref name="isInput" scoped="" ref="0x40543150"/>
        <function-ref name="toggle" scoped="" ref="0x40543230"/>
        <function-ref name="isOutput" scoped="" ref="0x40543310"/>
        <function-ref name="get" scoped="" ref="0x405433f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405434d0"/>
        <function-ref name="set" scoped="" ref="0x405435b0"/>
        <function-ref name="clr" scoped="" ref="0x40543690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40542ac8" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40542ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40542ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40542d80"/>
        <function-ref name="toggle" scoped="" ref="0x40542e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40541010"/>
        <function-ref name="get" scoped="" ref="0x405410f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405411d0"/>
        <function-ref name="set" scoped="" ref="0x405412b0"/>
        <function-ref name="clr" scoped="" ref="0x40541390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4054c7d0" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4054c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4054ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4054cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4054cc48"/>
        <function-ref name="get" scoped="" ref="0x4054cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054ce08"/>
        <function-ref name="set" scoped="" ref="0x4054cee8"/>
        <function-ref name="clr" scoped="" ref="0x4054b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d22538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d22538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d22710"/>
        <function-ref name="isInput" scoped="" ref="0x40d227f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d228d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d229b0"/>
        <function-ref name="get" scoped="" ref="0x40d22a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d22b70"/>
        <function-ref name="set" scoped="" ref="0x40d22c50"/>
        <function-ref name="clr" scoped="" ref="0x40d22d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d20010" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d201e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d202c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d203a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d20488"/>
        <function-ref name="get" scoped="" ref="0x40d20568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d20648"/>
        <function-ref name="set" scoped="" ref="0x40d20728"/>
        <function-ref name="clr" scoped="" ref="0x40d20808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d1f9e8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d1f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d1fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d1fca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d1fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d1fe60"/>
        <function-ref name="get" scoped="" ref="0x40d1e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d1e0f0"/>
        <function-ref name="set" scoped="" ref="0x40d1e1d0"/>
        <function-ref name="clr" scoped="" ref="0x40d1e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d1d538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d1d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d1d710"/>
        <function-ref name="isInput" scoped="" ref="0x40d1d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d1d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d1d9b0"/>
        <function-ref name="get" scoped="" ref="0x40d1da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d1db70"/>
        <function-ref name="set" scoped="" ref="0x40d1dc50"/>
        <function-ref name="clr" scoped="" ref="0x40d1dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d1b010" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d1b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d1b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d1b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d1b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d1b488"/>
        <function-ref name="get" scoped="" ref="0x40d1b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d1b648"/>
        <function-ref name="set" scoped="" ref="0x40d1b728"/>
        <function-ref name="clr" scoped="" ref="0x40d1b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d469e8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d469e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d46bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d46ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d46d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d46e60"/>
        <function-ref name="get" scoped="" ref="0x40d45010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d450f0"/>
        <function-ref name="set" scoped="" ref="0x40d451d0"/>
        <function-ref name="clr" scoped="" ref="0x40d452b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d44538" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d44538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d44710"/>
        <function-ref name="isInput" scoped="" ref="0x40d447f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d448d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d449b0"/>
        <function-ref name="get" scoped="" ref="0x40d44a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d44b70"/>
        <function-ref name="set" scoped="" ref="0x40d44c50"/>
        <function-ref name="clr" scoped="" ref="0x40d44d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d42010" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d42010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d421e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d422c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d423a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d42488"/>
        <function-ref name="get" scoped="" ref="0x40d42568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d42648"/>
        <function-ref name="set" scoped="" ref="0x40d42728"/>
        <function-ref name="clr" scoped="" ref="0x40d42808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40547818" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40547818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405479f0"/>
        <function-ref name="isInput" scoped="" ref="0x40547ad0"/>
        <function-ref name="toggle" scoped="" ref="0x40547bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40547c90"/>
        <function-ref name="get" scoped="" ref="0x40547d70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40547e50"/>
        <function-ref name="set" scoped="" ref="0x40552010"/>
        <function-ref name="clr" scoped="" ref="0x405520f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4055dec0" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4055dec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4055c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4055c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4055c360"/>
        <function-ref name="get" scoped="" ref="0x4055c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055c520"/>
        <function-ref name="set" scoped="" ref="0x4055c600"/>
        <function-ref name="clr" scoped="" ref="0x4055c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4055a538" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4055a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055a710"/>
        <function-ref name="isInput" scoped="" ref="0x4055a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4055a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4055a9b0"/>
        <function-ref name="get" scoped="" ref="0x4055aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055ab70"/>
        <function-ref name="set" scoped="" ref="0x4055ac50"/>
        <function-ref name="clr" scoped="" ref="0x4055ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40564b68" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40564b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40564d40"/>
        <function-ref name="isInput" scoped="" ref="0x40564e20"/>
        <function-ref name="toggle" scoped="" ref="0x40564f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40562010"/>
        <function-ref name="get" scoped="" ref="0x405620f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405621d0"/>
        <function-ref name="set" scoped="" ref="0x405622b0"/>
        <function-ref name="clr" scoped="" ref="0x40562390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40560228" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40560228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40560400"/>
        <function-ref name="isInput" scoped="" ref="0x405604e0"/>
        <function-ref name="toggle" scoped="" ref="0x405605c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405606a0"/>
        <function-ref name="get" scoped="" ref="0x40560780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40560860"/>
        <function-ref name="set" scoped="" ref="0x40560940"/>
        <function-ref name="clr" scoped="" ref="0x40560a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4056a880" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4056a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056aa58"/>
        <function-ref name="isInput" scoped="" ref="0x4056ab38"/>
        <function-ref name="toggle" scoped="" ref="0x4056ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x4056acf8"/>
        <function-ref name="get" scoped="" ref="0x4056add8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056aeb8"/>
        <function-ref name="set" scoped="" ref="0x40569010"/>
        <function-ref name="clr" scoped="" ref="0x405690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40566010" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40566010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405661e8"/>
        <function-ref name="isInput" scoped="" ref="0x405662c8"/>
        <function-ref name="toggle" scoped="" ref="0x405663a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40566488"/>
        <function-ref name="get" scoped="" ref="0x40566568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40566648"/>
        <function-ref name="set" scoped="" ref="0x40566728"/>
        <function-ref name="clr" scoped="" ref="0x40566808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405705e8" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405705e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405707c0"/>
        <function-ref name="isInput" scoped="" ref="0x405708a0"/>
        <function-ref name="toggle" scoped="" ref="0x40570980"/>
        <function-ref name="isOutput" scoped="" ref="0x40570a60"/>
        <function-ref name="get" scoped="" ref="0x40570b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40570c20"/>
        <function-ref name="set" scoped="" ref="0x40570d00"/>
        <function-ref name="clr" scoped="" ref="0x40570de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4056ebd0" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4056ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056eda8"/>
        <function-ref name="isInput" scoped="" ref="0x4056ee88"/>
        <function-ref name="toggle" scoped="" ref="0x4056d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4056d0f0"/>
        <function-ref name="get" scoped="" ref="0x4056d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056d2b0"/>
        <function-ref name="set" scoped="" ref="0x4056d390"/>
        <function-ref name="clr" scoped="" ref="0x4056d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40577228" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40577228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40577400"/>
        <function-ref name="isInput" scoped="" ref="0x405774e0"/>
        <function-ref name="toggle" scoped="" ref="0x405775c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405776a0"/>
        <function-ref name="get" scoped="" ref="0x40577780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40577860"/>
        <function-ref name="set" scoped="" ref="0x40577940"/>
        <function-ref name="clr" scoped="" ref="0x40577a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40575788" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40575788"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40575960"/>
        <function-ref name="isInput" scoped="" ref="0x40575a40"/>
        <function-ref name="toggle" scoped="" ref="0x40575b20"/>
        <function-ref name="isOutput" scoped="" ref="0x40575c00"/>
        <function-ref name="get" scoped="" ref="0x40575ce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40575dc0"/>
        <function-ref name="set" scoped="" ref="0x40575ea0"/>
        <function-ref name="clr" scoped="" ref="0x40574010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40572d00" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40572d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40572ed8"/>
        <function-ref name="isInput" scoped="" ref="0x40571010"/>
        <function-ref name="toggle" scoped="" ref="0x405710f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405711d0"/>
        <function-ref name="get" scoped="" ref="0x405712b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40571390"/>
        <function-ref name="set" scoped="" ref="0x40571470"/>
        <function-ref name="clr" scoped="" ref="0x40571550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4057d260" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4057d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057d438"/>
        <function-ref name="isInput" scoped="" ref="0x4057d518"/>
        <function-ref name="toggle" scoped="" ref="0x4057d5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057d6d8"/>
        <function-ref name="get" scoped="" ref="0x4057d7b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057d898"/>
        <function-ref name="set" scoped="" ref="0x4057d978"/>
        <function-ref name="clr" scoped="" ref="0x4057da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4059c650" loc="27:/home/sumant/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4059c650"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403c07d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403c07d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4059c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4059ca00" loc="28:/home/sumant/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4059ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4059cbd8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4059ccb8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4059cd98"/>
        <function-ref name="actualMicro" scoped="" ref="0x4059ce78"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4059b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x405a7d78" loc="60:/home/sumant/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x405a7d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405b4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405a7010" loc="57:/home/sumant/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405a7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405a71e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x405a7970" loc="59:/home/sumant/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x405a7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a7b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x405a73a8" loc="58:/home/sumant/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x405a73a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a7580"/>
        <function-ref name="taskLoop" scoped="" ref="0x405a7660"/>
        <function-ref name="runNextTask" scoped="" ref="0x405a7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c9600" loc="48:/home/sumant/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c9600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c97d8"/>
        <function-ref name="runTask" scoped="" ref="0x403c98b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c3ed8" loc="47:/home/sumant/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c3ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bf0c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403bf1a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403bf280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4043b3a0" loc="56:/home/sumant/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4043b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043b578"/>
        <function-ref name="runTask" scoped="" ref="0x4043b658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4043a040" loc="57:/home/sumant/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4043a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4043a218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40435b00" loc="55:/home/sumant/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40435b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40435cd8"/>
        <function-ref name="taskLoop" scoped="" ref="0x40435db8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40435e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4044f670" loc="54:/home/sumant/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4044f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4044f848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403be8e8" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403be8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403beac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40448680" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40448680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40448858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x405b5ea0" loc="60:RoomOccC.nc">
      <component-ref qname="RoomOccC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405b5ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405bb0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x405d47d0" loc="62:RoomOccC.nc">
      <component-ref qname="RoomOccC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405d47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405d49a8"/>
        <function-ref name="getPayload" scoped="" ref="0x405d4a88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d4b68"/>
        <function-ref name="cancel" scoped="" ref="0x405d4c48"/>
        <function-ref name="sendDone" scoped="" ref="0x405d4d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x405e39d0" loc="64:RoomOccC.nc">
      <component-ref qname="RoomOccC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405e39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e3ba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405e3c88"/>
        <function-ref name="getPayload" scoped="" ref="0x405e3d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e3e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405e3f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x405e04d8" loc="65:RoomOccC.nc">
      <component-ref qname="RoomOccC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x405e04d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405e0b00"/>
        <function-ref name="readDone" scoped="" ref="0x405e0d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x405eb1f8" loc="66:RoomOccC.nc">
      <component-ref qname="RoomOccC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x405eb1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405eb3d0"/>
        <function-ref name="stopDone" scoped="" ref="0x405eb4b0"/>
        <function-ref name="start" scoped="" ref="0x405eb590"/>
        <function-ref name="stop" scoped="" ref="0x405eb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x405cc298" loc="61:RoomOccC.nc">
      <component-ref qname="RoomOccC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405cc298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405cc470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x405dc968" loc="63:RoomOccC.nc">
      <component-ref qname="RoomOccC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x405dc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405c24c8"/>
        <function-ref name="fired" scoped="" ref="0x405ba768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405bae70"/>
        <function-ref name="isOneShot" scoped="" ref="0x405bac18"/>
        <function-ref name="getdt" scoped="" ref="0x405c2978"/>
        <function-ref name="gett0" scoped="" ref="0x405c2720"/>
        <function-ref name="isRunning" scoped="" ref="0x405ba9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405ba010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405c21a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x405ba290"/>
        <function-ref name="stop" scoped="" ref="0x405ba510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405b5298" loc="59:RoomOccC.nc">
      <component-ref qname="RoomOccC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405b5298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405b5470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405b5550"/>
        <function-ref name="led1On" scoped="" ref="0x405b5630"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405b5710"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405b57f0"/>
        <function-ref name="get" scoped="" ref="0x405b58d0"/>
        <function-ref name="led1Off" scoped="" ref="0x405b59b0"/>
        <function-ref name="led2Off" scoped="" ref="0x405b5d30"/>
        <function-ref name="set" scoped="" ref="0x405b5a90"/>
        <function-ref name="led0On" scoped="" ref="0x405b5b70"/>
        <function-ref name="led2On" scoped="" ref="0x405b5c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4059fba8" loc="46:/home/sumant/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4059fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4059fd80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4059fe60"/>
        <function-ref name="led1On" scoped="" ref="0x405f8010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405f80f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405f81d0"/>
        <function-ref name="get" scoped="" ref="0x405f82b0"/>
        <function-ref name="led1Off" scoped="" ref="0x405f8390"/>
        <function-ref name="led2Off" scoped="" ref="0x405f8710"/>
        <function-ref name="set" scoped="" ref="0x405f8470"/>
        <function-ref name="led0On" scoped="" ref="0x405f8550"/>
        <function-ref name="led2On" scoped="" ref="0x405f8630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40604030" loc="50:/home/sumant/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40604030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40604208"/>
        <function-ref name="isInput" scoped="" ref="0x406042e8"/>
        <function-ref name="toggle" scoped="" ref="0x406043c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406044a8"/>
        <function-ref name="get" scoped="" ref="0x40604588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40604668"/>
        <function-ref name="set" scoped="" ref="0x40604748"/>
        <function-ref name="clr" scoped="" ref="0x40604828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405f5010" loc="46:/home/sumant/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405f5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f51e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40604a18" loc="51:/home/sumant/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40604a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40604bf0"/>
        <function-ref name="isInput" scoped="" ref="0x40604cd0"/>
        <function-ref name="toggle" scoped="" ref="0x40604db0"/>
        <function-ref name="isOutput" scoped="" ref="0x40604e90"/>
        <function-ref name="get" scoped="" ref="0x40603010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406030f0"/>
        <function-ref name="set" scoped="" ref="0x406031d0"/>
        <function-ref name="clr" scoped="" ref="0x406032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405f5358" loc="47:/home/sumant/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405f5358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405f5530"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405f5610"/>
        <function-ref name="led1On" scoped="" ref="0x405f56f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405f57d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405f58b0"/>
        <function-ref name="get" scoped="" ref="0x405f5990"/>
        <function-ref name="led1Off" scoped="" ref="0x405f5a70"/>
        <function-ref name="led2Off" scoped="" ref="0x405f5df0"/>
        <function-ref name="set" scoped="" ref="0x405f5b50"/>
        <function-ref name="led0On" scoped="" ref="0x405f5c30"/>
        <function-ref name="led2On" scoped="" ref="0x405f5d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x406034a0" loc="52:/home/sumant/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x406034a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40603678"/>
        <function-ref name="isInput" scoped="" ref="0x40603758"/>
        <function-ref name="toggle" scoped="" ref="0x40603838"/>
        <function-ref name="isOutput" scoped="" ref="0x40603918"/>
        <function-ref name="get" scoped="" ref="0x406039f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40603ad8"/>
        <function-ref name="set" scoped="" ref="0x40603bb8"/>
        <function-ref name="clr" scoped="" ref="0x40603c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x405f7e38" loc="44:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405f7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40613050"/>
        <function-ref name="isInput" scoped="" ref="0x40613130"/>
        <function-ref name="toggle" scoped="" ref="0x40613210"/>
        <function-ref name="isOutput" scoped="" ref="0x406132f0"/>
        <function-ref name="get" scoped="" ref="0x406133d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406134b0"/>
        <function-ref name="set" scoped="" ref="0x40613590"/>
        <function-ref name="clr" scoped="" ref="0x40613670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40613880" loc="45:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40613880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40613a58"/>
        <function-ref name="isInput" scoped="" ref="0x40613b38"/>
        <function-ref name="toggle" scoped="" ref="0x40613c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40613cf8"/>
        <function-ref name="get" scoped="" ref="0x40613dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40613eb8"/>
        <function-ref name="set" scoped="" ref="0x40612010"/>
        <function-ref name="clr" scoped="" ref="0x406120f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40612c88" loc="47:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40612c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40612e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40612300" loc="46:/home/sumant/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40612300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406124d8"/>
        <function-ref name="isInput" scoped="" ref="0x406125b8"/>
        <function-ref name="toggle" scoped="" ref="0x40612698"/>
        <function-ref name="isOutput" scoped="" ref="0x40612778"/>
        <function-ref name="get" scoped="" ref="0x40612858"/>
        <function-ref name="makeOutput" scoped="" ref="0x40612938"/>
        <function-ref name="set" scoped="" ref="0x40612a18"/>
        <function-ref name="clr" scoped="" ref="0x40612af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406103b8" loc="19:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="RoomOccAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406103b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406109e0"/>
        <function-ref name="readDone" scoped="" ref="0x40610c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4060daf8" loc="3:/home/sumant/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4060daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4061a1e0"/>
        <function-ref name="readDone" scoped="" ref="0x4061a438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x406227f8" loc="8:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x406227f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40622e20"/>
        <function-ref name="readDone" scoped="" ref="0x40620098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x406171b8" loc="5:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x406171b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40617390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40617470"/>
        <function-ref name="request" scoped="" ref="0x40617550"/>
        <function-ref name="granted" scoped="" ref="0x40617630"/>
        <function-ref name="isOwner" scoped="" ref="0x40617710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x40617c70" loc="6:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x40617c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40617e48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40617f28"/>
        <function-ref name="request" scoped="" ref="0x40616018"/>
        <function-ref name="granted" scoped="" ref="0x406160f8"/>
        <function-ref name="isOwner" scoped="" ref="0x406161d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x406167d8" loc="7:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x406167d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40616e00"/>
        <function-ref name="readDone" scoped="" ref="0x40622068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x40625368" loc="36:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x40625368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40625540"/>
        <function-ref name="disable" scoped="" ref="0x40625620"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40625700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406257e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x4062f010" loc="45:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x4062f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x4062c850" loc="23:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x4062c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062ca28"/>
        <function-ref name="isInput" scoped="" ref="0x4062cb08"/>
        <function-ref name="toggle" scoped="" ref="0x4062cbe8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062ccc8"/>
        <function-ref name="get" scoped="" ref="0x4062cda8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062ce88"/>
        <function-ref name="set" scoped="" ref="0x4062b010"/>
        <function-ref name="clr" scoped="" ref="0x4062b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x4062a730" loc="26:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x4062a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062a908"/>
        <function-ref name="isInput" scoped="" ref="0x4062a9e8"/>
        <function-ref name="toggle" scoped="" ref="0x4062aac8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062aba8"/>
        <function-ref name="get" scoped="" ref="0x4062ac88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062ad68"/>
        <function-ref name="set" scoped="" ref="0x4062ae48"/>
        <function-ref name="clr" scoped="" ref="0x4062af28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x4062fb80" loc="48:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x4062fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062fd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x4062e3e0" loc="50:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x4062e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062e6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40628580" loc="30:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40628580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628758"/>
        <function-ref name="isInput" scoped="" ref="0x40628838"/>
        <function-ref name="toggle" scoped="" ref="0x40628918"/>
        <function-ref name="isOutput" scoped="" ref="0x406289f8"/>
        <function-ref name="get" scoped="" ref="0x40628ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40628bb8"/>
        <function-ref name="set" scoped="" ref="0x40628c98"/>
        <function-ref name="clr" scoped="" ref="0x40628d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x40632d38" loc="42:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x40632d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40632f10"/>
        <function-ref name="isInput" scoped="" ref="0x40630010"/>
        <function-ref name="toggle" scoped="" ref="0x406300f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406301d0"/>
        <function-ref name="get" scoped="" ref="0x406302b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40630390"/>
        <function-ref name="set" scoped="" ref="0x40630470"/>
        <function-ref name="clr" scoped="" ref="0x40630550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x4061d490" loc="21:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x4061d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061d668"/>
        <function-ref name="isInput" scoped="" ref="0x4061d748"/>
        <function-ref name="toggle" scoped="" ref="0x4061d828"/>
        <function-ref name="isOutput" scoped="" ref="0x4061d908"/>
        <function-ref name="get" scoped="" ref="0x4061d9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061dac8"/>
        <function-ref name="set" scoped="" ref="0x4061dba8"/>
        <function-ref name="clr" scoped="" ref="0x4061dc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x4062b2d0" loc="24:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x4062b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062b4a8"/>
        <function-ref name="isInput" scoped="" ref="0x4062b588"/>
        <function-ref name="toggle" scoped="" ref="0x4062b668"/>
        <function-ref name="isOutput" scoped="" ref="0x4062b748"/>
        <function-ref name="get" scoped="" ref="0x4062b828"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062b908"/>
        <function-ref name="set" scoped="" ref="0x4062b9e8"/>
        <function-ref name="clr" scoped="" ref="0x4062bac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x40634198" loc="38:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x40634198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40634370"/>
        <function-ref name="disable" scoped="" ref="0x40634450"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40634530"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40634610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x4062f3e0" loc="46:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x4062f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x40632318" loc="41:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x40632318"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406324f0"/>
        <function-ref name="isInput" scoped="" ref="0x406325d0"/>
        <function-ref name="toggle" scoped="" ref="0x406326b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40632790"/>
        <function-ref name="get" scoped="" ref="0x40632870"/>
        <function-ref name="makeOutput" scoped="" ref="0x40632950"/>
        <function-ref name="set" scoped="" ref="0x40632a30"/>
        <function-ref name="clr" scoped="" ref="0x40632b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x40629118" loc="27:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x40629118"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406292f0"/>
        <function-ref name="isInput" scoped="" ref="0x406293d0"/>
        <function-ref name="toggle" scoped="" ref="0x406294b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40629590"/>
        <function-ref name="get" scoped="" ref="0x40629670"/>
        <function-ref name="makeOutput" scoped="" ref="0x40629750"/>
        <function-ref name="set" scoped="" ref="0x40629830"/>
        <function-ref name="clr" scoped="" ref="0x40629910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x40633b98" loc="35:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x40633b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40633df0"/>
        <function-ref name="disable" scoped="" ref="0x40633ed0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40625010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x4062e8b0" loc="51:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x4062e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40627010" loc="31:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40627010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406271e8"/>
        <function-ref name="isInput" scoped="" ref="0x406272c8"/>
        <function-ref name="toggle" scoped="" ref="0x406273a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40627488"/>
        <function-ref name="get" scoped="" ref="0x40627568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40627648"/>
        <function-ref name="set" scoped="" ref="0x40627728"/>
        <function-ref name="clr" scoped="" ref="0x40627808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x4061de68" loc="22:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x4061de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062c050"/>
        <function-ref name="isInput" scoped="" ref="0x4062c130"/>
        <function-ref name="toggle" scoped="" ref="0x4062c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4062c2f0"/>
        <function-ref name="get" scoped="" ref="0x4062c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062c4b0"/>
        <function-ref name="set" scoped="" ref="0x4062c590"/>
        <function-ref name="clr" scoped="" ref="0x4062c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x4062bca8" loc="25:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x4062bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062be80"/>
        <function-ref name="isInput" scoped="" ref="0x4062a010"/>
        <function-ref name="toggle" scoped="" ref="0x4062a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062a1d0"/>
        <function-ref name="get" scoped="" ref="0x4062a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062a390"/>
        <function-ref name="set" scoped="" ref="0x4062a470"/>
        <function-ref name="clr" scoped="" ref="0x4062a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x4062f7b0" loc="47:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x4062f7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x4062e010" loc="49:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x4062e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40629b00" loc="29:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40629b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40629cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40629db8"/>
        <function-ref name="toggle" scoped="" ref="0x40629e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40628010"/>
        <function-ref name="get" scoped="" ref="0x406280f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406281d0"/>
        <function-ref name="set" scoped="" ref="0x406282b0"/>
        <function-ref name="clr" scoped="" ref="0x40628390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x40625a58" loc="37:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x40625a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40625c30"/>
        <function-ref name="disable" scoped="" ref="0x40625d10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40625df0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40625ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x40634838" loc="40:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x40634838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40634a10"/>
        <function-ref name="isInput" scoped="" ref="0x40634af0"/>
        <function-ref name="toggle" scoped="" ref="0x40634bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40634cb0"/>
        <function-ref name="get" scoped="" ref="0x40634d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40634e70"/>
        <function-ref name="set" scoped="" ref="0x40632010"/>
        <function-ref name="clr" scoped="" ref="0x406320f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x4062ec80" loc="52:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x4062ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x406209e0" loc="20:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x406209e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40620bb8"/>
        <function-ref name="isInput" scoped="" ref="0x40620c98"/>
        <function-ref name="toggle" scoped="" ref="0x40620d78"/>
        <function-ref name="isOutput" scoped="" ref="0x40620e58"/>
        <function-ref name="get" scoped="" ref="0x4061d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061d0f0"/>
        <function-ref name="set" scoped="" ref="0x4061d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4061d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x406279f8" loc="32:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x406279f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40627bd0"/>
        <function-ref name="isInput" scoped="" ref="0x40627cb0"/>
        <function-ref name="toggle" scoped="" ref="0x40627d90"/>
        <function-ref name="isOutput" scoped="" ref="0x40627e70"/>
        <function-ref name="get" scoped="" ref="0x40626010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406260f0"/>
        <function-ref name="set" scoped="" ref="0x406261d0"/>
        <function-ref name="clr" scoped="" ref="0x406262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x4062d9d8" loc="18:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x4062d9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4062dbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x4063a5d8" loc="21:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x4063a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4063a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x4063ad78" loc="23:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x4063ad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40639010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x4062dda8" loc="19:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x4062dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4063a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40639208" loc="24:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40639208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x406393e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x4063a208" loc="20:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x4063a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4063a3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x4063a9a8" loc="22:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x4063a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x4063ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x406395d8" loc="25:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x406395d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x406397b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x4064c4f8" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x4064c4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4064c6d0"/>
        <function-ref name="fired" scoped="" ref="0x4064c7b0"/>
        <function-ref name="disable" scoped="" ref="0x4064c890"/>
        <function-ref name="edge" scoped="" ref="0x4064c970"/>
        <function-ref name="enable" scoped="" ref="0x4064ca50"/>
        <function-ref name="getValue" scoped="" ref="0x4064cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40640890" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40640890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40640a68"/>
        <function-ref name="fired" scoped="" ref="0x40640b48"/>
        <function-ref name="disable" scoped="" ref="0x40640c28"/>
        <function-ref name="edge" scoped="" ref="0x40640d08"/>
        <function-ref name="enable" scoped="" ref="0x40640de8"/>
        <function-ref name="getValue" scoped="" ref="0x40640ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x4063d338" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x4063d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4063d510"/>
        <function-ref name="fired" scoped="" ref="0x4063d5f0"/>
        <function-ref name="disable" scoped="" ref="0x4063d6d0"/>
        <function-ref name="edge" scoped="" ref="0x4063d7b0"/>
        <function-ref name="enable" scoped="" ref="0x4063d890"/>
        <function-ref name="getValue" scoped="" ref="0x4063d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x4064cd78" loc="52:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x4064cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4064b010"/>
        <function-ref name="fired" scoped="" ref="0x4064b0f0"/>
        <function-ref name="disable" scoped="" ref="0x4064b1d0"/>
        <function-ref name="edge" scoped="" ref="0x4064b2b0"/>
        <function-ref name="enable" scoped="" ref="0x4064b390"/>
        <function-ref name="getValue" scoped="" ref="0x4064b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x4063f168" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x4063f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4063f340"/>
        <function-ref name="fired" scoped="" ref="0x4063f420"/>
        <function-ref name="disable" scoped="" ref="0x4063f500"/>
        <function-ref name="edge" scoped="" ref="0x4063f5e0"/>
        <function-ref name="enable" scoped="" ref="0x4063f6c0"/>
        <function-ref name="getValue" scoped="" ref="0x4063f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x4063dbb8" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x4063dbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4063dd90"/>
        <function-ref name="fired" scoped="" ref="0x4063de70"/>
        <function-ref name="disable" scoped="" ref="0x4064c010"/>
        <function-ref name="edge" scoped="" ref="0x4064c0f0"/>
        <function-ref name="enable" scoped="" ref="0x4064c1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4064c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40640010" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40640010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406401e8"/>
        <function-ref name="fired" scoped="" ref="0x406402c8"/>
        <function-ref name="disable" scoped="" ref="0x406403a8"/>
        <function-ref name="edge" scoped="" ref="0x40640488"/>
        <function-ref name="enable" scoped="" ref="0x40640568"/>
        <function-ref name="getValue" scoped="" ref="0x40640648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x4063f9e8" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x4063f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4063fbc0"/>
        <function-ref name="fired" scoped="" ref="0x4063fca0"/>
        <function-ref name="disable" scoped="" ref="0x4063fd80"/>
        <function-ref name="edge" scoped="" ref="0x4063fe60"/>
        <function-ref name="enable" scoped="" ref="0x4063d010"/>
        <function-ref name="getValue" scoped="" ref="0x4063d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x406454a8" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x406454a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40645680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40647df8" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40647df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40646010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40646ba0" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40646ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40646d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40645920" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40645920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40645af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x406462b0" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x406462b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40646488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40645030" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40645030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40645208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x40647980" loc="43:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x40647980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40647b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40646728" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40646728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40646900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40648bf8" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40648bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40648dd0"/>
        <function-ref name="fired" scoped="" ref="0x40648eb0"/>
        <function-ref name="disable" scoped="" ref="0x40664010"/>
        <function-ref name="edge" scoped="" ref="0x406640f0"/>
        <function-ref name="enable" scoped="" ref="0x406641d0"/>
        <function-ref name="getValue" scoped="" ref="0x406642b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40664430" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40664430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40664608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40668d60" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40668d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40667010"/>
        <function-ref name="fired" scoped="" ref="0x406670f0"/>
        <function-ref name="disable" scoped="" ref="0x406671d0"/>
        <function-ref name="edge" scoped="" ref="0x406672b0"/>
        <function-ref name="enable" scoped="" ref="0x40667390"/>
        <function-ref name="getValue" scoped="" ref="0x40667470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x406675f0" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x406675f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40665010" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40665010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406651e8"/>
        <function-ref name="fired" scoped="" ref="0x406652c8"/>
        <function-ref name="disable" scoped="" ref="0x406653a8"/>
        <function-ref name="edge" scoped="" ref="0x40665488"/>
        <function-ref name="enable" scoped="" ref="0x40665568"/>
        <function-ref name="getValue" scoped="" ref="0x40665648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x406657c8" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x406657c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406659a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40674228" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40674228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40674400"/>
        <function-ref name="fired" scoped="" ref="0x406744e0"/>
        <function-ref name="disable" scoped="" ref="0x406745c0"/>
        <function-ref name="edge" scoped="" ref="0x406746a0"/>
        <function-ref name="enable" scoped="" ref="0x40674780"/>
        <function-ref name="getValue" scoped="" ref="0x40674860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x406749e0" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x406749e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40674bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40672408" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40672408"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406725e0"/>
        <function-ref name="fired" scoped="" ref="0x406726c0"/>
        <function-ref name="disable" scoped="" ref="0x406727a0"/>
        <function-ref name="edge" scoped="" ref="0x40672880"/>
        <function-ref name="enable" scoped="" ref="0x40672960"/>
        <function-ref name="getValue" scoped="" ref="0x40672a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40672bc0" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40672bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40672d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x406705e8" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x406705e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406707c0"/>
        <function-ref name="fired" scoped="" ref="0x406708a0"/>
        <function-ref name="disable" scoped="" ref="0x40670980"/>
        <function-ref name="edge" scoped="" ref="0x40670a60"/>
        <function-ref name="enable" scoped="" ref="0x40670b40"/>
        <function-ref name="getValue" scoped="" ref="0x40670c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40670da0" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40670da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4066e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4066d840" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4066d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4066da18"/>
        <function-ref name="fired" scoped="" ref="0x4066daf8"/>
        <function-ref name="disable" scoped="" ref="0x4066dbd8"/>
        <function-ref name="edge" scoped="" ref="0x4066dcb8"/>
        <function-ref name="enable" scoped="" ref="0x4066dd98"/>
        <function-ref name="getValue" scoped="" ref="0x4066de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4067e010" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4067e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4067e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4067da08" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4067da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4067dbe0"/>
        <function-ref name="fired" scoped="" ref="0x4067dcc0"/>
        <function-ref name="disable" scoped="" ref="0x4067dda0"/>
        <function-ref name="edge" scoped="" ref="0x4067de80"/>
        <function-ref name="enable" scoped="" ref="0x4067c010"/>
        <function-ref name="getValue" scoped="" ref="0x4067c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4067c270" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4067c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4067c448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40676b58" loc="9:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40676b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40676d30"/>
        <function-ref name="fired" scoped="" ref="0x40676e10"/>
        <function-ref name="disable" scoped="" ref="0x40676ef0"/>
        <function-ref name="edge" scoped="" ref="0x4067f010"/>
        <function-ref name="enable" scoped="" ref="0x4067f0f0"/>
        <function-ref name="getValue" scoped="" ref="0x4067f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40676560" loc="8:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40676560"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40676738"/>
        <function-ref name="disable" scoped="" ref="0x40676818"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406768f8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406769d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40690c30" loc="9:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40690c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40690e08"/>
        <function-ref name="fired" scoped="" ref="0x40690ee8"/>
        <function-ref name="disable" scoped="" ref="0x4068f010"/>
        <function-ref name="edge" scoped="" ref="0x4068f0f0"/>
        <function-ref name="enable" scoped="" ref="0x4068f1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4068f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40690638" loc="8:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40690638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40690810"/>
        <function-ref name="disable" scoped="" ref="0x406908f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406909d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40690ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x4068ed50" loc="9:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x4068ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4068ef28"/>
        <function-ref name="fired" scoped="" ref="0x4068d018"/>
        <function-ref name="disable" scoped="" ref="0x4068d0f8"/>
        <function-ref name="edge" scoped="" ref="0x4068d1d8"/>
        <function-ref name="enable" scoped="" ref="0x4068d2b8"/>
        <function-ref name="getValue" scoped="" ref="0x4068d398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4068e758" loc="8:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4068e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4068e930"/>
        <function-ref name="disable" scoped="" ref="0x4068ea10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4068eaf0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4068ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x4068ce00" loc="9:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x4068ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4068b010"/>
        <function-ref name="fired" scoped="" ref="0x4068b0f0"/>
        <function-ref name="disable" scoped="" ref="0x4068b1d0"/>
        <function-ref name="edge" scoped="" ref="0x4068b2b0"/>
        <function-ref name="enable" scoped="" ref="0x4068b390"/>
        <function-ref name="getValue" scoped="" ref="0x4068b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x4068c808" loc="8:/home/sumant/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x4068c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4068c9e0"/>
        <function-ref name="disable" scoped="" ref="0x4068cac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4068cba0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4068cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x40695ba8" loc="17:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x40695ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40695d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x406955a8" loc="16:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406955a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40695780"/>
        <function-ref name="getChannel" scoped="" ref="0x40695860"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40695940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x406ea808" loc="92:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x406ea808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x406ea9f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406eaad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406e97c0" loc="96:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406e97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406e99a8"/>
        <function-ref name="configure" scoped="" ref="0x406e9a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x406eac10" loc="93:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406eac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406eade8"/>
        <function-ref name="requested" scoped="" ref="0x406eaec8"/>
        <function-ref name="granted" scoped="" ref="0x406e9010"/>
        <function-ref name="isOwner" scoped="" ref="0x406e90f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406ea0c8" loc="91:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406ea0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406ea2b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406ea390"/>
        <function-ref name="request" scoped="" ref="0x406ea470"/>
        <function-ref name="granted" scoped="" ref="0x406ea550"/>
        <function-ref name="isOwner" scoped="" ref="0x406ea630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406e9310" loc="94:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406e9310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406e94e8"/>
        <function-ref name="userId" scoped="" ref="0x406e95c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40de7998" loc="44:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40de7998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40de7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40de7cd0" loc="45:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40de7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40de7ea8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40de5010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40de50f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40de51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40de4618" loc="55:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40de4618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40de4800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40de48e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40de2610" loc="60:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40de2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40de27f8"/>
        <function-ref name="configure" scoped="" ref="0x40de28d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40de2a38" loc="61:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40de2a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40de2c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x40de2cf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40de2dd0"/>
        <function-ref name="dequeue" scoped="" ref="0x40de2eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40de4a20" loc="56:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40de4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40de4bf8"/>
        <function-ref name="requested" scoped="" ref="0x40de4cd8"/>
        <function-ref name="granted" scoped="" ref="0x40de4db8"/>
        <function-ref name="isOwner" scoped="" ref="0x40de4e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40de2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40de1010" loc="62:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40de1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40de11e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40de12c8"/>
        <function-ref name="led1On" scoped="" ref="0x40de13a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40de1488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40de1568"/>
        <function-ref name="get" scoped="" ref="0x40de1648"/>
        <function-ref name="led1Off" scoped="" ref="0x40de1728"/>
        <function-ref name="led0On" scoped="" ref="0x40de1aa8"/>
        <function-ref name="set" scoped="" ref="0x40de18e8"/>
        <function-ref name="led2On" scoped="" ref="0x40de1808"/>
        <function-ref name="led2Off" scoped="" ref="0x40de19c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40de5ea8" loc="54:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40de5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40de40c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40de41a0"/>
        <function-ref name="request" scoped="" ref="0x40de4280"/>
        <function-ref name="granted" scoped="" ref="0x40de4360"/>
        <function-ref name="isOwner" scoped="" ref="0x40de4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40de2150" loc="57:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40de2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40de2328"/>
        <function-ref name="userId" scoped="" ref="0x40de2408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40de1c28" loc="75:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40de1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40de1e00"/>
        <function-ref name="runTask" scoped="" ref="0x40de1ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x406e75a8" loc="92:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x406e75a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x406e7790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406e7870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406e6520" loc="96:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406e6520"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406e6708"/>
        <function-ref name="configure" scoped="" ref="0x406e67e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x406e79b0" loc="93:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406e79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406e7b88"/>
        <function-ref name="requested" scoped="" ref="0x406e7c68"/>
        <function-ref name="granted" scoped="" ref="0x406e7d48"/>
        <function-ref name="isOwner" scoped="" ref="0x406e7e28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406e7f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406e8e18" loc="91:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406e8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406e7050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406e7130"/>
        <function-ref name="request" scoped="" ref="0x406e7210"/>
        <function-ref name="granted" scoped="" ref="0x406e72f0"/>
        <function-ref name="isOwner" scoped="" ref="0x406e73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406e6070" loc="94:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406e6070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406e6248"/>
        <function-ref name="userId" scoped="" ref="0x406e6328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40df5aa0" loc="44:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40df5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40df5c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40df5dd8" loc="45:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40df5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40df2010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40df20f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40df21d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40df22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40df1750" loc="55:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40df1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40df1938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40df1a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40df06f0" loc="60:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40df06f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40df08d8"/>
        <function-ref name="configure" scoped="" ref="0x40df09b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40df0b18" loc="61:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40df0b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40df0cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40df0dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40df0eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x40def010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40df1b58" loc="56:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40df1b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40df1d30"/>
        <function-ref name="requested" scoped="" ref="0x40df1e10"/>
        <function-ref name="granted" scoped="" ref="0x40df1ef0"/>
        <function-ref name="isOwner" scoped="" ref="0x40df0010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40df00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40def150" loc="62:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40def150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40def328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40def408"/>
        <function-ref name="led1On" scoped="" ref="0x40def4e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40def5c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40def6a8"/>
        <function-ref name="get" scoped="" ref="0x40def788"/>
        <function-ref name="led1Off" scoped="" ref="0x40def868"/>
        <function-ref name="led0On" scoped="" ref="0x40defbe8"/>
        <function-ref name="set" scoped="" ref="0x40defa28"/>
        <function-ref name="led2On" scoped="" ref="0x40def948"/>
        <function-ref name="led2Off" scoped="" ref="0x40defb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40df1010" loc="54:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40df1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40df11f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40df12d8"/>
        <function-ref name="request" scoped="" ref="0x40df13b8"/>
        <function-ref name="granted" scoped="" ref="0x40df1498"/>
        <function-ref name="isOwner" scoped="" ref="0x40df1578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40df0230" loc="57:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40df0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40df0408"/>
        <function-ref name="userId" scoped="" ref="0x40df04e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40defd68" loc="75:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40defd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40dee010"/>
        <function-ref name="runTask" scoped="" ref="0x40dee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x406e42c8" loc="92:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x406e42c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x406e44b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406e4590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406e22e8" loc="96:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406e22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406e24d0"/>
        <function-ref name="configure" scoped="" ref="0x406e25b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x406e46d0" loc="93:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406e46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406e48a8"/>
        <function-ref name="requested" scoped="" ref="0x406e4988"/>
        <function-ref name="granted" scoped="" ref="0x406e4a68"/>
        <function-ref name="isOwner" scoped="" ref="0x406e4b48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406e4c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406e5b68" loc="91:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406e5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406e5d50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406e5e30"/>
        <function-ref name="request" scoped="" ref="0x406e5f10"/>
        <function-ref name="granted" scoped="" ref="0x406e4010"/>
        <function-ref name="isOwner" scoped="" ref="0x406e40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x406e4d68" loc="94:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406e4d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406e2010"/>
        <function-ref name="userId" scoped="" ref="0x406e20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e03a38" loc="44:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e03a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e03c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40e03d70" loc="45:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40e03d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e31010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e310f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e311d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40e312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e30750" loc="55:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e30750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e30938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e30a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e2f6f0" loc="60:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e2f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e2f8d8"/>
        <function-ref name="configure" scoped="" ref="0x40e2f9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e2fb18" loc="61:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e2fb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e2fcf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e2fdd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e2feb0"/>
        <function-ref name="dequeue" scoped="" ref="0x40e2d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40e30b58" loc="56:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e30b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e30d30"/>
        <function-ref name="requested" scoped="" ref="0x40e30e10"/>
        <function-ref name="granted" scoped="" ref="0x40e30ef0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e2f010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e2f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e2d150" loc="62:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e2d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e2d328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e2d408"/>
        <function-ref name="led1On" scoped="" ref="0x40e2d4e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e2d5c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e2d6a8"/>
        <function-ref name="get" scoped="" ref="0x40e2d788"/>
        <function-ref name="led1Off" scoped="" ref="0x40e2d868"/>
        <function-ref name="led0On" scoped="" ref="0x40e2dbe8"/>
        <function-ref name="set" scoped="" ref="0x40e2da28"/>
        <function-ref name="led2On" scoped="" ref="0x40e2d948"/>
        <function-ref name="led2Off" scoped="" ref="0x40e2db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e30010" loc="54:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e30010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e301f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e302d8"/>
        <function-ref name="request" scoped="" ref="0x40e303b8"/>
        <function-ref name="granted" scoped="" ref="0x40e30498"/>
        <function-ref name="isOwner" scoped="" ref="0x40e30578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e2f230" loc="57:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e2f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e2f408"/>
        <function-ref name="userId" scoped="" ref="0x40e2f4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40e2dd68" loc="75:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40e2dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e2c010"/>
        <function-ref name="runTask" scoped="" ref="0x40e2c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x406f2eb8" loc="69:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406f2eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406f10c0"/>
        <function-ref name="stopDone" scoped="" ref="0x406f11a0"/>
        <function-ref name="start" scoped="" ref="0x406f1280"/>
        <function-ref name="stop" scoped="" ref="0x406f1360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x406f14a0" loc="71:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x406f14a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x406f1678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x406f17b8" loc="72:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x406f17b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406f1990"/>
        <function-ref name="requested" scoped="" ref="0x406f1a70"/>
        <function-ref name="granted" scoped="" ref="0x406f1b50"/>
        <function-ref name="isOwner" scoped="" ref="0x406f1c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x406f1d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x406f1e50" loc="73:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x406f1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406fe050"/>
        <function-ref name="userId" scoped="" ref="0x406fe130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40e43b80" loc="61:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e43b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e43d58"/>
        <function-ref name="stopDone" scoped="" ref="0x40e43e38"/>
        <function-ref name="start" scoped="" ref="0x40e43f18"/>
        <function-ref name="stop" scoped="" ref="0x40e41010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40e41150" loc="63:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40e41150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40e41328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x40e40010" loc="78:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x40e40010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e401e8"/>
        <function-ref name="runTask" scoped="" ref="0x40e402c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40e41468" loc="64:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e41468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e41640"/>
        <function-ref name="requested" scoped="" ref="0x40e41720"/>
        <function-ref name="granted" scoped="" ref="0x40e41800"/>
        <function-ref name="isOwner" scoped="" ref="0x40e418e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e419c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x40e40448" loc="73:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x40e40448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e40620"/>
        <function-ref name="runTask" scoped="" ref="0x40e40700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x40e43788" loc="60:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e43788"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e43960"/>
        <function-ref name="stop" scoped="" ref="0x40e43a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40e41b00" loc="65:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e41b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e41cd8"/>
        <function-ref name="userId" scoped="" ref="0x40e41db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40711010" loc="69:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40711010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407111e8"/>
        <function-ref name="stopDone" scoped="" ref="0x407112c8"/>
        <function-ref name="start" scoped="" ref="0x407113a8"/>
        <function-ref name="stop" scoped="" ref="0x40711488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x407115c8" loc="71:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x407115c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x407117a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x407118e0" loc="72:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407118e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40711ab8"/>
        <function-ref name="requested" scoped="" ref="0x40711b98"/>
        <function-ref name="granted" scoped="" ref="0x40711c78"/>
        <function-ref name="isOwner" scoped="" ref="0x40711d58"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40711e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40710010" loc="73:/home/sumant/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40710010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407101e8"/>
        <function-ref name="userId" scoped="" ref="0x407102c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40e356b0" loc="61:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e356b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e35888"/>
        <function-ref name="stopDone" scoped="" ref="0x40e35968"/>
        <function-ref name="start" scoped="" ref="0x40e35a48"/>
        <function-ref name="stop" scoped="" ref="0x40e35b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40e35c68" loc="63:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40e35c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40e35e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x40e34ae0" loc="78:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x40e34ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e34cb8"/>
        <function-ref name="runTask" scoped="" ref="0x40e34d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40e34010" loc="64:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e34010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e341e8"/>
        <function-ref name="requested" scoped="" ref="0x40e342c8"/>
        <function-ref name="granted" scoped="" ref="0x40e343a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40e34488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e34568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x40e34f18" loc="73:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x40e34f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e33108"/>
        <function-ref name="runTask" scoped="" ref="0x40e331e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x40e352b8" loc="60:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e352b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e35490"/>
        <function-ref name="stop" scoped="" ref="0x40e35570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40e346a8" loc="65:/home/sumant/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e346a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e34880"/>
        <function-ref name="userId" scoped="" ref="0x40e34960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4070e898" loc="4:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4070e898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4070ea70"/>
        <function-ref name="stopDone" scoped="" ref="0x4070eb50"/>
        <function-ref name="start" scoped="" ref="0x4070ec30"/>
        <function-ref name="stop" scoped="" ref="0x4070ed10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x40724be8" loc="8:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x40724be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40724dc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40724ea0"/>
        <function-ref name="request" scoped="" ref="0x40723010"/>
        <function-ref name="granted" scoped="" ref="0x407230f0"/>
        <function-ref name="isOwner" scoped="" ref="0x407231d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40724010" loc="5:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40724010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40724648"/>
        <function-ref name="readDone" scoped="" ref="0x407248b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x4071fba8" loc="32:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x4071fba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4071fd80"/>
        <function-ref name="runTask" scoped="" ref="0x4071fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x40720598" loc="10:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40720598"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40720770"/>
        <function-ref name="isInput" scoped="" ref="0x40720850"/>
        <function-ref name="toggle" scoped="" ref="0x40720930"/>
        <function-ref name="isOutput" scoped="" ref="0x40720a10"/>
        <function-ref name="get" scoped="" ref="0x40720af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40720bd0"/>
        <function-ref name="set" scoped="" ref="0x40720cb0"/>
        <function-ref name="clr" scoped="" ref="0x40720d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x4071f010" loc="11:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x4071f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4071f638"/>
        <function-ref name="readDone" scoped="" ref="0x4071f890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407233a0" loc="9:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407233a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40722e98"/>
        <function-ref name="fired" scoped="" ref="0x40722150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40722858"/>
        <function-ref name="isOneShot" scoped="" ref="0x40722600"/>
        <function-ref name="getdt" scoped="" ref="0x40720368"/>
        <function-ref name="gett0" scoped="" ref="0x40720110"/>
        <function-ref name="isRunning" scoped="" ref="0x407223a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407239c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40722b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40723c48"/>
        <function-ref name="stop" scoped="" ref="0x40723ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4071d2b8" loc="4:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4071d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4071d490"/>
        <function-ref name="stopDone" scoped="" ref="0x4071d570"/>
        <function-ref name="start" scoped="" ref="0x4071d650"/>
        <function-ref name="stop" scoped="" ref="0x4071d730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x4071c5b0" loc="8:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x4071c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4071c788"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4071c868"/>
        <function-ref name="request" scoped="" ref="0x4071c948"/>
        <function-ref name="granted" scoped="" ref="0x4071ca28"/>
        <function-ref name="isOwner" scoped="" ref="0x4071cb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4071d998" loc="5:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4071d998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4071c010"/>
        <function-ref name="readDone" scoped="" ref="0x4071c278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x4072b5b8" loc="32:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x4072b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4072b790"/>
        <function-ref name="runTask" scoped="" ref="0x4072b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x4072c010" loc="10:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x4072c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4072c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4072c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4072c488"/>
        <function-ref name="get" scoped="" ref="0x4072c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072c648"/>
        <function-ref name="set" scoped="" ref="0x4072c728"/>
        <function-ref name="clr" scoped="" ref="0x4072c808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x4072c9f8" loc="11:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x4072c9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4072b048"/>
        <function-ref name="readDone" scoped="" ref="0x4072b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4071ccd8" loc="9:/home/sumant/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4071ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4072d8a8"/>
        <function-ref name="fired" scoped="" ref="0x4072faa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4072d268"/>
        <function-ref name="isOneShot" scoped="" ref="0x4072d010"/>
        <function-ref name="getdt" scoped="" ref="0x4072dd58"/>
        <function-ref name="gett0" scoped="" ref="0x4072db00"/>
        <function-ref name="isRunning" scoped="" ref="0x4072fd00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4072f350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4072d588"/>
        <function-ref name="startOneShot" scoped="" ref="0x4072f5d0"/>
        <function-ref name="stop" scoped="" ref="0x4072f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40729660" loc="45:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40729660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40736170"/>
        <function-ref name="fired" scoped="" ref="0x407283f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40728b00"/>
        <function-ref name="isOneShot" scoped="" ref="0x407288a8"/>
        <function-ref name="getdt" scoped="" ref="0x40736620"/>
        <function-ref name="gett0" scoped="" ref="0x407363c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40728650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40729c88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40728e20"/>
        <function-ref name="startOneShot" scoped="" ref="0x40729f08"/>
        <function-ref name="stop" scoped="" ref="0x407281a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40738940" loc="49:/home/sumant/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40738940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407344c8"/>
        <function-ref name="fired" scoped="" ref="0x40735768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40735e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40735c18"/>
        <function-ref name="getdt" scoped="" ref="0x40734978"/>
        <function-ref name="gett0" scoped="" ref="0x40734720"/>
        <function-ref name="isRunning" scoped="" ref="0x407359c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40735010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407341a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40735290"/>
        <function-ref name="stop" scoped="" ref="0x40735510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40730a20" loc="46:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40730a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40742528"/>
        <function-ref name="fired" scoped="" ref="0x407437c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40743ec8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40743c70"/>
        <function-ref name="getdt" scoped="" ref="0x407429d8"/>
        <function-ref name="gett0" scoped="" ref="0x40742780"/>
        <function-ref name="isRunning" scoped="" ref="0x40743a18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40743068"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40742208"/>
        <function-ref name="startOneShot" scoped="" ref="0x407432e8"/>
        <function-ref name="stop" scoped="" ref="0x40743568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4073eaf0" loc="47:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4073eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40740200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40730270" loc="45:/home/sumant/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40730270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40730448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x407442e0" loc="29:/home/sumant/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x407442e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40744a30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40744f20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40744ca8"/>
        <function-ref name="overflow" scoped="" ref="0x407481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4073b240" loc="27:/home/sumant/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4073b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4073b418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40749978" loc="28:/home/sumant/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40749978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4073ae40"/>
        <function-ref name="fired" scoped="" ref="0x4073a610"/>
        <function-ref name="startAt" scoped="" ref="0x4073ab00"/>
        <function-ref name="isRunning" scoped="" ref="0x4073a888"/>
        <function-ref name="getAlarm" scoped="" ref="0x4074d0d8"/>
        <function-ref name="start" scoped="" ref="0x4073a0f8"/>
        <function-ref name="stop" scoped="" ref="0x4073a398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407d09e0" loc="26:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407d09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407e3010"/>
        <function-ref name="fired" scoped="" ref="0x407ce718"/>
        <function-ref name="startAt" scoped="" ref="0x407cec08"/>
        <function-ref name="isRunning" scoped="" ref="0x407ce990"/>
        <function-ref name="getAlarm" scoped="" ref="0x407e3288"/>
        <function-ref name="start" scoped="" ref="0x407ce200"/>
        <function-ref name="stop" scoped="" ref="0x407ce4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407d05a8" loc="25:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d05a8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403c05d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403c05d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407e35b8" loc="27:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407e35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407e3d08"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407e2288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407e2010"/>
        <function-ref name="overflow" scoped="" ref="0x407e2500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40e72010" loc="31:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e72010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40e721e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e722c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e723a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e72488"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e72568"/>
        <function-ref name="setControl" scoped="" ref="0x40e72648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e790a0" loc="26:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e790a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e775c8"/>
        <function-ref name="fired" scoped="" ref="0x40e79d08"/>
        <function-ref name="startAt" scoped="" ref="0x40e77288"/>
        <function-ref name="isRunning" scoped="" ref="0x40e77010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e77840"/>
        <function-ref name="start" scoped="" ref="0x40e797f0"/>
        <function-ref name="stop" scoped="" ref="0x40e79a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e7ac38" loc="25:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e7ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e7ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e77b70" loc="27:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e77b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e76308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e767f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e76580"/>
        <function-ref name="overflow" scoped="" ref="0x40e76a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40e70278" loc="33:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40e70278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40e70450"/>
        <function-ref name="compareBusy" scoped="" ref="0x40e70530"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40e70610"/>
        <function-ref name="countBusy" scoped="" ref="0x40e706f0"/>
        <function-ref name="getAssr" scoped="" ref="0x40e707d0"/>
        <function-ref name="setAssr" scoped="" ref="0x40e708b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40e72838" loc="32:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40e72838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e71d90"/>
        <function-ref name="fired" scoped="" ref="0x40e713b0"/>
        <function-ref name="get" scoped="" ref="0x40e72e80"/>
        <function-ref name="reset" scoped="" ref="0x40e71628"/>
        <function-ref name="isOn" scoped="" ref="0x40e70048"/>
        <function-ref name="set" scoped="" ref="0x40e71110"/>
        <function-ref name="start" scoped="" ref="0x40e718a0"/>
        <function-ref name="stop" scoped="" ref="0x40e71b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e76d60" loc="30:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e76d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e737f0"/>
        <function-ref name="test" scoped="" ref="0x40e73300"/>
        <function-ref name="get" scoped="" ref="0x40e753e0"/>
        <function-ref name="setScale" scoped="" ref="0x40e73a68"/>
        <function-ref name="getScale" scoped="" ref="0x40e73d08"/>
        <function-ref name="reset" scoped="" ref="0x40e75b70"/>
        <function-ref name="overflow" scoped="" ref="0x40e758f8"/>
        <function-ref name="isOn" scoped="" ref="0x40e73578"/>
        <function-ref name="set" scoped="" ref="0x40e75658"/>
        <function-ref name="start" scoped="" ref="0x40e75de8"/>
        <function-ref name="stop" scoped="" ref="0x40e73088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407a0760" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407a0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x407a0938"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407a0a18"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407a0af8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407a0bd8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407a0cb8"/>
        <function-ref name="setControl" scoped="" ref="0x407a0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x4079ec30" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x4079ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x4079ee08"/>
        <function-ref name="compareBusy" scoped="" ref="0x4079eee8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x4079d010"/>
        <function-ref name="countBusy" scoped="" ref="0x4079d0f0"/>
        <function-ref name="getAssr" scoped="" ref="0x4079d1d0"/>
        <function-ref name="setAssr" scoped="" ref="0x4079d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4079f0f0" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4079f0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4079e660"/>
        <function-ref name="fired" scoped="" ref="0x4079fc50"/>
        <function-ref name="get" scoped="" ref="0x4079f738"/>
        <function-ref name="reset" scoped="" ref="0x4079fec8"/>
        <function-ref name="isOn" scoped="" ref="0x4079e8d8"/>
        <function-ref name="set" scoped="" ref="0x4079f9b0"/>
        <function-ref name="start" scoped="" ref="0x4079e170"/>
        <function-ref name="stop" scoped="" ref="0x4079e3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4078d488" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4078d488"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4078cee0"/>
        <function-ref name="test" scoped="" ref="0x4078c9f0"/>
        <function-ref name="get" scoped="" ref="0x4078dad0"/>
        <function-ref name="setScale" scoped="" ref="0x407a0170"/>
        <function-ref name="getScale" scoped="" ref="0x407a0410"/>
        <function-ref name="reset" scoped="" ref="0x4078c288"/>
        <function-ref name="overflow" scoped="" ref="0x4078c010"/>
        <function-ref name="isOn" scoped="" ref="0x4078cc68"/>
        <function-ref name="set" scoped="" ref="0x4078dd48"/>
        <function-ref name="start" scoped="" ref="0x4078c500"/>
        <function-ref name="stop" scoped="" ref="0x4078c778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40797360" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40797360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40797538"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40797618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407976f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407977d8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407978b8"/>
        <function-ref name="setControl" scoped="" ref="0x40797998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407ab7b8" loc="52:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407ab7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407ab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407abc18" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407abc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x407abdf0"/>
        <function-ref name="compareBusy" scoped="" ref="0x407abed0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x407a9010"/>
        <function-ref name="countBusy" scoped="" ref="0x407a90f0"/>
        <function-ref name="getAssr" scoped="" ref="0x407a91d0"/>
        <function-ref name="setAssr" scoped="" ref="0x407a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40797cc0" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40797cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407ab288"/>
        <function-ref name="fired" scoped="" ref="0x407ac830"/>
        <function-ref name="get" scoped="" ref="0x407ac318"/>
        <function-ref name="reset" scoped="" ref="0x407acaa8"/>
        <function-ref name="isOn" scoped="" ref="0x407ab500"/>
        <function-ref name="set" scoped="" ref="0x407ac590"/>
        <function-ref name="start" scoped="" ref="0x407acd20"/>
        <function-ref name="stop" scoped="" ref="0x407ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4079a010" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4079a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40798a68"/>
        <function-ref name="test" scoped="" ref="0x40798578"/>
        <function-ref name="get" scoped="" ref="0x4079a658"/>
        <function-ref name="setScale" scoped="" ref="0x40798ce0"/>
        <function-ref name="getScale" scoped="" ref="0x40797010"/>
        <function-ref name="reset" scoped="" ref="0x4079ade8"/>
        <function-ref name="overflow" scoped="" ref="0x4079ab70"/>
        <function-ref name="isOn" scoped="" ref="0x407987f0"/>
        <function-ref name="set" scoped="" ref="0x4079a8d0"/>
        <function-ref name="start" scoped="" ref="0x40798088"/>
        <function-ref name="stop" scoped="" ref="0x40798300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x407f5818" loc="74:/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x407f5818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407f59f0"/>
        <function-ref name="runTask" scoped="" ref="0x407f5ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x407f7e50" loc="49:/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407f7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407f5350"/>
        <function-ref name="fired" scoped="" ref="0x407f6af8"/>
        <function-ref name="startAt" scoped="" ref="0x407f5010"/>
        <function-ref name="isRunning" scoped="" ref="0x407f6d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x407f55c8"/>
        <function-ref name="start" scoped="" ref="0x407f65e0"/>
        <function-ref name="stop" scoped="" ref="0x407f6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4073da88" loc="48:/home/sumant/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4073da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407f7650"/>
        <function-ref name="fired" scoped="" ref="0x407e0830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407f7010"/>
        <function-ref name="isOneShot" scoped="" ref="0x407e0ce0"/>
        <function-ref name="getdt" scoped="" ref="0x407f7b00"/>
        <function-ref name="gett0" scoped="" ref="0x407f78a8"/>
        <function-ref name="isRunning" scoped="" ref="0x407e0a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407e00d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407f7330"/>
        <function-ref name="startOneShot" scoped="" ref="0x407e0358"/>
        <function-ref name="stop" scoped="" ref="0x407e05d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40827050" loc="71:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40827050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40827228"/>
        <function-ref name="runTask" scoped="" ref="0x40827308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40813e30" loc="49:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40813e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40828920"/>
        <function-ref name="fired" scoped="" ref="0x4082abc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408282e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40828088"/>
        <function-ref name="getdt" scoped="" ref="0x40828dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40828b78"/>
        <function-ref name="isRunning" scoped="" ref="0x4082ae18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4082a468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40828600"/>
        <function-ref name="startOneShot" scoped="" ref="0x4082a6e8"/>
        <function-ref name="stop" scoped="" ref="0x4082a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407f1a60" loc="48:/home/sumant/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407f1a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40813670"/>
        <function-ref name="fired" scoped="" ref="0x40815840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40813010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40815d10"/>
        <function-ref name="getdt" scoped="" ref="0x40813b40"/>
        <function-ref name="gett0" scoped="" ref="0x408138d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40815aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408150b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40813340"/>
        <function-ref name="startOneShot" scoped="" ref="0x40815348"/>
        <function-ref name="stop" scoped="" ref="0x408155d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40826460" loc="48:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40826460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40826aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40826df8" loc="49:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40826df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40825570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40825a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408257e8"/>
        <function-ref name="overflow" scoped="" ref="0x40825cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40833a80" loc="25:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40833a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40833c58"/>
        <function-ref name="configure" scoped="" ref="0x40833d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x408349e0" loc="22:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x408349e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40833048"/>
        <function-ref name="readDone" scoped="" ref="0x408332a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x408335a8" loc="24:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408335a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40833780"/>
        <function-ref name="getChannel" scoped="" ref="0x40833860"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40833940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4082d430" loc="18:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4082d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4082da58"/>
        <function-ref name="readDone" scoped="" ref="0x4082dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40841840" loc="19:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40841840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40841e88"/>
        <function-ref name="readDone" scoped="" ref="0x4082b110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4082b7c8" loc="22:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4082b7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4082b9a0"/>
        <function-ref name="getChannel" scoped="" ref="0x4082ba80"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4082bb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40840018" loc="23:/home/sumant/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40840018"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408401f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408402d0"/>
        <function-ref name="request" scoped="" ref="0x408403b0"/>
        <function-ref name="granted" scoped="" ref="0x40840490"/>
        <function-ref name="isOwner" scoped="" ref="0x40840570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4083a418" loc="58:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4083a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4083a5f0"/>
        <function-ref name="configure" scoped="" ref="0x4083a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x4084cb88" loc="56:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4084cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4084cd60"/>
        <function-ref name="dataReady" scoped="" ref="0x4084ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x408389e8" loc="55:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x408389e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40838bc0"/>
        <function-ref name="cancel" scoped="" ref="0x40838ca0"/>
        <function-ref name="dataReady" scoped="" ref="0x40838d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4083c010" loc="54:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4083c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4083c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4083c2c8"/>
        <function-ref name="request" scoped="" ref="0x4083c3a8"/>
        <function-ref name="granted" scoped="" ref="0x4083c488"/>
        <function-ref name="isOwner" scoped="" ref="0x4083c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4084a060" loc="85:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4084a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4084a238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40847e38" loc="88:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40847e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40849050"/>
        <function-ref name="dataReady" scoped="" ref="0x40849130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x408478b0" loc="87:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x408478b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40847a88"/>
        <function-ref name="cancel" scoped="" ref="0x40847b68"/>
        <function-ref name="dataReady" scoped="" ref="0x40847c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40856818" loc="91:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40856818"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x408569f0"/>
        <function-ref name="getAdmux" scoped="" ref="0x40856ad0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40856bb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40856c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x40856d70"/>
        <function-ref name="setAdmux" scoped="" ref="0x40856e50"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40848010"/>
        <function-ref name="isComplete" scoped="" ref="0x408480f0"/>
        <function-ref name="cancel" scoped="" ref="0x408481d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x408482b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40848390"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40848470"/>
        <function-ref name="startConversion" scoped="" ref="0x40848550"/>
        <function-ref name="isStarted" scoped="" ref="0x408486b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40848790"/>
        <function-ref name="setContinuous" scoped="" ref="0x40848870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40848950"/>
        <function-ref name="getValue" scoped="" ref="0x40848a30"/>
        <function-ref name="dataReady" scoped="" ref="0x40848b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40847420" loc="86:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40847420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408475f8"/>
        <function-ref name="stop" scoped="" ref="0x408476d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40848ce8" loc="92:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40848ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40848ec0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40846010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x408460f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x408461d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x408462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40869298" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40869298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40869470"/>
        <function-ref name="getAdmux" scoped="" ref="0x40869550"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40869630"/>
        <function-ref name="isEnabled" scoped="" ref="0x40869710"/>
        <function-ref name="enableAdc" scoped="" ref="0x408697f0"/>
        <function-ref name="setAdmux" scoped="" ref="0x408698d0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x408699b0"/>
        <function-ref name="isComplete" scoped="" ref="0x40869a90"/>
        <function-ref name="cancel" scoped="" ref="0x40869b70"/>
        <function-ref name="disableAdc" scoped="" ref="0x40869c50"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40869d30"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40869e10"/>
        <function-ref name="startConversion" scoped="" ref="0x40869ef0"/>
        <function-ref name="isStarted" scoped="" ref="0x40868090"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40868170"/>
        <function-ref name="setContinuous" scoped="" ref="0x40868250"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40868330"/>
        <function-ref name="getValue" scoped="" ref="0x40868410"/>
        <function-ref name="dataReady" scoped="" ref="0x408684f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40868eb0" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40868eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4087e0c0"/>
        <function-ref name="getAdmux" scoped="" ref="0x4087e1a0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4087e280"/>
        <function-ref name="isEnabled" scoped="" ref="0x4087e360"/>
        <function-ref name="enableAdc" scoped="" ref="0x4087e440"/>
        <function-ref name="setAdmux" scoped="" ref="0x4087e520"/>
        <function-ref name="enableInterruption" scoped="" ref="0x4087e600"/>
        <function-ref name="isComplete" scoped="" ref="0x4087e6e0"/>
        <function-ref name="cancel" scoped="" ref="0x4087e7c0"/>
        <function-ref name="disableAdc" scoped="" ref="0x4087e8a0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4087e980"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4087ea60"/>
        <function-ref name="startConversion" scoped="" ref="0x4087eb40"/>
        <function-ref name="isStarted" scoped="" ref="0x4087eca0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4087ed80"/>
        <function-ref name="setContinuous" scoped="" ref="0x4087ee60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4087d010"/>
        <function-ref name="getValue" scoped="" ref="0x4087d0f0"/>
        <function-ref name="dataReady" scoped="" ref="0x4087d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4087d3b8" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4087d3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4087d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4086ab78" loc="92:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4086ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4086ad60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4086ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4087fb58" loc="96:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4087fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4087fd40"/>
        <function-ref name="configure" scoped="" ref="0x4087fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4087f010" loc="93:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4087f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4087f1e8"/>
        <function-ref name="requested" scoped="" ref="0x4087f2c8"/>
        <function-ref name="granted" scoped="" ref="0x4087f3a8"/>
        <function-ref name="isOwner" scoped="" ref="0x4087f488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4087f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4086a438" loc="91:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4086a438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4086a620"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4086a700"/>
        <function-ref name="request" scoped="" ref="0x4086a7e0"/>
        <function-ref name="granted" scoped="" ref="0x4086a8c0"/>
        <function-ref name="isOwner" scoped="" ref="0x4086a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4087f6a8" loc="94:/home/sumant/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4087f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4087f880"/>
        <function-ref name="userId" scoped="" ref="0x4087f960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e9a260" loc="44:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e9a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e9a438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40e9a598" loc="45:/home/sumant/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40e9a598"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e9a770"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e9a850"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e9a930"/>
        <function-ref name="dequeue" scoped="" ref="0x40e9aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e99e88" loc="55:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e99e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e980c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e981a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e98e38" loc="60:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e98e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e97050"/>
        <function-ref name="configure" scoped="" ref="0x40e97130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e97290" loc="61:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e97290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e97468"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e97548"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e97628"/>
        <function-ref name="dequeue" scoped="" ref="0x40e97708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40e982e0" loc="56:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e982e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e984b8"/>
        <function-ref name="requested" scoped="" ref="0x40e98598"/>
        <function-ref name="granted" scoped="" ref="0x40e98678"/>
        <function-ref name="isOwner" scoped="" ref="0x40e98758"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e98838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e97848" loc="62:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e97848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e97a20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e97b00"/>
        <function-ref name="led1On" scoped="" ref="0x40e97be0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e97cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e97da0"/>
        <function-ref name="get" scoped="" ref="0x40e97e80"/>
        <function-ref name="led1Off" scoped="" ref="0x40e96010"/>
        <function-ref name="led0On" scoped="" ref="0x40e96390"/>
        <function-ref name="set" scoped="" ref="0x40e961d0"/>
        <function-ref name="led2On" scoped="" ref="0x40e960f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40e962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e99748" loc="54:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e99748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e99930"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e99a10"/>
        <function-ref name="request" scoped="" ref="0x40e99af0"/>
        <function-ref name="granted" scoped="" ref="0x40e99bd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e99cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e98978" loc="57:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e98978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e98b50"/>
        <function-ref name="userId" scoped="" ref="0x40e98c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40e96510" loc="75:/home/sumant/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40e96510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e966e8"/>
        <function-ref name="runTask" scoped="" ref="0x40e967c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40890230" loc="72:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40890230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40890408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40890548" loc="73:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40890548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40890720"/>
        <function-ref name="requested" scoped="" ref="0x40890800"/>
        <function-ref name="granted" scoped="" ref="0x408908e0"/>
        <function-ref name="isOwner" scoped="" ref="0x408909c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40890aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40891da8" loc="70:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40891da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40890010"/>
        <function-ref name="stop" scoped="" ref="0x408900f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40890be0" loc="74:/home/sumant/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40890be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40890db8"/>
        <function-ref name="userId" scoped="" ref="0x40890e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40edf438" loc="62:/home/sumant/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40edf438"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40edf610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40edf750" loc="63:/home/sumant/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40edf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40edf928"/>
        <function-ref name="requested" scoped="" ref="0x40edfa08"/>
        <function-ref name="granted" scoped="" ref="0x40edfae8"/>
        <function-ref name="isOwner" scoped="" ref="0x40edfbc8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40edfca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40edf040" loc="60:/home/sumant/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40edf040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40edf218"/>
        <function-ref name="stop" scoped="" ref="0x40edf2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40edfde8" loc="64:/home/sumant/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40edfde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ede010"/>
        <function-ref name="userId" scoped="" ref="0x40ede0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4089a610" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4089a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089ac38"/>
        <function-ref name="readDone" scoped="" ref="0x4089ae90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x408b25b8" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x408b25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408b2c00"/>
        <function-ref name="readDone" scoped="" ref="0x408b2e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x408b1ab0" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408b1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x408b1c88"/>
        <function-ref name="getChannel" scoped="" ref="0x408b1d68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x408b1e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x408b1238" loc="52:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x408b1238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x408b1410"/>
        <function-ref name="cancel" scoped="" ref="0x408b14f0"/>
        <function-ref name="dataReady" scoped="" ref="0x408b15d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x408a71e0" loc="103:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x408a71e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408a73b8"/>
        <function-ref name="runTask" scoped="" ref="0x408a7498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4089b8c0" loc="24:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4089b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089bef8"/>
        <function-ref name="readDone" scoped="" ref="0x408c3180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x408c35e0" loc="26:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x408c35e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408c3c18"/>
        <function-ref name="readDone" scoped="" ref="0x408c3e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x408c2218" loc="27:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408c2218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408c2400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408c24e0"/>
        <function-ref name="request" scoped="" ref="0x408c25c0"/>
        <function-ref name="granted" scoped="" ref="0x408c26a0"/>
        <function-ref name="isOwner" scoped="" ref="0x408c2780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x408d1b78" loc="24:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x408d1b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408d01e0"/>
        <function-ref name="readDone" scoped="" ref="0x408d0448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x408d08a8" loc="26:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x408d08a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408d0ee0"/>
        <function-ref name="readDone" scoped="" ref="0x408ce180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x408ce500" loc="27:/home/sumant/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408ce500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408ce6e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408ce7c8"/>
        <function-ref name="request" scoped="" ref="0x408ce8a8"/>
        <function-ref name="granted" scoped="" ref="0x408ce988"/>
        <function-ref name="isOwner" scoped="" ref="0x408cea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4060f760" loc="59:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4060f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4060f938"/>
        <function-ref name="stopDone" scoped="" ref="0x4060fa18"/>
        <function-ref name="start" scoped="" ref="0x4060faf8"/>
        <function-ref name="stop" scoped="" ref="0x4060fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408e5100" loc="61:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408e5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e52d8"/>
        <function-ref name="getPayload" scoped="" ref="0x408e53b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e5498"/>
        <function-ref name="cancel" scoped="" ref="0x408e5578"/>
        <function-ref name="sendDone" scoped="" ref="0x408e5658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408e3178" loc="63:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408e3178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e3350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408e34d0" loc="65:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408e34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e36a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408e3788"/>
        <function-ref name="getPayload" scoped="" ref="0x408e3868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e3948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408e3a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x408f09d8" loc="69:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408f09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408ea5b0"/>
        <function-ref name="clear" scoped="" ref="0x408ea960"/>
        <function-ref name="isValid" scoped="" ref="0x408ea200"/>
        <function-ref name="set" scoped="" ref="0x408ead10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408fd898" loc="70:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408fd898"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408fda70"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408fdb50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408fdc30"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408fdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408e5ac0" loc="62:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408e5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408ef640" loc="67:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408ef640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408ef818"/>
        <function-ref name="noAck" scoped="" ref="0x408ef8f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408ef9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408f23b8" loc="66:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408f23b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408f2590"/>
        <function-ref name="source" scoped="" ref="0x408f2670"/>
        <function-ref name="address" scoped="" ref="0x408f2750"/>
        <function-ref name="destination" scoped="" ref="0x408f2830"/>
        <function-ref name="setSource" scoped="" ref="0x408f2910"/>
        <function-ref name="setDestination" scoped="" ref="0x408f29f0"/>
        <function-ref name="type" scoped="" ref="0x408f2ad0"/>
        <function-ref name="setType" scoped="" ref="0x408f2bb0"/>
        <function-ref name="isForMe" scoped="" ref="0x408f2c90"/>
        <function-ref name="setGroup" scoped="" ref="0x408f2d70"/>
        <function-ref name="localGroup" scoped="" ref="0x408f2e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408e1010" loc="68:/home/sumant/tinyos-main/tos/platforms/mica2/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408e1b10"/>
        <function-ref name="clear" scoped="" ref="0x408e1ec0"/>
        <function-ref name="isValid" scoped="" ref="0x408e1760"/>
        <function-ref name="set" scoped="" ref="0x408f02a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409006b8" loc="55:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409006b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40900890"/>
        <function-ref name="stopDone" scoped="" ref="0x40900970"/>
        <function-ref name="start" scoped="" ref="0x40900a50"/>
        <function-ref name="stop" scoped="" ref="0x40900b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4090fc38" loc="65:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4090fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4090e750"/>
        <function-ref name="clear" scoped="" ref="0x4090eb00"/>
        <function-ref name="isValid" scoped="" ref="0x4090e3a0"/>
        <function-ref name="set" scoped="" ref="0x4090eeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408fa010" loc="56:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fa1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x408fa2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408fa3a8"/>
        <function-ref name="cancel" scoped="" ref="0x408fa488"/>
        <function-ref name="sendDone" scoped="" ref="0x408fa568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408f9100" loc="58:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408f9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f92d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408f80a0" loc="60:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408f80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408f8278"/>
        <function-ref name="payloadLength" scoped="" ref="0x408f8358"/>
        <function-ref name="getPayload" scoped="" ref="0x408f8438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f8518"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408f85f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x408f7288" loc="64:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x408f7288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408f7d88"/>
        <function-ref name="clear" scoped="" ref="0x4090f150"/>
        <function-ref name="isValid" scoped="" ref="0x408f79d8"/>
        <function-ref name="set" scoped="" ref="0x4090f500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40907aa0" loc="66:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40907aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40907c78"/>
        <function-ref name="isSet" scoped="" ref="0x40907d58"/>
        <function-ref name="cancel" scoped="" ref="0x40907e38"/>
        <function-ref name="set" scoped="" ref="0x40907f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408fa9d0" loc="57:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408fa9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408faba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4090b120" loc="67:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4090b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4090b2f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4090b3d8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4090b4b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4090b598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408f8818" loc="61:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f8818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408f89f0"/>
        <function-ref name="noAck" scoped="" ref="0x408f8ad0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408f8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408f9470" loc="59:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408f9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408f9648"/>
        <function-ref name="source" scoped="" ref="0x408f9728"/>
        <function-ref name="address" scoped="" ref="0x408f9808"/>
        <function-ref name="destination" scoped="" ref="0x408f98e8"/>
        <function-ref name="setSource" scoped="" ref="0x408f99c8"/>
        <function-ref name="setDestination" scoped="" ref="0x408f9aa8"/>
        <function-ref name="type" scoped="" ref="0x408f9b88"/>
        <function-ref name="setType" scoped="" ref="0x408f9c68"/>
        <function-ref name="isForMe" scoped="" ref="0x408f9d48"/>
        <function-ref name="setGroup" scoped="" ref="0x408f9e28"/>
        <function-ref name="localGroup" scoped="" ref="0x408f9f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40910c10" loc="62:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageC.nc">
      <component-ref qname="CC1000ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40910c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40910de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40917450" loc="57:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40917450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40917628"/>
        <function-ref name="getPayload" scoped="" ref="0x40917708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409177e8"/>
        <function-ref name="cancel" scoped="" ref="0x409178c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409179a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40917bb8" loc="58:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40917bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40917d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x409052a8" loc="51:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x409052a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40905480"/>
        <function-ref name="getPayload" scoped="" ref="0x40905560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40905640"/>
        <function-ref name="cancel" scoped="" ref="0x40905720"/>
        <function-ref name="sendDone" scoped="" ref="0x40905800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40904310" loc="53:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40904310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409044e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4091e010" loc="59:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4091e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091e1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4091e2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4091e3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4091e488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4091e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40905c68" loc="52:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40905c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40905e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40904680" loc="54:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ActiveMessageP.nc">
      <component-ref qname="CC1000ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40904680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40904858"/>
        <function-ref name="source" scoped="" ref="0x40904938"/>
        <function-ref name="address" scoped="" ref="0x40904a18"/>
        <function-ref name="destination" scoped="" ref="0x40904af8"/>
        <function-ref name="setSource" scoped="" ref="0x40904bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x40904cb8"/>
        <function-ref name="type" scoped="" ref="0x40904d98"/>
        <function-ref name="setType" scoped="" ref="0x40904e78"/>
        <function-ref name="isForMe" scoped="" ref="0x40903010"/>
        <function-ref name="setGroup" scoped="" ref="0x409030f0"/>
        <function-ref name="localGroup" scoped="" ref="0x409031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409473b0" loc="66:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409473b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40947588"/>
        <function-ref name="stopDone" scoped="" ref="0x40947668"/>
        <function-ref name="start" scoped="" ref="0x40947748"/>
        <function-ref name="stop" scoped="" ref="0x40947828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40945400" loc="70:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40945400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409455d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409456b8"/>
        <function-ref name="getPayload" scoped="" ref="0x40945798"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40945878"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40945958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40947998" loc="67:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40947998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40947b70"/>
        <function-ref name="getPayload" scoped="" ref="0x40947c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40947d30"/>
        <function-ref name="cancel" scoped="" ref="0x40947e10"/>
        <function-ref name="sendDone" scoped="" ref="0x40947ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40944200" loc="76:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40944200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x409443d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x409444b8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40944598"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40944678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x409427d0" loc="71:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x409427d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x409429a8"/>
        <function-ref name="enableCca" scoped="" ref="0x40942a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40944af8" loc="78:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40944af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409436b8"/>
        <function-ref name="clear" scoped="" ref="0x40943a68"/>
        <function-ref name="isValid" scoped="" ref="0x40943308"/>
        <function-ref name="set" scoped="" ref="0x40943e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409450a8" loc="68:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409450a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40945280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x4093dcb0" loc="80:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4093dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4093de88"/>
        <function-ref name="isSet" scoped="" ref="0x4093b010"/>
        <function-ref name="cancel" scoped="" ref="0x4093b0f0"/>
        <function-ref name="set" scoped="" ref="0x4093b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4093f860" loc="73:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4093f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4093fa38"/>
        <function-ref name="noAck" scoped="" ref="0x4093fb18"/>
        <function-ref name="wasAcked" scoped="" ref="0x4093fbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x4093f388" loc="72:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x4093f388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x4093f560"/>
        <function-ref name="initial" scoped="" ref="0x4093f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4093e578" loc="79:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4093e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4093d088"/>
        <function-ref name="clear" scoped="" ref="0x4093d438"/>
        <function-ref name="isValid" scoped="" ref="0x4093ecc8"/>
        <function-ref name="set" scoped="" ref="0x4093d7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4093fdf0" loc="74:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaRadioC.nc">
      <component-ref qname="CC1000CsmaRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4093fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40944010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409611d0" loc="67:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409611d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409613a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40961488"/>
        <function-ref name="start" scoped="" ref="0x40961568"/>
        <function-ref name="stop" scoped="" ref="0x40961648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40965728" loc="82:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40965728"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404101a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40410370"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40965ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setWakeupTask" ref="0x4097d8f0" loc="119:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setWakeupTask" scoped="" ref="0x4097d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4097dac8"/>
        <function-ref name="runTask" scoped="" ref="0x4097dba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopDone" ref="0x4098d648" loc="186:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopDone" scoped="" ref="0x4098d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4098d820"/>
        <function-ref name="runTask" scoped="" ref="0x4098d900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiNoiseFloor" ref="0x40967338" loc="84:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiNoiseFloor" scoped="" ref="0x40967338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40967980"/>
        <function-ref name="readDone" scoped="" ref="0x40967bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40957c10" loc="80:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40957c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40957de8"/>
        <function-ref name="rand32" scoped="" ref="0x40957ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40960120" loc="70:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40960120"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x409602f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x409603d8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x409604b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40960598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaControl" ref="0x409617f8" loc="68:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaControl" scoped="" ref="0x409617f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaControl"/>
      </instance>
      <interface-functions>
        <function-ref name="disableCca" scoped="" ref="0x409619d0"/>
        <function-ref name="enableCca" scoped="" ref="0x40961ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40962df8" loc="66:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40962df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40961010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiCheckChannel" ref="0x40966108" loc="85:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiCheckChannel" scoped="" ref="0x40966108"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40966750"/>
        <function-ref name="readDone" scoped="" ref="0x409669c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x4096ba50" loc="79:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x4096ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4096bc28"/>
        <function-ref name="settled" scoped="" ref="0x4096bd08"/>
        <function-ref name="adjust" scoped="" ref="0x4096bde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sleepCheck" ref="0x4099f240" loc="304:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sleepCheck" scoped="" ref="0x4099f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4099f418"/>
        <function-ref name="runTask" scoped="" ref="0x4099f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WakeupTimer" ref="0x4096c1c0" loc="81:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WakeupTimer" scoped="" ref="0x4096c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4096ad58"/>
        <function-ref name="fired" scoped="" ref="0x4096a010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4096a718"/>
        <function-ref name="isOneShot" scoped="" ref="0x4096a4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40968268"/>
        <function-ref name="gett0" scoped="" ref="0x40968010"/>
        <function-ref name="isRunning" scoped="" ref="0x4096a268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4096c7e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4096aa38"/>
        <function-ref name="startOneShot" scoped="" ref="0x4096ca68"/>
        <function-ref name="stop" scoped="" ref="0x4096cce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioInit" ref="0x409607f0" loc="73:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioInit" scoped="" ref="0x409607f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409609c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adjustSquelch" ref="0x4099db98" loc="327:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adjustSquelch" scoped="" ref="0x4099db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4099dd70"/>
        <function-ref name="runTask" scoped="" ref="0x4099de50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x4096e8f0" loc="78:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x4096e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x4096eac8"/>
        <function-ref name="biasOn" scoped="" ref="0x4096eba8"/>
        <function-ref name="getRFPower" scoped="" ref="0x4096ec88"/>
        <function-ref name="tuneManual" scoped="" ref="0x4096ed68"/>
        <function-ref name="selectLock" scoped="" ref="0x4096ee48"/>
        <function-ref name="init" scoped="" ref="0x4096ef28"/>
        <function-ref name="getLock" scoped="" ref="0x4095d018"/>
        <function-ref name="coreOn" scoped="" ref="0x4095d0f8"/>
        <function-ref name="txMode" scoped="" ref="0x4095d1d8"/>
        <function-ref name="getLOStatus" scoped="" ref="0x4095d2b8"/>
        <function-ref name="rxMode" scoped="" ref="0x4095d398"/>
        <function-ref name="off" scoped="" ref="0x4095d478"/>
        <function-ref name="setRFPower" scoped="" ref="0x4095d558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadioControl" ref="0x40960c38" loc="74:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadioControl" scoped="" ref="0x40960c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40960e10"/>
        <function-ref name="stop" scoped="" ref="0x40960ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiPulseCheck" ref="0x40966e80" loc="86:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiPulseCheck" scoped="" ref="0x40966e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409814d8"/>
        <function-ref name="readDone" scoped="" ref="0x40981750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaBackoff" ref="0x40961c60" loc="69:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaBackoff" scoped="" ref="0x40961c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="congestion" scoped="" ref="0x40961e38"/>
        <function-ref name="initial" scoped="" ref="0x40961f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ByteRadio" ref="0x40958390" loc="75:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000CsmaP.nc">
      <component-ref qname="CC1000CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x40958390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x40958568"/>
        <function-ref name="listen" scoped="" ref="0x40958648"/>
        <function-ref name="syncing" scoped="" ref="0x40958728"/>
        <function-ref name="rxDone" scoped="" ref="0x40958808"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x409588e8"/>
        <function-ref name="idleByte" scoped="" ref="0x409589c8"/>
        <function-ref name="cts" scoped="" ref="0x40958aa8"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x40958b88"/>
        <function-ref name="sendDone" scoped="" ref="0x40958c68"/>
        <function-ref name="off" scoped="" ref="0x40958d48"/>
        <function-ref name="getTxMessage" scoped="" ref="0x40958e28"/>
        <function-ref name="rx" scoped="" ref="0x40958f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x409ca870" loc="72:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x409ca870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409caa48"/>
        <function-ref name="payloadLength" scoped="" ref="0x409cab28"/>
        <function-ref name="getPayload" scoped="" ref="0x409cac08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409cace8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409cadc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplCC1000Spi" ref="0x409c1250" loc="84:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x409c1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x409c14a8"/>
        <function-ref name="initSlave" scoped="" ref="0x409c1588"/>
        <function-ref name="disableIntr" scoped="" ref="0x409c1668"/>
        <function-ref name="writeByte" scoped="" ref="0x409c1748"/>
        <function-ref name="enableIntr" scoped="" ref="0x409c1828"/>
        <function-ref name="txMode" scoped="" ref="0x409c1908"/>
        <function-ref name="readByte" scoped="" ref="0x409c19e8"/>
        <function-ref name="rxMode" scoped="" ref="0x409c1ac8"/>
        <function-ref name="dataReady" scoped="" ref="0x409c1ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409cbd98" loc="70:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409cbd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409ca010"/>
        <function-ref name="getPayload" scoped="" ref="0x409ca0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ca1d0"/>
        <function-ref name="cancel" scoped="" ref="0x409ca2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x409ca390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x409c8a20" loc="77:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x409c8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409c75b0"/>
        <function-ref name="clear" scoped="" ref="0x409c7960"/>
        <function-ref name="isValid" scoped="" ref="0x409c7200"/>
        <function-ref name="set" scoped="" ref="0x409c7d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409cb5f0" loc="68:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409cb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409cb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x409c4c38" loc="79:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409c4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409c4e10"/>
        <function-ref name="isSet" scoped="" ref="0x409c4ef0"/>
        <function-ref name="cancel" scoped="" ref="0x409c2010"/>
        <function-ref name="set" scoped="" ref="0x409c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409ca518" loc="71:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409ca518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ca6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Squelch" ref="0x409c1d70" loc="85:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x409c1d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409c0010"/>
        <function-ref name="settled" scoped="" ref="0x409c00f0"/>
        <function-ref name="adjust" scoped="" ref="0x409c01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiRx" ref="0x409c04a0" loc="86:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiRx" scoped="" ref="0x409c04a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409c0ae8"/>
        <function-ref name="readDone" scoped="" ref="0x409c0d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x409bf670" loc="89:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x409bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409bfcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketSent" ref="0x409feda0" loc="417:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketSent" scoped="" ref="0x409feda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409fd010"/>
        <function-ref name="runTask" scoped="" ref="0x409fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x409c9da8" loc="74:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409c9da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409c8010"/>
        <function-ref name="noAck" scoped="" ref="0x409c80f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x409c81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC1000Control" ref="0x409c2308" loc="83:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x409c2308"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x409c24e0"/>
        <function-ref name="biasOn" scoped="" ref="0x409c25c0"/>
        <function-ref name="getRFPower" scoped="" ref="0x409c26a0"/>
        <function-ref name="tuneManual" scoped="" ref="0x409c2780"/>
        <function-ref name="selectLock" scoped="" ref="0x409c2860"/>
        <function-ref name="init" scoped="" ref="0x409c2940"/>
        <function-ref name="getLock" scoped="" ref="0x409c2a20"/>
        <function-ref name="coreOn" scoped="" ref="0x409c2b00"/>
        <function-ref name="txMode" scoped="" ref="0x409c2be0"/>
        <function-ref name="getLOStatus" scoped="" ref="0x409c2cc0"/>
        <function-ref name="rxMode" scoped="" ref="0x409c2da0"/>
        <function-ref name="off" scoped="" ref="0x409c2e80"/>
        <function-ref name="setRFPower" scoped="" ref="0x409c1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x409be0c0" loc="90:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x409be0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409be708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalPacketReceived" ref="0x40a202a8" loc="594:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalPacketReceived" scoped="" ref="0x40a202a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a20480"/>
        <function-ref name="runTask" scoped="" ref="0x40a20560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409c5488" loc="78:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409c5488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409c4010"/>
        <function-ref name="clear" scoped="" ref="0x409c43c0"/>
        <function-ref name="isValid" scoped="" ref="0x409c5bd8"/>
        <function-ref name="set" scoped="" ref="0x409c4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409cb970" loc="69:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409cb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409cbb48"/>
        <function-ref name="stop" scoped="" ref="0x409cbc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409c83c8" loc="75:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409c83c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x409c85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteRadio" ref="0x409c9010" loc="73:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SendReceiveP.nc">
      <component-ref qname="CC1000SendReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteRadio" scoped="" ref="0x409c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ByteRadio"/>
      </instance>
      <interface-functions>
        <function-ref name="rts" scoped="" ref="0x409c91e8"/>
        <function-ref name="listen" scoped="" ref="0x409c92c8"/>
        <function-ref name="syncing" scoped="" ref="0x409c93a8"/>
        <function-ref name="rxDone" scoped="" ref="0x409c9488"/>
        <function-ref name="getPreambleLength" scoped="" ref="0x409c9568"/>
        <function-ref name="idleByte" scoped="" ref="0x409c9648"/>
        <function-ref name="cts" scoped="" ref="0x409c9728"/>
        <function-ref name="setPreambleLength" scoped="" ref="0x409c9808"/>
        <function-ref name="sendDone" scoped="" ref="0x409c98e8"/>
        <function-ref name="off" scoped="" ref="0x409c99c8"/>
        <function-ref name="getTxMessage" scoped="" ref="0x409c9aa8"/>
        <function-ref name="rx" scoped="" ref="0x409c9b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRssi" ref="0x40a4c978" loc="63:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRssi" scoped="" ref="0x40a4c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4b010"/>
        <function-ref name="readDone" scoped="" ref="0x40a4b288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40a4c128" loc="62:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a4c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a4c300"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a4c3e0"/>
        <function-ref name="request" scoped="" ref="0x40a4c4c0"/>
        <function-ref name="granted" scoped="" ref="0x40a4c5a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40a4c680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Rssi" ref="0x40a4d120" loc="58:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000RssiP.nc">
      <component-ref qname="CC1000RssiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Rssi" scoped="" ref="0x40a4d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4d768"/>
        <function-ref name="readDone" scoped="" ref="0x40a4d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a4f7d8" loc="54:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a4f7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a4f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Squelch" ref="0x40a4fb78" loc="55:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000SquelchP.nc">
      <component-ref qname="CC1000SquelchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Squelch" scoped="" ref="0x40a4fb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Squelch"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a4fd50"/>
        <function-ref name="settled" scoped="" ref="0x40a4fe30"/>
        <function-ref name="adjust" scoped="" ref="0x40a4ff10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a73b50" loc="58:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a73b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404101a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40410370"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a72308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC" ref="0x40a73388" loc="57:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC" scoped="" ref="0x40a73388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a73560"/>
        <function-ref name="read" scoped="" ref="0x40a73640"/>
        <function-ref name="write" scoped="" ref="0x40a73720"/>
        <function-ref name="getLOCK" scoped="" ref="0x40a73800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC1000Control" ref="0x40a743f8" loc="54:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000ControlP.nc">
      <component-ref qname="CC1000ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC1000Control" scoped="" ref="0x40a743f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC1000Control"/>
      </instance>
      <interface-functions>
        <function-ref name="tunePreset" scoped="" ref="0x40a745d0"/>
        <function-ref name="biasOn" scoped="" ref="0x40a746b0"/>
        <function-ref name="getRFPower" scoped="" ref="0x40a74790"/>
        <function-ref name="tuneManual" scoped="" ref="0x40a74870"/>
        <function-ref name="selectLock" scoped="" ref="0x40a74950"/>
        <function-ref name="init" scoped="" ref="0x40a74a30"/>
        <function-ref name="getLock" scoped="" ref="0x40a74b10"/>
        <function-ref name="coreOn" scoped="" ref="0x40a74bf0"/>
        <function-ref name="txMode" scoped="" ref="0x40a74cd0"/>
        <function-ref name="getLOStatus" scoped="" ref="0x40a74db0"/>
        <function-ref name="rxMode" scoped="" ref="0x40a74e90"/>
        <function-ref name="off" scoped="" ref="0x40a73010"/>
        <function-ref name="setRFPower" scoped="" ref="0x40a730f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000Spi" ref="0x40abb390" loc="50:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000Spi" scoped="" ref="0x40abb390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="isBufBusy" scoped="" ref="0x40abb568"/>
        <function-ref name="initSlave" scoped="" ref="0x40abb648"/>
        <function-ref name="disableIntr" scoped="" ref="0x40abb728"/>
        <function-ref name="writeByte" scoped="" ref="0x40abb808"/>
        <function-ref name="enableIntr" scoped="" ref="0x40abb8e8"/>
        <function-ref name="txMode" scoped="" ref="0x40abb9c8"/>
        <function-ref name="readByte" scoped="" ref="0x40abbaa8"/>
        <function-ref name="rxMode" scoped="" ref="0x40abbb88"/>
        <function-ref name="dataReady" scoped="" ref="0x40abbc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiAdc" ref="0x40a9cf08" loc="48:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiAdc" scoped="" ref="0x40a9cf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40abd578"/>
        <function-ref name="readDone" scoped="" ref="0x40abd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RssiResource" ref="0x40abdbc0" loc="49:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40abdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40abdd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40abde78"/>
        <function-ref name="request" scoped="" ref="0x40abb010"/>
        <function-ref name="granted" scoped="" ref="0x40abb0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40abb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplCC1000" ref="0x40abbe08" loc="51:/home/sumant/tinyos-main/tos/platforms/mica2/chips/cc1000/HplCC1000C.nc">
      <component-ref qname="HplCC1000C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplCC1000" scoped="" ref="0x40abbe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplCC1000"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aba010"/>
        <function-ref name="read" scoped="" ref="0x40aba0f0"/>
        <function-ref name="write" scoped="" ref="0x40aba1d0"/>
        <function-ref name="getLOCK" scoped="" ref="0x40aba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ab3630" loc="28:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ab3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ab3808"/>
        <function-ref name="configure" scoped="" ref="0x40ab38e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40ab8560" loc="24:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40ab8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ab8ba8"/>
        <function-ref name="readDone" scoped="" ref="0x40ab8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40ab3158" loc="27:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ab3158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40ab3330"/>
        <function-ref name="getChannel" scoped="" ref="0x40ab3410"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40ab34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ab9db8" loc="23:/home/sumant/tinyos-main/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="HplCC1000C.RssiChannel"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ab9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ab8010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ab80f0"/>
        <function-ref name="request" scoped="" ref="0x40ab81d0"/>
        <function-ref name="granted" scoped="" ref="0x40ab82b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ab8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40acee98" loc="46:/home/sumant/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40acee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40aae0c0"/>
        <function-ref name="rand32" scoped="" ref="0x40aae1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40ace5d8" loc="45:/home/sumant/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40ace5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40acec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ab1338" loc="44:/home/sumant/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ab1338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ab1510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40acc948" loc="48:/home/sumant/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40acc948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40accb20"/>
        <function-ref name="rand32" scoped="" ref="0x40accc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40acc088" loc="47:/home/sumant/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40acc088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40acc6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40aaeb48" loc="46:/home/sumant/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40aaeb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aaed20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ab09a0" loc="45:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ab09a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40acd4c8"/>
        <function-ref name="fired" scoped="" ref="0x40aaf768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40aafe70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40aafc18"/>
        <function-ref name="getdt" scoped="" ref="0x40acd978"/>
        <function-ref name="gett0" scoped="" ref="0x40acd720"/>
        <function-ref name="isRunning" scoped="" ref="0x40aaf9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40aaf010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40acd1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40aaf290"/>
        <function-ref name="stop" scoped="" ref="0x40aaf510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40adf1f8" loc="54:/home/sumant/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40adf1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40adf3d0"/>
        <function-ref name="changed" scoped="" ref="0x40adf4b0"/>
        <function-ref name="amGroup" scoped="" ref="0x40adf590"/>
        <function-ref name="setAddress" scoped="" ref="0x40adf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40ac2d08" loc="51:/home/sumant/tinyos-main/tos/platforms/mica/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40ac2d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404101a8"/>
            <typename><typedef-ref name="TMicro" ref="0x40410370"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40ad7478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40af0010" loc="24:/home/sumant/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40af0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af0760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40af0c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40af09d8"/>
        <function-ref name="overflow" scoped="" ref="0x40af0ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40aefa00" loc="24:/home/sumant/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40aefa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="TOne" ref="0x404319a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aec200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40aec6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40aec478"/>
        <function-ref name="overflow" scoped="" ref="0x40aec968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40b02360" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40b02360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b02538"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40b02618"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b026f8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40b027d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b028b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b02998"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40b02a78"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40b02b58"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40b02c38"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40b02d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40ae4190" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40ae4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40b01c68"/>
        <function-ref name="test" scoped="" ref="0x40b01778"/>
        <function-ref name="get" scoped="" ref="0x40ae47d8"/>
        <function-ref name="captured" scoped="" ref="0x40ae4cf0"/>
        <function-ref name="reset" scoped="" ref="0x40b01010"/>
        <function-ref name="isOn" scoped="" ref="0x40b019f0"/>
        <function-ref name="set" scoped="" ref="0x40ae4a50"/>
        <function-ref name="start" scoped="" ref="0x40b01288"/>
        <function-ref name="stop" scoped="" ref="0x40b01500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40afc3d0" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40afc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40afb9f0"/>
        <function-ref name="fired" scoped="" ref="0x40afb010"/>
        <function-ref name="get" scoped="" ref="0x40afca18"/>
        <function-ref name="reset" scoped="" ref="0x40afb288"/>
        <function-ref name="isOn" scoped="" ref="0x40afbc68"/>
        <function-ref name="set" scoped="" ref="0x40afcc90"/>
        <function-ref name="start" scoped="" ref="0x40afb500"/>
        <function-ref name="stop" scoped="" ref="0x40afb778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ae83e0" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ae83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ae7ee0"/>
        <function-ref name="test" scoped="" ref="0x40ae79f0"/>
        <function-ref name="get" scoped="" ref="0x40ae8a28"/>
        <function-ref name="setScale" scoped="" ref="0x40ae6170"/>
        <function-ref name="getScale" scoped="" ref="0x40ae6410"/>
        <function-ref name="reset" scoped="" ref="0x40ae7288"/>
        <function-ref name="overflow" scoped="" ref="0x40ae7010"/>
        <function-ref name="isOn" scoped="" ref="0x40ae7c68"/>
        <function-ref name="set" scoped="" ref="0x40ae8ca0"/>
        <function-ref name="start" scoped="" ref="0x40ae7500"/>
        <function-ref name="stop" scoped="" ref="0x40ae7778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40af5e78" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40af5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40af4070"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40af4150"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40af4230"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40af4310"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40af43f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40af44d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x40af45b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40af4690"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40af4770"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40af4850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40b0fe98" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40b0fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40b0e0c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40b0e1a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40b0e280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40b0e360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40b0e440"/>
        <function-ref name="setControl" scoped="" ref="0x40b0e520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40af1a80" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40af1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b13010"/>
        <function-ref name="fired" scoped="" ref="0x40b14610"/>
        <function-ref name="get" scoped="" ref="0x40b140f8"/>
        <function-ref name="reset" scoped="" ref="0x40b14888"/>
        <function-ref name="isOn" scoped="" ref="0x40b13288"/>
        <function-ref name="set" scoped="" ref="0x40b14370"/>
        <function-ref name="start" scoped="" ref="0x40b14b00"/>
        <function-ref name="stop" scoped="" ref="0x40b14d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40af4b88" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40af4b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40af1640"/>
        <function-ref name="test" scoped="" ref="0x40af1150"/>
        <function-ref name="get" scoped="" ref="0x40af3200"/>
        <function-ref name="captured" scoped="" ref="0x40af3718"/>
        <function-ref name="reset" scoped="" ref="0x40af39b8"/>
        <function-ref name="isOn" scoped="" ref="0x40af13c8"/>
        <function-ref name="set" scoped="" ref="0x40af3478"/>
        <function-ref name="start" scoped="" ref="0x40af3c30"/>
        <function-ref name="stop" scoped="" ref="0x40af3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b136a0" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b136a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b12c90"/>
        <function-ref name="fired" scoped="" ref="0x40b122b0"/>
        <function-ref name="get" scoped="" ref="0x40b13ce8"/>
        <function-ref name="reset" scoped="" ref="0x40b12528"/>
        <function-ref name="isOn" scoped="" ref="0x40b12f08"/>
        <function-ref name="set" scoped="" ref="0x40b12010"/>
        <function-ref name="start" scoped="" ref="0x40b127a0"/>
        <function-ref name="stop" scoped="" ref="0x40b12a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b10340" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b10340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40b0f898"/>
        <function-ref name="fired" scoped="" ref="0x40b10ea0"/>
        <function-ref name="get" scoped="" ref="0x40b10988"/>
        <function-ref name="reset" scoped="" ref="0x40b0f130"/>
        <function-ref name="isOn" scoped="" ref="0x40b0fb10"/>
        <function-ref name="set" scoped="" ref="0x40b10c00"/>
        <function-ref name="start" scoped="" ref="0x40b0f3a8"/>
        <function-ref name="stop" scoped="" ref="0x40b0f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40afab10" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40afab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40af5600"/>
        <function-ref name="test" scoped="" ref="0x40af5110"/>
        <function-ref name="get" scoped="" ref="0x40af7200"/>
        <function-ref name="setScale" scoped="" ref="0x40af5878"/>
        <function-ref name="getScale" scoped="" ref="0x40af5b18"/>
        <function-ref name="reset" scoped="" ref="0x40af7990"/>
        <function-ref name="overflow" scoped="" ref="0x40af7718"/>
        <function-ref name="isOn" scoped="" ref="0x40af5388"/>
        <function-ref name="set" scoped="" ref="0x40af7478"/>
        <function-ref name="start" scoped="" ref="0x40af7c08"/>
        <function-ref name="stop" scoped="" ref="0x40af7e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b4d700" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b4d700"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x403c05d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x403c05d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b4d8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b4dae8" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b4dae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b68600"/>
        <function-ref name="test" scoped="" ref="0x40b68110"/>
        <function-ref name="get" scoped="" ref="0x40b4c200"/>
        <function-ref name="setScale" scoped="" ref="0x40b68878"/>
        <function-ref name="getScale" scoped="" ref="0x40b68b18"/>
        <function-ref name="reset" scoped="" ref="0x40b4c990"/>
        <function-ref name="overflow" scoped="" ref="0x40b4c718"/>
        <function-ref name="isOn" scoped="" ref="0x40b68388"/>
        <function-ref name="set" scoped="" ref="0x40b4c478"/>
        <function-ref name="start" scoped="" ref="0x40b4cc08"/>
        <function-ref name="stop" scoped="" ref="0x40b4ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b66320" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b66320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="TOne" ref="0x404319a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b66a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b65010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b66ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40b65288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b65568" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b65568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b7e010"/>
        <function-ref name="test" scoped="" ref="0x40b80ad8"/>
        <function-ref name="get" scoped="" ref="0x40b65bb0"/>
        <function-ref name="setScale" scoped="" ref="0x40b7e288"/>
        <function-ref name="getScale" scoped="" ref="0x40b7e528"/>
        <function-ref name="reset" scoped="" ref="0x40b80370"/>
        <function-ref name="overflow" scoped="" ref="0x40b800f8"/>
        <function-ref name="isOn" scoped="" ref="0x40b80d50"/>
        <function-ref name="set" scoped="" ref="0x40b65e28"/>
        <function-ref name="start" scoped="" ref="0x40b805e8"/>
        <function-ref name="stop" scoped="" ref="0x40b80860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40b7bae8" loc="63:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40b7bae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="TOne" ref="0x404319a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b90308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b907f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b90580"/>
        <function-ref name="overflow" scoped="" ref="0x40b90a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40aed7f0" loc="62:/home/sumant/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40aed7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b7b010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b7b500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b7b288"/>
        <function-ref name="overflow" scoped="" ref="0x40b7b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ad06b8" loc="48:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ad06b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ad0d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40acf0a0" loc="49:/home/sumant/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC1000CsmaRadioC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40acf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412d40"/>
            <typename><typedef-ref name="T32khz" ref="0x40412f08"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40acf7f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40acfce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40acfa68"/>
        <function-ref name="overflow" scoped="" ref="0x40b8e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b8d5c8" loc="45:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC1000CsmaRadioC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b8d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b8a0d8"/>
        <function-ref name="fired" scoped="" ref="0x40b8b368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b8ba70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b8b818"/>
        <function-ref name="getdt" scoped="" ref="0x40b8a588"/>
        <function-ref name="gett0" scoped="" ref="0x40b8a330"/>
        <function-ref name="isRunning" scoped="" ref="0x40b8b5c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b8dbf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b8bd90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b8de70"/>
        <function-ref name="stop" scoped="" ref="0x40b8b110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ba2280" loc="49:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RoomOccAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ba2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba2458"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba2538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba2618"/>
        <function-ref name="cancel" scoped="" ref="0x40ba26f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba27d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ba2918" loc="50:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RoomOccAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ba2918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba2af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ba2bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba2cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba2d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ba2e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bf1010" loc="51:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RoomOccAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bf1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bf11e8"/>
        <function-ref name="source" scoped="" ref="0x40bf12c8"/>
        <function-ref name="address" scoped="" ref="0x40bf13a8"/>
        <function-ref name="destination" scoped="" ref="0x40bf1488"/>
        <function-ref name="setSource" scoped="" ref="0x40bf1568"/>
        <function-ref name="setDestination" scoped="" ref="0x40bf1648"/>
        <function-ref name="type" scoped="" ref="0x40bf1728"/>
        <function-ref name="setType" scoped="" ref="0x40bf1808"/>
        <function-ref name="isForMe" scoped="" ref="0x40bf18e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40bf19c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40bf1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40bf1c08" loc="52:/home/sumant/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RoomOccAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40bf1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bf1de0"/>
        <function-ref name="noAck" scoped="" ref="0x40bf1ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bf0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40eec4b8" loc="49:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RoomOccAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40eec4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eec690"/>
        <function-ref name="getPayload" scoped="" ref="0x40eec770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eec850"/>
        <function-ref name="cancel" scoped="" ref="0x40eec930"/>
        <function-ref name="sendDone" scoped="" ref="0x40eeca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40eecb50" loc="50:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RoomOccAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40eecb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eecd28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eece08"/>
        <function-ref name="getPayload" scoped="" ref="0x40eecee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eeb010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eeb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40eeb230" loc="51:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RoomOccAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40eeb230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40eeb408"/>
        <function-ref name="source" scoped="" ref="0x40eeb4e8"/>
        <function-ref name="address" scoped="" ref="0x40eeb5c8"/>
        <function-ref name="destination" scoped="" ref="0x40eeb6a8"/>
        <function-ref name="setSource" scoped="" ref="0x40eeb788"/>
        <function-ref name="setDestination" scoped="" ref="0x40eeb868"/>
        <function-ref name="type" scoped="" ref="0x40eeb948"/>
        <function-ref name="setType" scoped="" ref="0x40eeba28"/>
        <function-ref name="isForMe" scoped="" ref="0x40eebb08"/>
        <function-ref name="setGroup" scoped="" ref="0x40eebbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x40eebcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40eebe28" loc="52:/home/sumant/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RoomOccAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40eebe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40eea050"/>
        <function-ref name="noAck" scoped="" ref="0x40eea130"/>
        <function-ref name="wasAcked" scoped="" ref="0x40eea210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f1be40" loc="44:/home/sumant/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RoomOccAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f1be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f17050"/>
        <function-ref name="getPayload" scoped="" ref="0x40f17130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f17210"/>
        <function-ref name="cancel" scoped="" ref="0x40f172f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f173d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40f17540" loc="46:/home/sumant/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RoomOccAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f17540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f17718"/>
        <function-ref name="getPayload" scoped="" ref="0x40f177f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f178d8"/>
        <function-ref name="cancel" scoped="" ref="0x40f179b8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f17a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f17bd8" loc="47:/home/sumant/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RoomOccAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f17bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f17db0"/>
        <function-ref name="source" scoped="" ref="0x40f17e90"/>
        <function-ref name="address" scoped="" ref="0x40f16010"/>
        <function-ref name="destination" scoped="" ref="0x40f160f0"/>
        <function-ref name="setSource" scoped="" ref="0x40f161d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f162b0"/>
        <function-ref name="type" scoped="" ref="0x40f16390"/>
        <function-ref name="setType" scoped="" ref="0x40f16470"/>
        <function-ref name="isForMe" scoped="" ref="0x40f16550"/>
        <function-ref name="setGroup" scoped="" ref="0x40f16630"/>
        <function-ref name="localGroup" scoped="" ref="0x40f16710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bb2220" loc="43:/home/sumant/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bb2220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb23f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bb24d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb25b8"/>
        <function-ref name="cancel" scoped="" ref="0x40bb2698"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb2778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40bd4ab8" loc="48:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40bd4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd4ca0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bd4d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd4e60"/>
        <function-ref name="cancel" scoped="" ref="0x40bd3010"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bd4348" loc="46:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bd4348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd4530"/>
        <function-ref name="getPayload" scoped="" ref="0x40bd4610"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd46f0"/>
        <function-ref name="cancel" scoped="" ref="0x40bd47d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd48b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40bd3e08" loc="50:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bd3e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd2010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd20f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bd21d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd22b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40bd2510" loc="169:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40bd2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bd26e8"/>
        <function-ref name="runTask" scoped="" ref="0x40bd27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40bd2948" loc="126:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40bd2948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bd2b20"/>
        <function-ref name="runTask" scoped="" ref="0x40bd2c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40bd3230" loc="49:/home/sumant/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bd3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bd3408"/>
        <function-ref name="source" scoped="" ref="0x40bd34e8"/>
        <function-ref name="address" scoped="" ref="0x40bd35c8"/>
        <function-ref name="destination" scoped="" ref="0x40bd36a8"/>
        <function-ref name="setSource" scoped="" ref="0x40bd3788"/>
        <function-ref name="setDestination" scoped="" ref="0x40bd3868"/>
        <function-ref name="type" scoped="" ref="0x40bd3948"/>
        <function-ref name="setType" scoped="" ref="0x40bd3a28"/>
        <function-ref name="isForMe" scoped="" ref="0x40bd3b08"/>
        <function-ref name="setGroup" scoped="" ref="0x40bd3be8"/>
        <function-ref name="localGroup" scoped="" ref="0x40bd3cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40beea70" loc="46:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RoomOccAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40beea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40beec48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40beed28"/>
        <function-ref name="getPayload" scoped="" ref="0x40beee08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40beeee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bee758" loc="45:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RoomOccAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bee758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bee930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bed150" loc="47:/home/sumant/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RoomOccAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bed150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bed328"/>
        <function-ref name="source" scoped="" ref="0x40bed408"/>
        <function-ref name="address" scoped="" ref="0x40bed4e8"/>
        <function-ref name="destination" scoped="" ref="0x40bed5c8"/>
        <function-ref name="setSource" scoped="" ref="0x40bed6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40bed788"/>
        <function-ref name="type" scoped="" ref="0x40bed868"/>
        <function-ref name="setType" scoped="" ref="0x40bed948"/>
        <function-ref name="isForMe" scoped="" ref="0x40beda28"/>
        <function-ref name="setGroup" scoped="" ref="0x40bedb08"/>
        <function-ref name="localGroup" scoped="" ref="0x40bedbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40be9a30" loc="45:/home/sumant/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RoomOccAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40be9a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40412900"/>
            <typename><typedef-ref name="TMilli" ref="0x40412ac8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40be7528"/>
        <function-ref name="fired" scoped="" ref="0x40be87c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40be8ec8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40be8c70"/>
        <function-ref name="getdt" scoped="" ref="0x40be79d8"/>
        <function-ref name="gett0" scoped="" ref="0x40be7780"/>
        <function-ref name="isRunning" scoped="" ref="0x40be8a18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40be8068"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40be7208"/>
        <function-ref name="startOneShot" scoped="" ref="0x40be82e8"/>
        <function-ref name="stop" scoped="" ref="0x40be8568"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/sumant/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4045e2c8" loc="62:/home/sumant/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/sumant/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/sumant/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/sumant/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40459738" loc="60:/home/sumant/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/sumant/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404605d8" loc="60:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40460480" loc="60:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4045cc58" loc="31:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404612a8" loc="39:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40461150" loc="39:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40461970" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40461818" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40461ec8" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/sumant/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4046da20" loc="44:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4046de08" loc="45:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4046d290" loc="42:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4046c608" loc="47:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4046d650" loc="43:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4046c210" loc="46:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40468b38" loc="40:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40468ec8" loc="41:/home/sumant/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x404a4138" loc="32:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x404a0c28" loc="25:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x404a4628" loc="39:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000" loc="59:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
      <documentation loc="49:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <short>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.</short>
        <long>&#10; Low-level CC1000 radio-access operations that must be provided by a&#10; platform wishing to use this CC1000 implementation.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404a1aa8" loc="63:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="60:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Initialize CC1K pins&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x4049d820" loc="77:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="72:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read a value from a CC1000 register.</short>
          <long>&#10; Read a value from a CC1000 register.&#10; @param addr Which CC1000 register&#10; @return Value of register&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4049d6c8" loc="77:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4049d218" loc="70:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="65:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Write a value to a CC1000 register.</short>
          <long>&#10; Write a value to a CC1000 register.&#10; @param addr Which CC1000 register&#10; @param data Value to write&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404a1ea0" loc="70:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4049d0b8" loc="70:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOCK" ref="0x4049dca8" loc="83:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
        <documentation loc="79:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000.nc">
          <short>&#10; Read the state of the CHP_OUT pin&#10; </short>
          <long>&#10; Read the state of the CHP_OUT pin&#10; @return State of CHP_OUT as a boolean (TRUE for high)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplCC1000Spi" loc="50:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
      <documentation loc="42:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <short>&#10; Interface to the CC1000 chip's serial bus.</short>
        <long>&#10; Interface to the CC1000 chip's serial bus. This isn't really an SPI,&#10; but the mica2 interface was done using the Atmega128 SPI hardware. Hence&#10; the name.&#10;&#10; @author Jaein Jeong&#10; @author Philip buonadonna&#10;</long>
      </documentation>
      <function command="" provided="0" name="isBufBusy" ref="0x404b60c8" loc="62:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="58:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Is write buffer busy with the last transmission?&#10; </short>
          <long>&#10; Is write buffer busy with the last transmission?&#10; @return TRUE if the buffer is busy, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="initSlave" ref="0x404bf338" loc="85:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="82:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Initialise the interface to the CC1000 bus.</short>
          <long>&#10; Initialise the interface to the CC1000 bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x404b6ee8" loc="80:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="77:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Disable CC1000 bus interrupts.</short>
          <long>&#10; Disable CC1000 bus interrupts.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeByte" ref="0x404bac20" loc="56:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="52:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Write a byte to the CC1000 bus.</short>
          <long>&#10; Write a byte to the CC1000 bus.&#10; @param data Byte to write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404baac8" loc="56:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x404b6a00" loc="75:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="70:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus.</short>
          <long>&#10; Enable dataReady events on every byte sent or received from the CC1000&#10; bus. After this is called, dataReady events will be signaled every&#10; 8 CC1000 data clocks.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x404bf758" loc="90:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="87:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus &#34;transmit&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="readByte" ref="0x404b6590" loc="68:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="64:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Get the last byte received from the CC1000 bus.</short>
          <long>&#10; Get the last byte received from the CC1000 bus.&#10; @return Last byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x404bfb98" loc="95:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="92:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.</short>
          <long>&#10; Switch the interface to the CC1000 bus to &#34;receive&#34; mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x404be188" loc="103:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
        <documentation loc="97:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
          <short>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks.</short>
          <long>&#10; If enableIntr() is called, this event will be signaled every 8 CC1000&#10; data clocks. &#10; @param data In &#34;receive&#34; mode, the last value received from the CC1000 &#10;   bus.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplCC1000Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404be030" loc="103:/home/sumant/tinyos-main/tos/chips/cc1000/HplCC1000Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/sumant/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/sumant/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403c3390" loc="57:/home/sumant/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/sumant/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403c3c98" loc="72:/home/sumant/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/sumant/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x403c37d0" loc="65:/home/sumant/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/sumant/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/sumant/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x403c4b68" loc="67:/home/sumant/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/sumant/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x403c9090" loc="75:/home/sumant/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/sumant/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/sumant/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/sumant/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4043be30" loc="76:/home/sumant/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/sumant/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/sumant/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/sumant/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4044f310" loc="62:/home/sumant/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/sumant/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403fa340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/sumant/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/sumant/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40448408" loc="52:/home/sumant/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/sumant/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405ca178" loc="80:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x405ccbc0" loc="80:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x405ccdd8" loc="80:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405ca010" loc="80:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405d5dd0" loc="135:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d5a70" loc="135:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405d5c50" loc="135:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405d5510" loc="123:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405cae18" loc="96:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cacc0" loc="96:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405d7bf8" loc="110:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d78a0" loc="110:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405d7a98" loc="110:/home/sumant/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x405d9350" loc="65:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d91f8" loc="65:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405d9d20" loc="78:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d9bc8" loc="78:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405e5cc8" loc="126:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e5968" loc="126:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405e5b48" loc="126:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405e5380" loc="106:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x405e49b8" loc="94:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e4678" loc="94:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405e4858" loc="94:/home/sumant/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x405db548" loc="49:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405db548"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x405db9f8" loc="55:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x405e01c8" loc="63:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405db548"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405dbe78" loc="63:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x405e0068" loc="63:/home/sumant/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405db548"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x405ec168" loc="113:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405ec010" loc="113:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x405eceb0" loc="138:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405ecd58" loc="138:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405da8e0" loc="104:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405ec678" loc="130:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/sumant/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/sumant/tinyos-main/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x405ce3f0" loc="78:/home/sumant/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/sumant/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
              <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cfe88" loc="78:/home/sumant/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x405ce088" loc="78:/home/sumant/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405ce268" loc="78:/home/sumant/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405d3418" loc="53:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405d3418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405dec28" loc="136:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405d2a00" loc="83:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x405d1bc0" loc="114:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405d1878" loc="114:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405d1a60" loc="114:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x405d13d0" loc="98:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x405dc5c0" loc="151:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x405dc090" loc="144:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405d2e90" loc="92:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x405d3a70" loc="64:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405d3918" loc="64:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x405de608" loc="129:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405de2c0" loc="129:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405de4a8" loc="129:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x405d2168" loc="73:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405d2010" loc="73:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405d2638" loc="78:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/sumant/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x405b8258" loc="61:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x405b86a0" loc="67:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x405b8b20" loc="72:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x405b7458" loc="83:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x405b6158" loc="100:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405b6600" loc="117:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x405b7010" loc="77:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405b6d40" loc="134:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x405b6be8" loc="134:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x405b9e00" loc="56:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x405b78d8" loc="89:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x405b7d00" loc="94:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/sumant/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40623480" loc="120:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40615ac8" loc="97:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406154c8" loc="88:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40623010" loc="102:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40623b78" loc="128:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/sumant/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x406338e0" loc="68:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40633480" loc="61:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40633070" loc="54:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40626ae0" loc="53:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/sumant/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x40630d50" loc="20:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/sumant/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40641de0" loc="56:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4063ed40" loc="75:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x406419e8" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x4063e878" loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x4063e720" loc="70:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x406415e0" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x4063e268" loc="63:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40647770" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/sumant/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/sumant/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4069f9b0" loc="53:/home/sumant/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/sumant/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4069c010" loc="61:/home/sumant/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/sumant/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/sumant/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x406a83a8" loc="65:/home/sumant/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/sumant/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x406a9e50" loc="59:/home/sumant/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/sumant/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4069b6d8" loc="56:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x406ab0f8" loc="73:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4069b1a8" loc="46:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4069bbe8" loc="65:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406ab6d0" loc="81:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/sumant/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/sumant/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/sumant/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x4069e998" loc="90:/home/sumant/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/sumant/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x4069ee98" loc="98:/home/sumant/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/sumant/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x406a3e20" loc="79:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4069d760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406a3cc8" loc="79:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4069d760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x406a6a98" loc="53:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x406a3188" loc="62:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4069d760"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406a3030" loc="62:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4069d760"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x406a3738" loc="70:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/sumant/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4069d760"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/sumant/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x406f0920" loc="62:/home/sumant/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/sumant/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/sumant/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/sumant/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x406ece48" loc="95:/home/sumant/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/sumant/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406fc3c0" loc="105:/home/sumant/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/sumant/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/sumant/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4073e310" loc="53:/home/sumant/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4073e310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4073e7f0" loc="61:/home/sumant/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/sumant/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4074d9a0" loc="57:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4074d9a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4074db08" loc="57:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4074db08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40745010" loc="64:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4074db08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40745a38" loc="76:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40745538" loc="71:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40745e38" loc="82:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/sumant/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4073bbd0" loc="56:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4073bbd0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4073bd38" loc="56:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40749010" loc="109:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4074ccd0" loc="78:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4074b9b0" loc="103:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4074b660" loc="103:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
          </variable>
          <variable name="dt" ref="0x4074b850" loc="103:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4074b158" loc="88:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x407494a0" loc="116:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4074c390" loc="66:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4074c238" loc="66:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073bd38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4074c870" loc="73:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/sumant/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x40768368" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041ab80"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4041ada8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40767930" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041cc80"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4041cea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40768e40" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041e560"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4041e788"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40767480" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041e560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4041e788"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40767328" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041e560"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x4041e788"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40765010" loc="54:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041cc80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4041cea8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40767de0" loc="54:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041cc80"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x4041cea8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40768988" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041ab80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4041ada8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40768830" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4041ab80"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x4041ada8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x407724a8" loc="38:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x40772978" loc="44:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40772090" loc="32:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40772e38" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x407755a8" loc="21:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40418d10"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x4041f010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40775b98" loc="27:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40418d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4041f010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40775a40" loc="27:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40418d10"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x4041f010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40765de8" loc="41:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40765de8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40763d20" loc="74:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40764cc8" loc="58:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40764300" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40765de8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407630f8" loc="62:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407621a8" loc="80:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40764888" loc="54:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40765de8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40764730" loc="54:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40765de8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40763500" loc="65:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407638f8" loc="68:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4075c3e8" loc="55:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4075c3e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40759ba0" loc="98:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40759310" loc="87:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4075c8d8" loc="61:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4075c3e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40758168" loc="104:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40758010" loc="104:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x407585f8" loc="110:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4075a6c8" loc="75:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4075a2a8" loc="70:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40759778" loc="93:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4075ce50" loc="67:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4075c3e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4075ccf8" loc="67:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4075c3e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4075aad0" loc="78:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4075aec8" loc="81:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4082c578" loc="52:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4082c578"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4082ca48" loc="58:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40841228" loc="66:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4082c578"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4082cee8" loc="66:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x408410c8" loc="66:/home/sumant/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4082c578"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4084e3a0" loc="100:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4083bb38" loc="100:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4083bd60" loc="100:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4084e010" loc="101:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4084e230" loc="101:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4084c708" loc="119:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4084ecc0" loc="119:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4084eeb0" loc="119:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x4084c0d0" loc="119:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x4084c328" loc="120:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x4084c590" loc="120:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40839640" loc="70:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4083ce38" loc="70:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40839088" loc="70:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x408392b0" loc="71:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x408394d0" loc="71:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408386f8" loc="91:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40838170" loc="81:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40839da0" loc="81:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40838010" loc="81:/home/sumant/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40859418" loc="114:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40849ad0" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4040f6b0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x4040f938"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x408588b8" loc="140:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40858760" loc="140:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x408598d8" loc="122:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x408435b8" loc="82:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40845168" loc="58:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4040f6b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4040f938"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40845010" loc="58:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4040f6b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x4040f938"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40843e08" loc="91:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40858210" loc="133:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40858d60" loc="150:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x408439b8" loc="86:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x4085a700" loc="99:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x4085a2d0" loc="95:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x4085ab38" loc="106:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40859d48" loc="127:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40845c80" loc="69:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40413900"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40413ca8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40845b28" loc="69:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40413900"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40413ca8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40859018" loc="110:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40845650" loc="64:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40413900"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40413ca8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40843158" loc="75:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40856648" loc="156:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408564f0" loc="156:/home/sumant/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/sumant/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/sumant/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4084ac18" loc="95:/home/sumant/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/sumant/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40847138" loc="105:/home/sumant/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/sumant/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x408efea0" loc="35:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408efea0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408ec038" loc="35:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408ec038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x408eb220" loc="63:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408ec038"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408eb0c8" loc="63:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x408ebcb8" loc="70:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ebb60" loc="70:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x408ec6c0" loc="49:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ec568" loc="49:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408e97b0" loc="78:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408ec038"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e9440" loc="78:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x408e9650" loc="78:/home/sumant/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408ec038"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x408fe8e0" loc="65:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408fe548" loc="65:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x408fe780" loc="65:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x408fd3b8" loc="71:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408fd260" loc="71:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x408fe070" loc="57:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x409019e0" loc="52:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40901888" loc="52:/home/sumant/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x408e29e0" loc="59:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e2888" loc="59:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x408ee4f8" loc="71:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ee3a0" loc="71:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x408ef010" loc="85:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408eee28" loc="85:/home/sumant/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x408dbc50" loc="177:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x405c00d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408dbaf8" loc="177:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x408de5d0" loc="88:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408de478" loc="88:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x408e0518" loc="68:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408e0bb0" loc="78:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408e0a58" loc="78:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408dfed0" loc="121:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408dfb68" loc="121:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408dfd70" loc="121:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408df1e8" loc="103:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408dee50" loc="103:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408df088" loc="103:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x408f45f0" loc="147:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408f4498" loc="147:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x408db170" loc="162:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408f4df8" loc="162:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x408db010" loc="162:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x405bbe60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408dda90" loc="136:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408dd938" loc="136:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x408f18e8" loc="187:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x405c00d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408f1588" loc="187:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408f1788" loc="187:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x405c00d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x408f21a8" loc="195:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/sumant/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x405c00d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x409093d8" loc="58:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40909280" loc="58:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4090cab0" loc="50:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090c958" loc="50:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x409075b8" loc="72:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40907460" loc="72:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40909cb0" loc="65:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40909b58" loc="65:/home/sumant/tinyos-main/tos/chips/cc1000/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/sumant/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/sumant/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x409105e8" loc="47:/home/sumant/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/sumant/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40910490" loc="47:/home/sumant/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40903c88" loc="75:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40903948" loc="75:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40903b28" loc="75:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40919a18" loc="125:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409196b8" loc="125:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40919898" loc="125:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40919158" loc="112:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4091cb38" loc="89:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4091c9e0" loc="89:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4091a820" loc="100:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4091a4c8" loc="100:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4091a6c0" loc="100:/home/sumant/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaControl" loc="40:/home/sumant/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <short>&#10; Interface for activating/deactivating congestion control.</short>
        <long>&#10; Interface for activating/deactivating congestion control.&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   August 31 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableCca" ref="0x409425e8" loc="51:/home/sumant/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="47:/home/sumant/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Disable congestion control.</short>
          <long>&#10; Disable congestion control.&#10; @return SUCCESS if congestion control disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableCca" ref="0x40942138" loc="45:/home/sumant/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
        <documentation loc="41:/home/sumant/tinyos-main/tos/chips/cc1000/CsmaControl.nc">
          <short>&#10; Enable congestion control.</short>
          <long>&#10; Enable congestion control.&#10; @return SUCCESS if congestion control enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaBackoff" loc="40:/home/sumant/tinyos-main/tos/interfaces/CsmaBackoff.nc">
      <documentation loc="33:/home/sumant/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <short>&#10; Interface for MAC Backoff values from the radio stack.</short>
        <long>&#10; Interface for MAC Backoff values from the radio stack.&#10; Allows application to change the backoff on a per packet basis.&#10; Only used if congestion control is enabled.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function event="" provided="0" name="congestion" ref="0x40941e18" loc="56:/home/sumant/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="50:/home/sumant/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return backoff time after message m could not be send due to congestion.</short>
          <long>&#10; Return backoff time after message m could not be send due to congestion.&#10; The units are raio dependent.&#10; @param 'message_t* ONE m'&#10; @return Backoff time after congestion&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40941cc0" loc="56:/home/sumant/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initial" ref="0x40941468" loc="48:/home/sumant/tinyos-main/tos/interfaces/CsmaBackoff.nc">
        <documentation loc="42:/home/sumant/tinyos-main/tos/interfaces/CsmaBackoff.nc">
          <short>&#10; Return initial backoff time before attempting to send message m.</short>
          <long>&#10; Return initial backoff time before attempting to send message m. The&#10; units are radio dependent.&#10; @param 'message_t* ONE m'&#10; @return Initial backoff time&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x40941310" loc="48:/home/sumant/tinyos-main/tos/interfaces/CsmaBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/sumant/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/sumant/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40968b60" loc="59:/home/sumant/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40968b60"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40968cc8" loc="59:/home/sumant/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40968cc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40965328" loc="66:/home/sumant/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/sumant/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40968cc8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409651d0" loc="66:/home/sumant/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40968cc8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/sumant/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40957a10" loc="52:/home/sumant/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/sumant/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40957568" loc="46:/home/sumant/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/sumant/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Squelch" loc="45:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
      <documentation loc="41:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <short>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; </short>
        <long>&#10; CC1000 internal noise floor (aka squelch value) interface&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x4096b380" loc="57:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="53:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Return current estimated noise floor&#10; </short>
          <long>&#10; Return current estimated noise floor&#10; @return Noise floor value&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="settled" ref="0x4096b7d0" loc="64:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="59:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; </short>
          <long>&#10; Check if noise floor estimate is considered stable (typically after&#10; some number of measurements)&#10; @return TRUE if noise floor estimate considered stable, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="adjust" ref="0x4095deb0" loc="51:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
        <documentation loc="47:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
          <short>&#10; Adjust noise floor based on new noise measurement&#10; </short>
          <long>&#10; Adjust noise floor based on new noise measurement&#10; @param data noise measurement&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Squelch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4095dd58" loc="51:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Squelch.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC1000Control" loc="45:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
      <documentation loc="40:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <short>&#10; CC1000 internal radio control interface.</short>
        <long>&#10; CC1000 internal radio control interface.&#10; @author Philip Buonadonna&#10; @aythor Jaein Jeong&#10;</long>
      </documentation>
      <function command="" provided="0" name="tunePreset" ref="0x4095ec10" loc="60:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="52:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.</short>
          <long>&#10; Tune the radio to one of the frequencies available in the CC1K_Params&#10; table.  Calling Tune will allso reset the rfpower and LockVal&#10; selections to the table values.&#10; &#10; @param freq The index into the CC1K_Params table that holds the&#10; desired preset frequency parameters.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="freq" ref="0x4095eab8" loc="60:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="biasOn" ref="0x40970a20" loc="104:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="98:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the bias power on.</short>
          <long>&#10; Turn the bias power on. This function must be followed by a call to&#10; either rxMode() or txMode() to place the radio in a recieve/transmit&#10; state respectively. There is approximately a 200us delay when&#10; restoring bias power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRFPower" ref="0x4096f5d8" loc="121:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="116:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the present RF power index.</short>
          <long>&#10; Get the present RF power index.&#10;&#10; @return The power index value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tuneManual" ref="0x40971378" loc="74:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="62:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Tune the radio to a given frequency.</short>
          <long>&#10; Tune the radio to a given frequency. Since the CC1000 uses a digital&#10; frequency synthesizer, it cannot tune to just an arbitrary frequency.&#10; This routine will determine the closest achievable channel, compute&#10; the necessary parameters and tune the radio.&#10; &#10; @param The desired channel frequency, in Hz.&#10; &#10; @return The actual computed channel frequency, in Hz.  A return value&#10; of '0' indicates that no frequency was computed and the radio was not&#10; tuned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DesiredFreq" ref="0x40971220" loc="74:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4008b848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="selectLock" ref="0x4096fba8" loc="129:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="123:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.</short>
          <long> &#10; Select the signal to monitor at the CHP_OUT pin of the CC1000.  See&#10; the CC1000 data sheet for the available signals.&#10; &#10; @param LockVal The index of the signal to monitor at the CHP_OUT pin&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="LockVal" ref="0x4096fa50" loc="129:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x4095e668" loc="50:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="47:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Initialise the radio to its default state.</short>
          <long>&#10; Initialise the radio to its default state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLock" ref="0x4096e0c8" loc="137:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="131:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Get the binary value from the CHP_OUT pin.</short>
          <long>&#10; Get the binary value from the CHP_OUT pin.  Analog signals cannot be&#10; read using function.&#10;&#10; @return 1 - Pin is high or 0 - Pin is low&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="coreOn" ref="0x40970558" loc="96:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="91:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.</short>
          <long>&#10; Turn off the bias power on the CC1000 radio, but leave the core and&#10; crystal oscillator powered.  This will result in approximately a 750&#10; uA power savings.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="txMode" ref="0x40971ce8" loc="84:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="81:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio into transmit mode.</short>
          <long>&#10; Shift the CC1000 Radio into transmit mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getLOStatus" ref="0x4096e588" loc="147:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="139:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.</short>
          <long>&#10; Returns whether the present frequency set is using high-side LO&#10; injection or not.  This information is used to determine if the data&#10; from the CC1000 needs to be inverted or not.&#10;&#10; @return TRUE if high-side LO injection is being used (i.e. data does NOT need to be inverted&#10; at the receiver.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxMode" ref="0x40970138" loc="89:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="86:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Shift the CC1000 Radio in receive mode.</short>
          <long>&#10; Shift the CC1000 Radio in receive mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40971910" loc="79:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="76:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Turn the CC1000 off&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRFPower" ref="0x4096f090" loc="114:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
        <documentation loc="106:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
          <short>&#10; Set the transmit RF power value.</short>
          <long>&#10; Set the transmit RF power value.  The input value is simply an&#10; arbitrary index that is programmed into the CC1000 registers.  Consult&#10; the CC1000 datasheet for the resulting power output/current&#10; consumption values.&#10;&#10; @param power A power index between 1 and 255.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC1000Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="power" ref="0x40970f20" loc="114:/home/sumant/tinyos-main/tos/chips/cc1000/CC1000Control.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4008ab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ByteRadio" loc="19:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
      <documentation loc="10:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <short>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission).</short>
        <long>&#10; Radio logic is split between Csma (media-access control, low-power&#10; listening and general control) and SendReceive (packet reception and&#10; transmission). This interface specifies the interaction between these&#10; two components.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="rts" ref="0x4095fa58" loc="25:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="21:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive wants to send a packet.</short>
          <long>&#10; SendReceive wants to send a packet.&#10; @param msg Message to be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095f900" loc="25:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
                <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="listen" ref="0x4095a928" loc="61:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="58:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Enable listening for incoming packets.</short>
          <long>&#10; Enable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="syncing" ref="0x40959890" loc="85:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="76:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Detect if SendReceive is attempting to sync with an incoming packet.</short>
          <long>&#10; Detect if SendReceive is attempting to sync with an incoming packet.&#10; During sync, idleByte events are not signaled. If sync is successful,&#10; an rx() event will be signaled, if it fails, idleByte events will&#10; resume. If syncing() returns TRUE, the last idleByte() event must&#10; have had preamble = TRUE.&#10;&#10; @return TRUE if a sync attempt is in progress, FALSE if not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x409581d8" loc="95:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="92:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Message reception is complete.</short>
          <long>&#10; Message reception is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreambleLength" ref="0x4095a500" loc="56:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="52:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Get message preamble length.</short>
          <long>&#10; Get message preamble length.&#10; @return Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idleByte" ref="0x40959338" loc="74:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="68:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.</short>
          <long>&#10; SendReceive signals this event for every radio-byte-time while&#10; listening is enabled and a message isn't being received or&#10; transmitted.&#10; @param preamble TRUE if a message preamble byte has been received&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="preamble" ref="0x409591e0" loc="74:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cts" ref="0x4095fe68" loc="32:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="27:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Access to the media granted.</short>
          <long>&#10; Access to the media granted. Start sending. SendReceive must signal&#10; sendDone when transmission is complete. Note: the media-access-contro&#10; layer must have enabled listening before calling cts().&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPreambleLength" ref="0x4095a010" loc="50:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="46:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Set message preamble length.</short>
          <long>&#10; Set message preamble length.&#10; @param bytes Preamble length in bytes&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bytes" ref="0x4095bde8" loc="50:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4008b1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4095b938" loc="44:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="41:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Transmission complete.</short>
          <long>&#10; Transmission complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x4095ad28" loc="66:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="63:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Disable listening for incoming packets.</short>
          <long>&#10; Disable listening for incoming packets.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxMessage" ref="0x4095b478" loc="39:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="34:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.</short>
          <long>&#10; Between the rts() and sendDone() events, this must return the&#10; message under transmission.&#10; @return Message being transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x405c3be8"/>
              <typename><typedef-ref name="message_t" ref="0x405cf9a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rx" ref="0x40959de0" loc="90:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
        <documentation loc="87:/home/sumant/tinyos-main/tos/chips/cc1000/ByteRadio.nc">
          <short>&#10; A message is being received&#10;</short>
        </documentation>
        <interfacedef-ref qname="ByteRadio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/sumant/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40ab1a88" loc="53:/home/sumant/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ab1a88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40ace168" loc="64:/home/sumant/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/sumant/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x403c6628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ab1a88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40ace010" loc="64:/home/sumant/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ab1a88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40abe708" loc="50:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40adf010" loc="60:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40abeb78" loc="55:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x405c00d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40abe218" loc="45:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x405c00d0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40ac3e80" loc="45:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x405c00d0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40abe0b8" loc="45:/home/sumant/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x405c0330"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40ae0b00" loc="58:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404328e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40432b08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x40ae1528" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40424c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40424e58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ae13d0" loc="50:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40424c30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40424e58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40ae0038" loc="54:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40433398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x404335c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x40ae6e80" loc="45:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40420aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40420cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40ae0648" loc="55:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40433398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x404335c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40ae04f0" loc="55:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40433398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x404335c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b02168" loc="59:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404328e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40432b08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b02010" loc="59:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404328e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40432b08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x40ae3888" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4042a2c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4042a4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x40ae33b8" loc="46:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40424c30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40424e58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x40ae3ed0" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40420aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40420cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ae3d78" loc="49:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40420aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40420cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x40ae1b48" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4042a2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4042a4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40ae19f0" loc="51:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4042a2c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x4042a4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40ae52f8" loc="40:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae52f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40afee18" loc="88:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40afecc0" loc="88:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40afe430" loc="76:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ae57f0" loc="47:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae52f8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40b00350" loc="60:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae52f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b001f8" loc="60:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae52f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b00790" loc="64:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40afe890" loc="82:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403bc6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ae5d68" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae52f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40ae5c10" loc="53:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ae52f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b00b98" loc="67:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40afe010" loc="70:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/sumant/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
